{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\showgroupdetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../css/sidebar.css';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { useUser } from '../contexts/userprovider';\nimport { Avatar, IconButton, makeStyles, Modal } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckIcon from '@material-ui/icons/Check';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport Picker from 'emoji-picker-react';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AddGroupMember from './addgroupmember';\nimport Dialog from '@material-ui/core/Dialog';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  }\n});\n\nfunction ShowGroupDetails() {\n  _s();\n\n  const {\n    selectedConversation,\n    createConversation,\n    conversations,\n    setSelectedConversation,\n    UpdateConversation\n  } = useConversations();\n  const [EditGroupNameGlag, setEditGroupNameGlag] = useState(false);\n  const [EditGroupDescriptionGlag, setEditGroupDescriptionGlag] = useState(false);\n  const [emojiFlag, setEmojiFlag] = useState(false);\n  const [Text, setText] = useState(selectedConversation.Name);\n  const [Description, setDescription] = useState(selectedConversation.description);\n  const {\n    info,\n    config\n  } = useUser();\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [deleteUserDialog, setDeleteUserDialog] = useState(false);\n  const [userToDelete, setUserToDelete] = useState();\n  const [previewImage, setPreviewImage] = useState();\n  useEffect(() => {\n    setEditGroupNameGlag(false);\n    setEditGroupDescriptionGlag(false);\n    setEmojiFlag(false);\n  }, [selectedConversation]);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setText(Text + emojiObject.emoji);\n  };\n\n  const onDescriptionEmojiClick = (event, emojiObject) => {\n    setDescription(Description + emojiObject.emoji);\n  };\n\n  function changeGroupName() {\n    let message = {\n      name: \"manager\",\n      message: sessionStorage['name'] + \" changed group name to \" + Text,\n      timeSent: '',\n      containsImage: false,\n      containsRecord: false,\n      recordURL: null\n    };\n    let messages = selectedConversation.Messages;\n    messages.push(message);\n    let updatedConversation = { ...selectedConversation,\n      Name: Text,\n      Messages: messages,\n      LastMasage: message\n    };\n    UpdateConversation(updatedConversation);\n    setEditGroupNameGlag(false);\n  }\n\n  function openConversation(participant) {\n    let existsFlag = false;\n    conversations.forEach(conversation => {\n      if (conversation.isGroup === false && conversation.Participants[0].id === participant.id) {\n        existsFlag = true;\n        setSelectedConversation(conversation);\n      }\n    });\n\n    if (!existsFlag) {\n      let participantId = [];\n      participantId.push(participant.id);\n      createConversation(participantId, participant.name, participant.imageName, false);\n    }\n  }\n\n  function changeGroupDescription() {\n    let message = {\n      name: \"manager\",\n      message: sessionStorage['name'] + \" changed group Description\",\n      timeSent: '',\n      containsImage: false,\n      containsRecord: false,\n      recordURL: null\n    };\n    let messages = selectedConversation.Messages;\n    messages.push(message);\n    let updatedConversation = { ...selectedConversation,\n      description: Description,\n      Messages: messages,\n      LastMessage: message\n    };\n    UpdateConversation(updatedConversation);\n    setEditGroupDescriptionGlag(false);\n  }\n\n  function removeFromGroup() {\n    let message = {\n      name: \"manager\",\n      message: sessionStorage['name'] + \" left the group\",\n      timeSent: '',\n      containsImage: false,\n      containsRecord: false,\n      recordURL: null\n    };\n    let messages = selectedConversation.Messages;\n    messages.push(message);\n    let updatedConversation = { ...selectedConversation,\n      Messages: messages,\n      LastMessage: message\n    };\n    UpdateConversation(updatedConversation);\n    setDialogOpen(false);\n  }\n\n  function beforeDeleteUser(participant) {\n    setUserToDelete(participant);\n    setDeleteUserDialog(true);\n  }\n\n  function removeUserFromGroup() {\n    let messages = selectedConversation.Messages;\n    let message = {\n      name: \"manager\",\n      message: sessionStorage['name'] + \" removed \" + userToDelete.name + \" from the group \",\n      timeSent: '',\n      containsImage: false,\n      containsRecord: false,\n      recordURL: null\n    };\n    messages.push(message);\n    let participants = selectedConversation.Participants.filter(participant => participant.id !== userToDelete.id);\n    let updatedConversation = { ...selectedConversation,\n      Participants: participants,\n      Messages: messages,\n      LastMessage: message\n    };\n    UpdateConversation(updatedConversation);\n    setUserToDelete();\n    setDeleteUserDialog(false);\n  }\n\n  function closeModal() {\n    setModalOpen(false);\n  }\n\n  async function handleFileUpload(e) {\n    let picturePath = '';\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    data.append(\"upload_preset\", \"whatsApp_clone\");\n    data.append(\"cloud_name\", \"dsrgpqnyv\");\n\n    try {\n      let response = await axios.post(\"https://api.cloudinary.com/v1_1/dsrgpqnyv/image/upload\", data);\n      picturePath = response.data.url;\n    } catch (err) {\n      console.log(err);\n    }\n\n    try {\n      let conversation = { ...selectedConversation,\n        conversationImage: e.target.files[0]\n      };\n      delete conversation._id;\n      let response = await axios.put(\"https://messagesapp1.herokuapp.com//api/conversations/\" + selectedConversation._id, conversation, config);\n      console.log(response); // if(response.data==='Updated')\n      //   setInfo(obj)\n    } catch (err) {\n      console.log(err);\n    }\n\n    setPreviewImage(window.URL.createObjectURL(e.target.files[0]));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user_info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change_group_image\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: previewImage,\n          style: {\n            height: '110px',\n            width: '110px',\n            backgroundColor: 'gray',\n            margin: '15px',\n            marginTop: '30px'\n          },\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change_image_on_hover\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            position: 'absolute',\n            zIndex: '1',\n            color: 'white',\n            curser: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(PeopleAltIcon, {\n            style: {\n              position: 'absolute',\n              zIndex: '0',\n              opacity: '0.1',\n              height: '80px',\n              width: '80px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AddAPhotoIcon, {\n            style: {\n              height: '30px',\n              width: '30px',\n              color: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            id: \"file\",\n            type: \"file\",\n            name: \"file\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '10px'\n            },\n            children: \"Change Picture \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name_and_lastSeen\",\n        children: [EditGroupNameGlag ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [emojiFlag ? /*#__PURE__*/_jsxDEV(Picker, {\n            onEmojiClick: (e, emojiObject) => onEmojiClick(e, emojiObject),\n            pickerStyle: {\n              width: '100%',\n              height: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 35\n          }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit_group_name\",\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.root,\n              style: {\n                padding: '3px'\n              },\n              onClick: () => changeGroupName(),\n              children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.root,\n              style: {\n                padding: '3px'\n              },\n              onClick: () => setEmojiFlag(!emojiFlag),\n              children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input_text\",\n              defaultValue: Text,\n              onChange: e => setText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"group_title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedConversation.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setEditGroupNameGlag(true),\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {\n              style: {\n                fontSize: 'large',\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lastSeen\",\n          style: {\n            padding: '10px',\n            paddingLeft: '0px'\n          },\n          children: [\" created at:  \", selectedConversation.createdDate, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group_details_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"group_title\",\n        style: {\n          padding: '5px'\n        },\n        children: \" Description \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 16\n      }, this), EditGroupDescriptionGlag ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [emojiFlag ? /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: (e, emojiObject) => onDescriptionEmojiClick(e, emojiObject),\n          pickerStyle: {\n            width: '100%',\n            height: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 32\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_group_name\",\n          style: {\n            padding: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.root,\n            style: {\n              padding: '3px'\n            },\n            onClick: () => changeGroupDescription(),\n            children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.root,\n            style: {\n              padding: '3px'\n            },\n            onClick: () => setEmojiFlag(!emojiFlag),\n            children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 121\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_text\",\n            defaultValue: Description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group_description_edit\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '15px',\n            marginRight: '5px'\n          },\n          children: selectedConversation.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setEditGroupDescriptionGlag(true),\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            style: {\n              fontSize: 'large'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group_details_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"group_title\",\n        style: {\n          padding: '10px',\n          borderBottom: '1px solid #B0B0B0'\n        },\n        children: [selectedConversation.Participants.length + 1, \" participants\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"Modal\",\n        open: modalOpen,\n        onClose: closeModal,\n        children: /*#__PURE__*/_jsxDEV(AddGroupMember, {\n          closeModal: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 16\n      }, this), selectedConversation.creatorId === sessionStorage['id'] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participant\",\n        style: {\n          cursor: 'pointer',\n          fontSize: '15px'\n        },\n        onClick: () => setModalOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.root,\n            style: {\n              padding: '3px'\n            },\n            children: /*#__PURE__*/_jsxDEV(PersonAdd, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"group_participant_name\",\n          children: \"Add Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 20\n      }, this) : '', selectedConversation.Participants.map((participant, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participant\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => openConversation(participant),\n            style: {\n              display: 'flex',\n              flexGrow: '1',\n              flexDirection: 'row',\n              alignItems: 'center',\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: participant.imageName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexGrow: '1',\n                flexDirection: 'row',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"group_participant_name\",\n                children: participant.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 28\n              }, this), participant.id === selectedConversation.creatorId ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group_admin\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    fontSize: '13px'\n                  },\n                  children: \"Group Manager\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 30\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 22\n          }, this), sessionStorage['id'] === selectedConversation.creatorId ? /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => beforeDeleteUser(participant),\n            style: {\n              padding: '3px'\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              fontSize: \"medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this) : '']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 20\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participant\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexGrow: '1',\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: info.imageName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexGrow: '1',\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"group_participant_name\",\n              children: info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 26\n            }, this), sessionStorage['id'] === selectedConversation.creatorId ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group_admin\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  fontSize: '13px'\n                },\n                children: \"Group Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 28\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group_details_container leave\",\n      onClick: () => setDialogOpen(true),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaveGroup\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.root,\n          style: {\n            padding: '3px'\n          },\n          children: /*#__PURE__*/_jsxDEV(ExitToAppIcon, {\n            style: {\n              color: 'darkred'\n            },\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"group_participant_name\",\n          style: {\n            color: 'darkRed',\n            fontSize: '17px'\n          },\n          children: \"leave Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      className: \"exit_group_dialog\",\n      onClose: () => setDialogOpen(false),\n      open: dialogOpen,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"dialog_title\",\n          children: \" are you sure you want to leave this group?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialog_options_buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dialog_button\",\n            onClick: () => removeFromGroup(),\n            children: \"yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dialog_button\",\n            onClick: () => setDialogOpen(false),\n            children: \"no\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      className: \"exit_group_dialog\",\n      onClose: () => setDeleteUserDialog(false),\n      open: deleteUserDialog,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"dialog_title\",\n          children: \" are you sure you want to delete this user?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialog_options_buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dialog_button\",\n            onClick: () => removeUserFromGroup(),\n            children: \"yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dialog_button\",\n            onClick: () => setDeleteUserDialog(false),\n            children: \"no\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowGroupDetails, \"E4kVSBQ6bsJtWiLNI+TV38+LKRE=\", false, function () {\n  return [useConversations, useUser, useStyles];\n});\n\n_c = ShowGroupDetails;\nexport default ShowGroupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowGroupDetails\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/showgroupdetails.js"],"names":["React","axios","useState","useEffect","useConversations","useUser","Avatar","IconButton","makeStyles","Modal","CloseIcon","EditIcon","CheckIcon","InsertEmoticonIcon","Picker","PersonAdd","ExitToAppIcon","AddGroupMember","Dialog","AddAPhotoIcon","PeopleAltIcon","useStyles","root","backgroundColor","ShowGroupDetails","selectedConversation","createConversation","conversations","setSelectedConversation","UpdateConversation","EditGroupNameGlag","setEditGroupNameGlag","EditGroupDescriptionGlag","setEditGroupDescriptionGlag","emojiFlag","setEmojiFlag","Text","setText","Name","Description","setDescription","description","info","config","classes","modalOpen","setModalOpen","dialogOpen","setDialogOpen","deleteUserDialog","setDeleteUserDialog","userToDelete","setUserToDelete","previewImage","setPreviewImage","onEmojiClick","event","emojiObject","emoji","onDescriptionEmojiClick","changeGroupName","message","name","sessionStorage","timeSent","containsImage","containsRecord","recordURL","messages","Messages","push","updatedConversation","LastMasage","openConversation","participant","existsFlag","forEach","conversation","isGroup","Participants","id","participantId","imageName","changeGroupDescription","LastMessage","removeFromGroup","beforeDeleteUser","removeUserFromGroup","participants","filter","closeModal","handleFileUpload","e","picturePath","data","FormData","append","target","files","response","post","url","err","console","log","conversationImage","_id","put","window","URL","createObjectURL","height","width","margin","marginTop","display","flexDirection","alignItems","position","zIndex","color","curser","opacity","fontSize","padding","value","marginLeft","paddingLeft","createdDate","marginRight","borderBottom","length","creatorId","cursor","map","index","flexGrow"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA4BC,UAA5B,EAAuCC,KAAvC,QAAmD,mBAAnD;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAC;AACzBc,EAAAA,IAAI,EAAE;AACJ,eAAW;AACTC,MAAAA,eAAe,EAAE;AADR;AADP;AADmB,CAAD,CAA5B;;AASA,SAASC,gBAAT,GAA4B;AAAA;;AAExB,QAAM;AAACC,IAAAA,oBAAD;AAAsBC,IAAAA,kBAAtB;AAAyCC,IAAAA,aAAzC;AAAuDC,IAAAA,uBAAvD;AAA+EC,IAAAA;AAA/E,MAAqGzB,gBAAgB,EAA3H;AACA,QAAM,CAAC0B,iBAAD,EAAmBC,oBAAnB,IAAyC7B,QAAQ,CAAC,KAAD,CAAvD;AACA,QAAM,CAAC8B,wBAAD,EAA0BC,2BAA1B,IAAuD/B,QAAQ,CAAC,KAAD,CAArE;AACA,QAAM,CAACgC,SAAD,EAAWC,YAAX,IAAyBjC,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACkC,IAAD,EAAMC,OAAN,IAAiBnC,QAAQ,CAACuB,oBAAoB,CAACa,IAAtB,CAA/B;AACA,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BtC,QAAQ,CAACuB,oBAAoB,CAACgB,WAAtB,CAA7C;AACA,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAgBtC,OAAO,EAA7B;AACA,QAAMuC,OAAO,GAAGvB,SAAS,EAAzB;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4B5C,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC6C,UAAD,EAAaC,aAAb,IAA8B9C,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC+C,gBAAD,EAAkBC,mBAAlB,IAAwChD,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACiD,YAAD,EAAcC,eAAd,IAAiClD,QAAQ,EAA/C;AACA,QAAM,CAACmD,YAAD,EAAcC,eAAd,IAA+BpD,QAAQ,EAA7C;AAIAC,EAAAA,SAAS,CAAC,MACV;AACI4B,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAE,IAAAA,2BAA2B,CAAC,KAAD,CAA3B;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GANQ,EAMP,CAACV,oBAAD,CANO,CAAT;;AASA,QAAM8B,YAAY,GAAG,CAACC,KAAD,EAAQC,WAAR,KACrB;AACIpB,IAAAA,OAAO,CAACD,IAAI,GAAGqB,WAAW,CAACC,KAApB,CAAP;AACH,GAHD;;AAKA,QAAMC,uBAAuB,GAAG,CAACH,KAAD,EAAQC,WAAR,KAChC;AACIjB,IAAAA,cAAc,CAACD,WAAW,GAAGkB,WAAW,CAACC,KAA3B,CAAd;AACH,GAHD;;AAKA,WAASE,eAAT,GACA;AACI,QAAIC,OAAO,GAAC;AAACC,MAAAA,IAAI,EAAC,SAAN;AAAgBD,MAAAA,OAAO,EAAEE,cAAc,CAAC,MAAD,CAAd,GAAwB,yBAAxB,GAAoD3B,IAA7E;AAAkF4B,MAAAA,QAAQ,EAAC,EAA3F;AAA8FC,MAAAA,aAAa,EAAC,KAA5G;AAAkHC,MAAAA,cAAc,EAAC,KAAjI;AAAuIC,MAAAA,SAAS,EAAC;AAAjJ,KAAZ;AACA,QAAIC,QAAQ,GAAC3C,oBAAoB,CAAC4C,QAAlC;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcT,OAAd;AACA,QAAIU,mBAAmB,GAAC,EAAC,GAAG9C,oBAAJ;AAAyBa,MAAAA,IAAI,EAACF,IAA9B;AAAmCiC,MAAAA,QAAQ,EAACD,QAA5C;AAAqDI,MAAAA,UAAU,EAACX;AAAhE,KAAxB;AACAhC,IAAAA,kBAAkB,CAAC0C,mBAAD,CAAlB;AACAxC,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH;;AAED,WAAS0C,gBAAT,CAA0BC,WAA1B,EACA;AACI,QAAIC,UAAU,GAAC,KAAf;AAEAhD,IAAAA,aAAa,CAACiD,OAAd,CAAsBC,YAAY,IAClC;AACI,UAAGA,YAAY,CAACC,OAAb,KAAyB,KAAzB,IAAkCD,YAAY,CAACE,YAAb,CAA0B,CAA1B,EAA6BC,EAA7B,KAAoCN,WAAW,CAACM,EAArF,EACA;AACEL,QAAAA,UAAU,GAAC,IAAX;AACA/C,QAAAA,uBAAuB,CAACiD,YAAD,CAAvB;AACD;AAEJ,KARD;;AAUA,QAAG,CAACF,UAAJ,EACA;AACI,UAAIM,aAAa,GAAC,EAAlB;AACAA,MAAAA,aAAa,CAACX,IAAd,CAAmBI,WAAW,CAACM,EAA/B;AACAtD,MAAAA,kBAAkB,CAACuD,aAAD,EAAgBP,WAAW,CAACZ,IAA5B,EAAkCY,WAAW,CAACQ,SAA9C,EAAwD,KAAxD,CAAlB;AACH;AAEJ;;AAED,WAASC,sBAAT,GACA;AACK,QAAItB,OAAO,GAAC;AAACC,MAAAA,IAAI,EAAC,SAAN;AAAgBD,MAAAA,OAAO,EAAEE,cAAc,CAAC,MAAD,CAAd,GAAwB,4BAAjD;AAA8EC,MAAAA,QAAQ,EAAC,EAAvF;AAA0FC,MAAAA,aAAa,EAAC,KAAxG;AAA8GC,MAAAA,cAAc,EAAC,KAA7H;AAAmIC,MAAAA,SAAS,EAAC;AAA7I,KAAZ;AACA,QAAIC,QAAQ,GAAC3C,oBAAoB,CAAC4C,QAAlC;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcT,OAAd;AACA,QAAIU,mBAAmB,GAAC,EAAC,GAAG9C,oBAAJ;AAAyBgB,MAAAA,WAAW,EAACF,WAArC;AAAiD8B,MAAAA,QAAQ,EAACD,QAA1D;AAAmEgB,MAAAA,WAAW,EAACvB;AAA/E,KAAxB;AACAhC,IAAAA,kBAAkB,CAAC0C,mBAAD,CAAlB;AACAtC,IAAAA,2BAA2B,CAAC,KAAD,CAA3B;AACJ;;AAED,WAASoD,eAAT,GACA;AACG,QAAIxB,OAAO,GAAC;AAACC,MAAAA,IAAI,EAAC,SAAN;AAAgBD,MAAAA,OAAO,EAAEE,cAAc,CAAC,MAAD,CAAd,GAAwB,iBAAjD;AAAmEC,MAAAA,QAAQ,EAAC,EAA5E;AAA+EC,MAAAA,aAAa,EAAC,KAA7F;AAAmGC,MAAAA,cAAc,EAAC,KAAlH;AAAwHC,MAAAA,SAAS,EAAC;AAAlI,KAAZ;AACA,QAAIC,QAAQ,GAAC3C,oBAAoB,CAAC4C,QAAlC;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcT,OAAd;AACA,QAAIU,mBAAmB,GAAC,EAAC,GAAG9C,oBAAJ;AAAyB4C,MAAAA,QAAQ,EAACD,QAAlC;AAA2CgB,MAAAA,WAAW,EAACvB;AAAvD,KAAxB;AACAhC,IAAAA,kBAAkB,CAAC0C,mBAAD,CAAlB;AACAvB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACF;;AAED,WAASsC,gBAAT,CAA0BZ,WAA1B,EACA;AACGtB,IAAAA,eAAe,CAACsB,WAAD,CAAf;AACAxB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACF;;AAED,WAASqC,mBAAT,GACA;AACG,QAAInB,QAAQ,GAAC3C,oBAAoB,CAAC4C,QAAlC;AACA,QAAIR,OAAO,GAAC;AAACC,MAAAA,IAAI,EAAC,SAAN;AAAgBD,MAAAA,OAAO,EAAEE,cAAc,CAAC,MAAD,CAAd,GAAwB,WAAxB,GAAsCZ,YAAY,CAACW,IAAnD,GAA0D,kBAAnF;AAAsGE,MAAAA,QAAQ,EAAC,EAA/G;AAAkHC,MAAAA,aAAa,EAAC,KAAhI;AAAsIC,MAAAA,cAAc,EAAC,KAArJ;AAA2JC,MAAAA,SAAS,EAAC;AAArK,KAAZ;AACAC,IAAAA,QAAQ,CAACE,IAAT,CAAcT,OAAd;AACA,QAAI2B,YAAY,GAAE/D,oBAAoB,CAACsD,YAArB,CAAkCU,MAAlC,CAAyCf,WAAW,IAAGA,WAAW,CAACM,EAAZ,KAAmB7B,YAAY,CAAC6B,EAAvF,CAAlB;AACA,QAAIT,mBAAmB,GAAC,EAAC,GAAG9C,oBAAJ;AAAyBsD,MAAAA,YAAY,EAACS,YAAtC;AAAmDnB,MAAAA,QAAQ,EAACD,QAA5D;AAAqEgB,MAAAA,WAAW,EAACvB;AAAjF,KAAxB;AACAhC,IAAAA,kBAAkB,CAAC0C,mBAAD,CAAlB;AACAnB,IAAAA,eAAe;AACfF,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACF;;AAED,WAASwC,UAAT,GACA;AACG5C,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACF;;AAED,iBAAe6C,gBAAf,CAAgCC,CAAhC,EACA;AAEI,QAAIC,WAAW,GAAC,EAAhB;AAEA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAmBJ,CAAC,CAACK,MAAF,CAASC,KAAT,CAAe,CAAf,CAAnB;AACAJ,IAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA4B,gBAA5B;AACAF,IAAAA,IAAI,CAACE,MAAL,CAAY,YAAZ,EAAyB,WAAzB;;AAEA,QACA;AACE,UAAIG,QAAQ,GAAG,MAAMlG,KAAK,CAACmG,IAAN,CAAW,wDAAX,EAAoEN,IAApE,CAArB;AACAD,MAAAA,WAAW,GAAEM,QAAQ,CAACL,IAAT,CAAcO,GAA3B;AAED,KALD,CAKC,OAAMC,GAAN,EAAU;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB;;AAE7B,QACA;AAEE,UAAIzB,YAAY,GAAC,EAAC,GAAGpD,oBAAJ;AAAyBgF,QAAAA,iBAAiB,EAACb,CAAC,CAACK,MAAF,CAASC,KAAT,CAAe,CAAf;AAA3C,OAAjB;AACA,aAAOrB,YAAY,CAAC6B,GAApB;AACA,UAAIP,QAAQ,GAAG,MAAMlG,KAAK,CAAC0G,GAAN,CAAU,2DAA2DlF,oBAAoB,CAACiF,GAA1F,EAA8F7B,YAA9F,EAA2GlC,MAA3G,CAArB;AAGA4D,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAPF,CAQC;AACC;AAED,KAZD,CAYC,OAAMG,GAAN,EAAU;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB;;AAC7BhD,IAAAA,eAAe,CAACsD,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BlB,CAAC,CAACK,MAAF,CAASC,KAAT,CAAe,CAAf,CAA3B,CAAD,CAAf;AACH;;AAGD,sBACI;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACG,QAAC,MAAD;AAAS,UAAA,GAAG,EAAE7C,YAAd;AAA4B,UAAA,KAAK,EAAE;AAAC0D,YAAAA,MAAM,EAAE,OAAT;AAAkBC,YAAAA,KAAK,EAAE,OAAzB;AAAkCzF,YAAAA,eAAe,EAAC,MAAlD;AAA0D0F,YAAAA,MAAM,EAAC,MAAjE;AAAwEC,YAAAA,SAAS,EAAC;AAAlF,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAuC,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAC,MAAT;AAAgBC,YAAAA,aAAa,EAAC,QAA9B;AAAuCC,YAAAA,UAAU,EAAC,QAAlD;AAA2DC,YAAAA,QAAQ,EAAC,UAApE;AAA+EC,YAAAA,MAAM,EAAC,GAAtF;AAA0FC,YAAAA,KAAK,EAAC,OAAhG;AAAwGC,YAAAA,MAAM,EAAC;AAA/G,WAA9C;AAAA,kCACG,QAAC,aAAD;AAAe,YAAA,KAAK,EAAE;AAACH,cAAAA,QAAQ,EAAC,UAAV;AAAqBC,cAAAA,MAAM,EAAC,GAA5B;AAAiCG,cAAAA,OAAO,EAAC,KAAzC;AAA+CX,cAAAA,MAAM,EAAE,MAAvD;AAA+DC,cAAAA,KAAK,EAAE;AAAtE;AAAtB;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG,QAAC,aAAD;AAAgB,YAAA,KAAK,EAAE;AAACD,cAAAA,MAAM,EAAE,MAAT;AAAiBC,cAAAA,KAAK,EAAE,MAAxB;AAAgCQ,cAAAA,KAAK,EAAC;AAAtC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFH,eAGG;AAAO,YAAA,MAAM,EAAC,SAAd;AAAwB,YAAA,EAAE,EAAC,MAA3B;AAAkC,YAAA,IAAI,EAAC,MAAvC;AAA8C,YAAA,IAAI,EAAC,MAAnD;AAA0D,YAAA,QAAQ,EAAE7B;AAApE;AAAA;AAAA;AAAA;AAAA,kBAHH,eAIG;AAAM,YAAA,KAAK,EAAE;AAACgC,cAAAA,QAAQ,EAAC;AAAV,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAUG;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,mBACG7F,iBAAiB,gBACf;AAAK,UAAA,KAAK,EAAE;AAACqF,YAAAA,OAAO,EAAC,MAAT;AAAgBC,YAAAA,aAAa,EAAC;AAA9B,WAAZ;AAAA,qBACGlF,SAAS,gBAAG,QAAC,MAAD;AAAQ,YAAA,YAAY,EAAE,CAAC0D,CAAD,EAAGnC,WAAH,KAAiBF,YAAY,CAACqC,CAAD,EAAGnC,WAAH,CAAnD;AAAoE,YAAA,WAAW,EAAE;AAAEuD,cAAAA,KAAK,EAAE,MAAT;AAAiBD,cAAAA,MAAM,EAAC;AAAxB;AAAjF;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA0H,EADtI,eAEE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACG,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEnE,OAAO,CAACtB,IAA/B;AAAqC,cAAA,KAAK,EAAE;AAACsG,gBAAAA,OAAO,EAAC;AAAT,eAA5C;AAA6D,cAAA,OAAO,EAAE,MAAIhE,eAAe,EAAzF;AAAA,qCACG,QAAC,SAAD;AAAW,gBAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,oBADH,eAIG,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEhB,OAAO,CAACtB,IAA/B;AAAqC,cAAA,KAAK,EAAE;AAACsG,gBAAAA,OAAO,EAAC;AAAT,eAA5C;AAA6D,cAAA,OAAO,EAAE,MAAIzF,YAAY,CAAC,CAACD,SAAF,CAAtF;AAAA,qCACI,QAAC,kBAAD;AAAoB,gBAAA,QAAQ,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJH,eAOE;AAAO,cAAA,SAAS,EAAC,YAAjB;AAA8B,cAAA,YAAY,EAAEE,IAA5C;AAAkD,cAAA,QAAQ,EAAGwD,CAAD,IAAKvD,OAAO,CAACuD,CAAC,CAACK,MAAF,CAAS4B,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADe,gBAahB;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,kCACG;AAAA,sBAAKpG,oBAAoB,CAACa;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAIP,oBAAoB,CAAC,IAAD,CAA7C;AAAA,mCACI,QAAC,QAAD;AAAU,cAAA,KAAK,EAAE;AAAC4F,gBAAAA,QAAQ,EAAC,OAAV;AAAkBG,gBAAAA,UAAU,EAAC;AAA7B;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAqBG;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,KAAK,EAAE;AAACF,YAAAA,OAAO,EAAC,MAAT;AAAgBG,YAAAA,WAAW,EAAC;AAA5B,WAAlC;AAAA,uCAAqFtG,oBAAoB,CAACuG,WAA1G;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBH;AAAA;AAAA;AAAA;AAAA;AAAA,cAVH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAoCI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACG;AAAI,QAAA,SAAS,EAAC,aAAd;AAA4B,QAAA,KAAK,EAAE;AAACJ,UAAAA,OAAO,EAAC;AAAT,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,EAEG5F,wBAAwB,gBACvB;AAAK,QAAA,KAAK,EAAE;AAACmF,UAAAA,OAAO,EAAC,MAAT;AAAgBC,UAAAA,aAAa,EAAC;AAA9B,SAAZ;AAAA,mBACGlF,SAAS,gBAAG,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAE,CAAC0D,CAAD,EAAGnC,WAAH,KAAiBE,uBAAuB,CAACiC,CAAD,EAAGnC,WAAH,CAA9D;AAA+E,UAAA,WAAW,EAAE;AAAEuD,YAAAA,KAAK,EAAE,MAAT;AAAiBD,YAAAA,MAAM,EAAC;AAAxB;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAqI,EADjJ,eAEE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,KAAK,EAAE;AAACa,YAAAA,OAAO,EAAC;AAAT,WAAxC;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEhF,OAAO,CAACtB,IAA/B;AAAqC,YAAA,KAAK,EAAE;AAACsG,cAAAA,OAAO,EAAC;AAAT,aAA5C;AAA6D,YAAA,OAAO,EAAE,MAAIzC,sBAAsB,EAAhG;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEvC,OAAO,CAACtB,IAA/B;AAAqC,YAAA,KAAK,EAAE;AAACsG,cAAAA,OAAO,EAAC;AAAT,aAA5C;AAA6D,YAAA,OAAO,EAAE,MAAIzF,YAAY,CAAC,CAACD,SAAF,CAAtF;AAAA,mCAAoG,QAAC,kBAAD;AAAoB,cAAA,QAAQ,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAApG;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAO,YAAA,SAAS,EAAC,YAAjB;AAA8B,YAAA,YAAY,EAAEK,WAA5C;AAAyD,YAAA,QAAQ,EAAGqD,CAAD,IAAKpD,cAAc,CAACoD,CAAC,CAACK,MAAF,CAAS4B,KAAV;AAAtF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADuB,gBAWvB;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACE;AAAM,UAAA,KAAK,EAAE;AAACF,YAAAA,QAAQ,EAAC,MAAV;AAAiBM,YAAAA,WAAW,EAAC;AAA7B,WAAb;AAAA,oBACKxG,oBAAoB,CAACgB;AAD1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAIR,2BAA2B,CAAC,IAAD,CAApD;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE;AAAC0F,cAAAA,QAAQ,EAAC;AAAV;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApCJ,eA4DI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACG;AAAI,QAAA,SAAS,EAAC,aAAd;AAA4B,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAC,MAAV;AAAkBM,UAAAA,YAAY,EAAC;AAA/B,SAAnC;AAAA,mBACKzG,oBAAoB,CAACsD,YAArB,CAAkCoD,MAAlC,GAA0C,CAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAIG,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAEtF,SAA/B;AAA0C,QAAA,OAAO,EAAE6C,UAAnD;AAAA,+BACG,QAAC,cAAD;AAAgB,UAAA,UAAU,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAJH,EAQIjE,oBAAoB,CAAC2G,SAArB,KAAiCrE,cAAc,CAAC,IAAD,CAA/C,gBACG;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAACsE,UAAAA,MAAM,EAAC,SAAR;AAAkBV,UAAAA,QAAQ,EAAC;AAA3B,SAApC;AAAwE,QAAA,OAAO,EAAE,MAAI7E,YAAY,CAAC,IAAD,CAAjG;AAAA,gCACG,QAAC,MAAD;AAAA,iCACG,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEF,OAAO,CAACtB,IAA/B;AAAqC,YAAA,KAAK,EAAE;AAACsG,cAAAA,OAAO,EAAC;AAAT,aAA5C;AAAA,mCACG,QAAC,SAAD;AAAW,cAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBADH,eAMG;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAQU,EAhBd,EAkBInG,oBAAoB,CAACsD,YAArB,CAAkCuD,GAAlC,CAAsC,CAAC5D,WAAD,EAAa6D,KAAb,KACvC;AACG,4BACC;AAAkB,UAAA,SAAS,EAAC,aAA5B;AAAA,kCACE;AAAK,YAAA,OAAO,EAAE,MAAI9D,gBAAgB,CAACC,WAAD,CAAlC;AAAiD,YAAA,KAAK,EAAE;AAACyC,cAAAA,OAAO,EAAC,MAAT;AAAgBqB,cAAAA,QAAQ,EAAC,GAAzB;AAA6BpB,cAAAA,aAAa,EAAC,KAA3C;AAAiDC,cAAAA,UAAU,EAAC,QAA5D;AAAqEgB,cAAAA,MAAM,EAAC;AAA5E,aAAxD;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,GAAG,EAAE3D,WAAW,CAACQ;AAAzB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,cAAA,KAAK,EAAE;AAACiC,gBAAAA,OAAO,EAAC,MAAT;AAAgBqB,gBAAAA,QAAQ,EAAC,GAAzB;AAA6BpB,gBAAAA,aAAa,EAAC,KAA3C;AAAiDC,gBAAAA,UAAU,EAAC;AAA5D,eAAb;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,wBAAd;AAAA,0BAAwC3C,WAAW,CAACZ;AAApD;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGY,WAAW,CAACM,EAAZ,KAAiBvD,oBAAoB,CAAC2G,SAAtC,gBACC;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,uCACG;AAAI,kBAAA,KAAK,EAAE;AAACT,oBAAAA,QAAQ,EAAC;AAAV,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,sBADD,GAIA,EANH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAYG5D,cAAc,CAAC,IAAD,CAAd,KAAyBtC,oBAAoB,CAAC2G,SAA9C,gBACE,QAAC,UAAD;AAAa,YAAA,OAAO,EAAE,MAAI9C,gBAAgB,CAACZ,WAAD,CAA1C;AAAyD,YAAA,KAAK,EAAE;AAACkD,cAAAA,OAAO,EAAC;AAAT,aAAhE;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,GAIA,EAhBH;AAAA,WAAWW,KAAX;AAAA;AAAA;AAAA;AAAA,gBADD;AAmBD,OArBD,CAlBJ,eAyCI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,+BACG;AAAK,UAAA,KAAK,EAAE;AAACpB,YAAAA,OAAO,EAAC,MAAT;AAAgBqB,YAAAA,QAAQ,EAAC,GAAzB;AAA6BpB,YAAAA,aAAa,EAAC,KAA3C;AAAiDC,YAAAA,UAAU,EAAC;AAA5D,WAAZ;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAE3E,IAAI,CAACwC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,KAAK,EAAE;AAACiC,cAAAA,OAAO,EAAC,MAAT;AAAgBqB,cAAAA,QAAQ,EAAC,GAAzB;AAA6BpB,cAAAA,aAAa,EAAC,KAA3C;AAAiDC,cAAAA,UAAU,EAAC;AAA5D,aAAZ;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,wBAAd;AAAA,wBAAwC3E,IAAI,CAACoB;AAA7C;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKC,cAAc,CAAC,IAAD,CAAd,KAAuBtC,oBAAoB,CAAC2G,SAA5C,gBACC;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACI;AAAI,gBAAA,KAAK,EAAE;AAACT,kBAAAA,QAAQ,EAAC;AAAV,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADD,GAIC,EANN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA5DJ,eAoHI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAA+C,MAAA,OAAO,EAAE,MAAI3E,aAAa,CAAC,IAAD,CAAzE;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEJ,OAAO,CAACtB,IAA/B;AAAqC,UAAA,KAAK,EAAE;AAACsG,YAAAA,OAAO,EAAC;AAAT,WAA5C;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,KAAK,EAAE;AAACJ,cAAAA,KAAK,EAAC;AAAP,aAAtB;AAAwC,YAAA,QAAQ,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAIK;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,UAAA,KAAK,EAAE;AAACA,YAAAA,KAAK,EAAC,SAAP;AAAiBG,YAAAA,QAAQ,EAAC;AAA1B,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApHJ,eA6HI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,MAAK3E,aAAa,CAAC,KAAD,CAAjE;AAA2E,MAAA,IAAI,EAAED,UAAjF;AAAA,6BACG;AAAK,QAAA,KAAK,EAAE;AAAC6E,UAAAA,OAAO,EAAC;AAAT,SAAZ;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE,MAAIvC,eAAe,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE,MAAIrC,aAAa,CAAC,KAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YA7HJ,eAwII,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,MAAKE,mBAAmB,CAAC,KAAD,CAAvE;AAAiF,MAAA,IAAI,EAAED,gBAAvF;AAAA,6BACG;AAAK,QAAA,KAAK,EAAE;AAAC2E,UAAAA,OAAO,EAAC;AAAT,SAAZ;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE,MAAIrC,mBAAmB,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE,MAAIrC,mBAAmB,CAAC,KAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAxIJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqJH;;GAxSQ1B,gB;UAEsGpB,gB,EAMrFC,O,EACNgB,S;;;KATXG,gB;AA0ST,eAAeA,gBAAf","sourcesContent":["import React from 'react'\r\nimport '../css/sidebar.css'\r\nimport axios from 'axios';\r\nimport { useState,useEffect} from 'react'\r\nimport { useConversations } from '../contexts/conversationsprovider';\r\nimport { useUser } from '../contexts/userprovider';\r\nimport { Avatar ,IconButton,makeStyles,Modal} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport Picker from 'emoji-picker-react';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AddGroupMember from './addgroupmember';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\"\r\n  \r\n      }}\r\n    });\r\n  \r\n\r\nfunction ShowGroupDetails() {\r\n\r\n    const {selectedConversation,createConversation,conversations,setSelectedConversation,UpdateConversation} = useConversations()\r\n    const [EditGroupNameGlag,setEditGroupNameGlag]=useState(false)\r\n    const [EditGroupDescriptionGlag,setEditGroupDescriptionGlag]=useState(false)\r\n    const [emojiFlag,setEmojiFlag]=useState(false)\r\n    const [Text,setText] = useState(selectedConversation.Name)\r\n    const [Description,setDescription] = useState(selectedConversation.description)\r\n    const {info,config} = useUser()\r\n    const classes = useStyles();\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [deleteUserDialog,setDeleteUserDialog]= useState(false)\r\n    const [userToDelete,setUserToDelete] = useState()\r\n    const [previewImage,setPreviewImage]=useState()\r\n\r\n\r\n       \r\n    useEffect(()=>\r\n    {\r\n        setEditGroupNameGlag(false)\r\n        setEditGroupDescriptionGlag(false)\r\n        setEmojiFlag(false)\r\n\r\n    },[selectedConversation])\r\n  \r\n  \r\n    const onEmojiClick = (event, emojiObject) =>\r\n    {\r\n        setText(Text + emojiObject.emoji)\r\n    };\r\n  \r\n    const onDescriptionEmojiClick = (event, emojiObject) =>\r\n    {\r\n        setDescription(Description + emojiObject.emoji)\r\n    };\r\n  \r\n    function changeGroupName()\r\n    {\r\n        let message={name:\"manager\",message: sessionStorage['name'] +\" changed group name to \" + Text,timeSent:'',containsImage:false,containsRecord:false,recordURL:null}\r\n        let messages=selectedConversation.Messages\r\n        messages.push(message)\r\n        let updatedConversation={...selectedConversation,Name:Text,Messages:messages,LastMasage:message}\r\n        UpdateConversation(updatedConversation)\r\n        setEditGroupNameGlag(false)\r\n    }\r\n  \r\n    function openConversation(participant)\r\n    {\r\n        let existsFlag=false\r\n\r\n        conversations.forEach(conversation=>\r\n        {\r\n            if(conversation.isGroup === false && conversation.Participants[0].id === participant.id)\r\n            {\r\n              existsFlag=true\r\n              setSelectedConversation(conversation)\r\n            }\r\n              \r\n        })\r\n\r\n        if(!existsFlag)\r\n        {\r\n            let participantId=[]\r\n            participantId.push(participant.id)\r\n            createConversation(participantId, participant.name, participant.imageName,false)\r\n        }\r\n        \r\n    }\r\n  \r\n    function changeGroupDescription()\r\n    {\r\n         let message={name:\"manager\",message: sessionStorage['name'] +\" changed group Description\",timeSent:'',containsImage:false,containsRecord:false,recordURL:null}\r\n         let messages=selectedConversation.Messages\r\n         messages.push(message)\r\n         let updatedConversation={...selectedConversation,description:Description,Messages:messages,LastMessage:message}\r\n         UpdateConversation(updatedConversation)\r\n         setEditGroupDescriptionGlag(false)\r\n    }\r\n  \r\n    function removeFromGroup()\r\n    {\r\n       let message={name:\"manager\",message: sessionStorage['name'] +\" left the group\",timeSent:'',containsImage:false,containsRecord:false,recordURL:null}\r\n       let messages=selectedConversation.Messages\r\n       messages.push(message)\r\n       let updatedConversation={...selectedConversation,Messages:messages,LastMessage:message}\r\n       UpdateConversation(updatedConversation)\r\n       setDialogOpen(false)\r\n    }\r\n  \r\n    function beforeDeleteUser(participant)\r\n    {\r\n       setUserToDelete(participant)\r\n       setDeleteUserDialog(true)\r\n    }\r\n  \r\n    function removeUserFromGroup()\r\n    {\r\n       let messages=selectedConversation.Messages\r\n       let message={name:\"manager\",message: sessionStorage['name'] +\" removed \" + userToDelete.name + \" from the group \",timeSent:'',containsImage:false,containsRecord:false,recordURL:null}\r\n       messages.push(message)\r\n       let participants= selectedConversation.Participants.filter(participant=> participant.id !== userToDelete.id)\r\n       let updatedConversation={...selectedConversation,Participants:participants,Messages:messages,LastMessage:message}\r\n       UpdateConversation(updatedConversation)\r\n       setUserToDelete()\r\n       setDeleteUserDialog(false)\r\n    }\r\n  \r\n    function closeModal()\r\n    {\r\n       setModalOpen(false)\r\n    }\r\n\r\n    async function handleFileUpload(e)\r\n    {\r\n\r\n        let picturePath=''\r\n    \r\n        const data = new FormData()\r\n        data.append('file',e.target.files[0])\r\n        data.append(\"upload_preset\",\"whatsApp_clone\")\r\n        data.append(\"cloud_name\",\"dsrgpqnyv\")\r\n       \r\n        try\r\n        {\r\n          let response = await axios.post(\"https://api.cloudinary.com/v1_1/dsrgpqnyv/image/upload\",data)\r\n          picturePath =response.data.url\r\n\r\n        }catch(err){console.log(err)}\r\n\r\n        try\r\n        {\r\n\r\n          let conversation={...selectedConversation,conversationImage:e.target.files[0]}\r\n          delete conversation._id\r\n          let response = await axios.put(\"https://messagesapp1.herokuapp.com//api/conversations/\" + selectedConversation._id,conversation,config)\r\n\r\n\r\n          console.log(response)\r\n         // if(response.data==='Updated')\r\n          //   setInfo(obj)\r\n\r\n        }catch(err){console.log(err)}\r\n        setPreviewImage(window.URL.createObjectURL(e.target.files[0]))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n           <div className='user_info'>\r\n              <div className='change_group_image'> \r\n                 <Avatar  src={previewImage} style={{height: '110px', width: '110px' ,backgroundColor:'gray' ,margin:'15px',marginTop:'30px'}}> </Avatar>\r\n                 <div className='change_image_on_hover' style={{display:'flex',flexDirection:'column',alignItems:'center',position:'absolute',zIndex:'1',color:'white',curser:'pointer'}}>\r\n                    <PeopleAltIcon style={{position:'absolute',zIndex:'0', opacity:'0.1',height: '80px', width: '80px' }}/>\r\n                    <AddAPhotoIcon  style={{height: '30px', width: '30px' ,color:'white'}}/>\r\n                    <input accept=\"image/*\" id=\"file\" type=\"file\" name=\"file\" onChange={handleFileUpload}/>\r\n                    <span style={{fontSize:'10px'}}>Change Picture </span>\r\n                 </div>\r\n              </div>\r\n              <span className='name_and_lastSeen'>\r\n                {EditGroupNameGlag?\r\n                   <div style={{display:'flex',flexDirection:'column'}}>\r\n                     {emojiFlag?  <Picker onEmojiClick={(e,emojiObject)=>onEmojiClick(e,emojiObject)} pickerStyle={{ width: '100%' ,height:'200px'}}/> : ''}\r\n                     <div className='edit_group_name'>\r\n                        <IconButton className={classes.root} style={{padding:'3px'}} onClick={()=>changeGroupName()}>\r\n                           <CheckIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        <IconButton className={classes.root} style={{padding:'3px'}} onClick={()=>setEmojiFlag(!emojiFlag)}>\r\n                            <InsertEmoticonIcon fontSize='large'/>\r\n                        </IconButton>\r\n                       <input className='input_text' defaultValue={Text} onChange={(e)=>setText(e.target.value)}></input>\r\n                     </div>\r\n                  </div>:\r\n                  <span className='group_title'>\r\n                     <h3>{selectedConversation.Name}</h3>\r\n                     <IconButton onClick={()=>setEditGroupNameGlag(true)}>\r\n                         <EditIcon style={{fontSize:'large',marginLeft:'10px'}}/>\r\n                     </IconButton>\r\n                  </span>}\r\n                \r\n                 <span className='lastSeen' style={{padding:'10px',paddingLeft:'0px'}}> created at:  {selectedConversation.createdDate} </span>\r\n              </span>\r\n            </div>\r\n\r\n            <div className='group_details_container'>\r\n               <h2 className='group_title' style={{padding:'5px'}}> Description </h2>\r\n              {EditGroupDescriptionGlag?\r\n                <div style={{display:'flex',flexDirection:'column'}}>\r\n                  {emojiFlag?  <Picker onEmojiClick={(e,emojiObject)=>onDescriptionEmojiClick(e,emojiObject)} pickerStyle={{ width: '100%' ,height:'200px'}}/> : ''}\r\n                  <div className='edit_group_name' style={{padding:'5px'}}>\r\n                    <IconButton className={classes.root} style={{padding:'3px'}} onClick={()=>changeGroupDescription()}>\r\n                        <CheckIcon fontSize='large'/>\r\n                     </IconButton>\r\n                    <IconButton className={classes.root} style={{padding:'3px'}} onClick={()=>setEmojiFlag(!emojiFlag)}><InsertEmoticonIcon fontSize='large'/></IconButton>\r\n                    <input className='input_text' defaultValue={Description} onChange={(e)=>setDescription(e.target.value)} ></input>\r\n                  </div>\r\n                </div>:\r\n                <div className='group_description_edit'>\r\n                  <span style={{fontSize:'15px',marginRight:'5px'}}>\r\n                      {selectedConversation.description}\r\n                  </span>\r\n                  <IconButton onClick={()=>setEditGroupDescriptionGlag(true)}>\r\n                      <EditIcon style={{fontSize:'large'}}/>\r\n                  </IconButton>\r\n                </div>}\r\n             \r\n            </div>\r\n\r\n            <div className='group_details_container'>\r\n               <h2 className='group_title' style={{ padding:'10px' ,borderBottom:'1px solid #B0B0B0'}}>\r\n                   {selectedConversation.Participants.length +1} participants\r\n               </h2>\r\n               <Modal className='Modal' open={modalOpen} onClose={closeModal} >\r\n                  <AddGroupMember closeModal={closeModal}  /> \r\n               </Modal>\r\n\r\n               {selectedConversation.creatorId===sessionStorage['id']?\r\n                   <div className='participant' style={{cursor:'pointer',fontSize:'15px'}} onClick={()=>setModalOpen(true)} >\r\n                      <Avatar>\r\n                         <IconButton className={classes.root} style={{padding:'3px'}}>\r\n                            <PersonAdd fontSize='large'/>\r\n                         </IconButton>\r\n                      </Avatar>\r\n                      <h3 className='group_participant_name'>Add Member</h3>\r\n                   </div>:''}\r\n\r\n               {selectedConversation.Participants.map((participant,index)=>\r\n               {\r\n                  return(\r\n                   <div  key={index} className='participant' >\r\n                     <div onClick={()=>openConversation(participant)} style={{display:'flex',flexGrow:'1',flexDirection:'row',alignItems:'center',cursor:'pointer'}}>\r\n                         <Avatar src={participant.imageName}/>\r\n                         <div  style={{display:'flex',flexGrow:'1',flexDirection:'row',alignItems:'center'}}>\r\n                           <h3 className='group_participant_name'>{participant.name}</h3>\r\n                           {participant.id===selectedConversation.creatorId?\r\n                             <div className='group_admin'>\r\n                                <h3 style={{fontSize:'13px'}}>Group Manager</h3>\r\n                             </div>\r\n                           :''}\r\n                         </div >\r\n                     </div>\r\n                     {sessionStorage['id'] === selectedConversation.creatorId?\r\n                        <IconButton  onClick={()=>beforeDeleteUser(participant)} style={{padding:'3px'}}>\r\n                          <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n                     :''}\r\n                   </div>)\r\n                })}\r\n\r\n                <div  className='participant'>\r\n                   <div style={{display:'flex',flexGrow:'1',flexDirection:'row',alignItems:'center'}}>\r\n                     <Avatar src={info.imageName}/>\r\n                     <div style={{display:'flex',flexGrow:'1',flexDirection:'row',alignItems:'center'}}>\r\n                         <h3 className='group_participant_name'>{info.name}</h3>\r\n                         {sessionStorage['id']===selectedConversation.creatorId?\r\n                           <div className='group_admin'>\r\n                               <h3 style={{fontSize:'13px'}}>Group Manager</h3>\r\n                           </div>\r\n                          :''}\r\n                     </div >\r\n                   </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='group_details_container leave' onClick={()=>setDialogOpen(true)} >\r\n                <div className='leaveGroup'>\r\n                    <IconButton className={classes.root} style={{padding:'3px'}} >\r\n                      <ExitToAppIcon style={{color:'darkred'}}fontSize='large'/>\r\n                    </IconButton>\r\n                     <h3 className='group_participant_name' style={{color:'darkRed',fontSize:'17px'}}>leave Group</h3>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog className='exit_group_dialog' onClose={()=> setDialogOpen(false)}  open={dialogOpen}>\r\n               <div style={{padding:'10px'}}>\r\n                 <h2 className='dialog_title'> are you sure you want to leave this group?</h2>\r\n                 <div className='dialog_options_buttons'>\r\n                   <button className='dialog_button' onClick={()=>removeFromGroup()} >yes</button>\r\n                   <button className='dialog_button' onClick={()=>setDialogOpen(false)}>no</button>\r\n                 </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n\r\n            <Dialog className='exit_group_dialog' onClose={()=> setDeleteUserDialog(false)}  open={deleteUserDialog}>\r\n               <div style={{padding:'10px'}}>\r\n                 <h2 className='dialog_title'> are you sure you want to delete this user?</h2>\r\n                 <div className='dialog_options_buttons'>\r\n                   <button className='dialog_button' onClick={()=>removeUserFromGroup()} >yes</button>\r\n                   <button className='dialog_button' onClick={()=>setDeleteUserDialog(false)}>no</button>\r\n                 </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowGroupDetails\r\n"]},"metadata":{},"sourceType":"module"}