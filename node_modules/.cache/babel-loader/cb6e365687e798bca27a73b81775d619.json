{"ast":null,"code":"import _toConsumableArray from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useUser}from'../contexts/userprovider';import{useConversations}from'../contexts/conversationsprovider';import{Button,Avatar,IconButton}from'@material-ui/core';import CloseIcon from'@material-ui/icons/Close';import'../css/addnew.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddGroupMember(_ref){var closeModal=_ref.closeModal;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedContactsId=_useState2[0],setSelectedContactsId=_useState2[1];var _useUser=useUser(),contacts=_useUser.contacts,info=_useUser.info;var _useConversations=useConversations(),UpdateConversation=_useConversations.UpdateConversation,selectedConversation=_useConversations.selectedConversation;var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),conversationContacts=_useState4[0],setConversationContacts=_useState4[1];useEffect(function(){var ids=[];console.log(selectedConversation);selectedConversation.Participants.forEach(function(participant){ids.push(participant.id);});console.log(ids);setConversationContacts(ids);},[]);function AddMember(){var newParticipants=[];newParticipants=selectedConversation.Participants;var messages=selectedConversation.Messages;console.log(messages);var message='';contacts.forEach(function(contact){if(selectedContactsId.includes(contact.id)){console.log(contact);newParticipants.push(contact);message={name:\"manager\",message:info.name+\" added \"+contact.name+\" to the group\",timeSent:'',containsImage:false,containsRecord:false,recordURL:null};messages.push(message);console.log(newParticipants);}});var updatedConversation=_objectSpread(_objectSpread({},selectedConversation),{},{Participants:newParticipants,Messages:messages,LastMessage:message});UpdateConversation(updatedConversation);closeModal();}function handleCheckboxChange(contactId){if(selectedContactsId.includes(contactId)){setSelectedContactsId(function(prevSelectedContactsId){return prevSelectedContactsId.filter(function(id){return id!==contactId;});});}else{setSelectedContactsId(function(prevSelectedContactsId){return[].concat(_toConsumableArray(prevSelectedContactsId),[contactId]);});}}return/*#__PURE__*/_jsx(\"div\",{className:\"add_new\",children:/*#__PURE__*/_jsx(\"div\",{className:\"add_new_group_border\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"new_conversation new_group\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:'1'},className:\"title_and_close\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"add_contact_title\",style:{marginLeft:'80px',paddingRight:'0px'},children:\"Select Members:\"}),/*#__PURE__*/_jsx(IconButton,{style:{marginLeft:'40px'},className:\"close_add_new\",onClick:function onClick(){return closeModal();},children:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"large\"})})]}),/*#__PURE__*/_jsx(\"div\",{style:{overflowY:'overlay',height:'200px'},children:contacts.map(function(contact){if(!conversationContacts.includes(contact.id)){return/*#__PURE__*/_jsxs(\"div\",{className:\"contact_item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:selectedContactsId.includes(contact.id),id:contact.id,onChange:function onChange(){return handleCheckboxChange(contact.id);}}),/*#__PURE__*/_jsxs(\"label\",{style:{display:'flex',flexDirection:'row',alignItems:'center',width:'100%'},for:contact.id,children:[/*#__PURE__*/_jsx(Avatar,{style:{margin:'5px'},src:process.env.PUBLIC_URL+contact.imageName,fontSize:\"large\"}),/*#__PURE__*/_jsxs(\"h3\",{className:\"enter_phone\",style:{marginLeft:'10px',fontWeight:'400'},children:[contact.name,\" \"]})]})]});}})}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(\"button\",{className:\"add_new_button\",type:\"submit\",onClick:function onClick(){return AddMember();},children:\"Add\"})})]})})});}export default AddGroupMember;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/addgroupmember.js"],"names":["React","useState","useEffect","useUser","useConversations","Button","Avatar","IconButton","CloseIcon","AddGroupMember","closeModal","selectedContactsId","setSelectedContactsId","contacts","info","UpdateConversation","selectedConversation","conversationContacts","setConversationContacts","ids","console","log","Participants","forEach","participant","push","id","AddMember","newParticipants","messages","Messages","message","contact","includes","name","timeSent","containsImage","containsRecord","recordURL","updatedConversation","LastMessage","handleCheckboxChange","contactId","prevSelectedContactsId","filter","flex","marginLeft","paddingRight","overflowY","height","map","display","flexDirection","alignItems","width","margin","process","env","PUBLIC_URL","imageName","fontWeight","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from 'react'\r\nimport { useUser } from '../contexts/userprovider'\r\nimport { useConversations } from '../contexts/conversationsprovider'\r\nimport {Button,Avatar,IconButton} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport '../css/addnew.css'\r\nimport { instanceOf } from 'prop-types';\r\n\r\nfunction AddGroupMember({closeModal}) {\r\n\r\n    const [selectedContactsId, setSelectedContactsId] = useState([])\r\n    const { contacts,info } = useUser()\r\n    const {UpdateConversation,selectedConversation} = useConversations()\r\n    const [conversationContacts,setConversationContacts]=useState([])\r\n\r\n\r\n    useEffect(() =>\r\n    { \r\n        let ids=[]\r\n        console.log(selectedConversation)\r\n        selectedConversation.Participants.forEach((participant)=>\r\n        {\r\n           ids.push(participant.id)\r\n        }) \r\n        console.log(ids)\r\n        setConversationContacts(ids)\r\n    },[])\r\n\r\n    function AddMember()\r\n    {\r\n        let newParticipants= []\r\n        newParticipants=selectedConversation.Participants\r\n        let messages=selectedConversation.Messages\r\n        console.log(messages)\r\n        let message=''\r\n        contacts.forEach(contact=>\r\n        {\r\n            if(selectedContactsId.includes(contact.id))\r\n            {\r\n                console.log(contact)\r\n                newParticipants.push(contact)\r\n                message={name:\"manager\",message: info.name +\" added \" + contact.name + \" to the group\",timeSent:'',containsImage:false,containsRecord:false,recordURL:null}\r\n                messages.push(message)\r\n                console.log(newParticipants)\r\n            }\r\n\r\n        })\r\n\r\n\r\n\r\n        let updatedConversation={...selectedConversation,Participants:newParticipants,Messages:messages,LastMessage:message}\r\n        UpdateConversation(updatedConversation)\r\n        closeModal()\r\n    }\r\n\r\n\r\n    function handleCheckboxChange(contactId) \r\n    {\r\n        if(selectedContactsId.includes(contactId))\r\n        {\r\n            setSelectedContactsId(prevSelectedContactsId =>\r\n            {\r\n                return (prevSelectedContactsId.filter(id=> id!==contactId))\r\n            } )\r\n        }\r\n  \r\n        else\r\n        {\r\n           setSelectedContactsId(prevSelectedContactsId=>\r\n            {\r\n              return [...prevSelectedContactsId,contactId]\r\n            })\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <div className='add_new'>\r\n        <div className='add_new_group_border'>\r\n        <div className='new_conversation new_group'>\r\n              <div style={{flex:'1'}} className='title_and_close'>\r\n                  <h2 className='add_contact_title' style={{marginLeft:'80px',paddingRight:'0px'}}>Select Members:</h2> \r\n                  <IconButton style={{marginLeft:'40px'}}className='close_add_new'  onClick={()=>closeModal()}>\r\n                    <CloseIcon fontSize='large' /> \r\n                  </IconButton>\r\n              </div>\r\n          <div style={{overflowY:'overlay',height:'200px'}}>\r\n          {contacts.map(contact =>\r\n            {\r\n             if(!(conversationContacts.includes(contact.id)))\r\n            {\r\n            return(\r\n                <div className='contact_item' >\r\n                 <input\r\n                type=\"checkbox\"\r\n                value={selectedContactsId.includes(contact.id)}\r\n                id={contact.id}\r\n                onChange={() => handleCheckboxChange(contact.id)}/>\r\n                <label style={{display:'flex',flexDirection:'row',alignItems:'center',width:'100%'}}for={contact.id} >\r\n                   <Avatar  style={{margin:'5px'}} src={process.env.PUBLIC_URL + contact.imageName}   fontSize='large'/>\r\n                    <h3 className='enter_phone' style={{marginLeft:'10px' ,fontWeight:'400'}}>{contact.name} </h3>\r\n                   </label>\r\n                 \r\n                </div>\r\n            )}}) }  \r\n            </div>\r\n            <div style={{display:'flex' , justifyContent:'center'}}>\r\n             <button className='add_new_button'  type=\"submit\" onClick={()=>AddMember()}>Add</button>\r\n             </div>\r\n\r\n             </div>\r\n             </div>\r\n             </div>\r\n    )\r\n}\r\n\r\nexport default AddGroupMember\r\n"]},"metadata":{},"sourceType":"module"}