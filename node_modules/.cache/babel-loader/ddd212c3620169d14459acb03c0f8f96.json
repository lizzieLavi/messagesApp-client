{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\conversations.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar } from '@material-ui/core';\nimport React from 'react';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { useSocket } from '../contexts/socketprovider';\nimport '../css/conversations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversations() {\n  _s();\n\n  const {\n    setSelectedConversation,\n    conversations\n  } = useConversations();\n  const ConnectedUsers = useSocket();\n\n  const handleSelectedConversation = conversation => {\n    if (conversation.isGroup == false) {\n      let userIsConnected = ConnectedUsers.find(userConnected => userConnected.userId == conversation.Participants[0].id);\n      consile.log(ConnectedUsers);\n      if (userIsConnected !== undefined) conversation.connected = true;else conversation.connected = false;\n    }\n\n    setSelectedConversation(conversation);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chats\",\n    children: [console.log(conversations), conversations.map((conversation, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSelectedConversation(conversation),\n        className: \"ChatsListItem\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: process.env.PUBLIC_URL + conversation.ConversationImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chatName\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: conversation.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 52\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", conversation.LastMessage.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 18\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Conversations, \"NptQbZ0rZrFDMxL5EEzo6eIxYLY=\", false, function () {\n  return [useConversations, useSocket];\n});\n\n_c = Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/conversations.js"],"names":["Avatar","React","useConversations","useSocket","Conversations","setSelectedConversation","conversations","ConnectedUsers","handleSelectedConversation","conversation","isGroup","userIsConnected","find","userConnected","userId","Participants","id","consile","log","undefined","connected","console","map","index","process","env","PUBLIC_URL","ConversationImage","Name","LastMessage","message"],"mappings":";;;AAAA,SAASA,MAAT,QAAsB,mBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,OAAO,0BAAP;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM;AAACC,IAAAA,uBAAD;AAAyBC,IAAAA;AAAzB,MAAyCJ,gBAAgB,EAA/D;AACA,QAAMK,cAAc,GAAGJ,SAAS,EAAhC;;AAEJ,QAAMK,0BAA0B,GAAGC,YAAD,IAClC;AACE,QAAGA,YAAY,CAACC,OAAb,IAAwB,KAA3B,EACA;AACE,UAAIC,eAAe,GAAGJ,cAAc,CAACK,IAAf,CAAoBC,aAAa,IAAIA,aAAa,CAACC,MAAd,IAAwBL,YAAY,CAACM,YAAb,CAA0B,CAA1B,EAA6BC,EAA1F,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,cAAZ;AACA,UAAGI,eAAe,KAAKQ,SAAvB,EACGV,YAAY,CAACW,SAAb,GAAyB,IAAzB,CADH,KAEKX,YAAY,CAACW,SAAb,GAAuB,KAAvB;AAEN;;AACDf,IAAAA,uBAAuB,CAACI,YAAD,CAAvB;AAED,GAbD;;AAcE,sBACQ;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACGY,OAAO,CAACH,GAAR,CAAYZ,aAAZ,CADH,EAEKA,aAAa,CAACgB,GAAd,CAAkB,CAACb,YAAD,EAAcc,KAAd,KACnB;AACG,0BAAU;AAAkB,QAAA,OAAO,EAAE,MAAIf,0BAA0B,CAACC,YAAD,CAAzD;AAA0E,QAAA,SAAS,EAAC,eAApF;AAAA,gCACN,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAEe,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBjB,YAAY,CAACkB;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADM,eAEN;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACA;AAAQ,YAAA,SAAS,EAAC,UAAlB;AAAA,oCAA8B;AAAA,wBAAKlB,YAAY,CAACmB;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,4BAAQnB,YAAY,CAACoB,WAAb,CAAyBC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFM,eAMV;AAAA;AAAA;AAAA;AAAA,gBANU;AAAA,SAAUP,KAAV;AAAA;AAAA;AAAA;AAAA,cAAV;AASA,KAXF,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAoBD;;GAtCuBnB,a;UAC2BF,gB,EACxBC,S;;;KAFHC,a","sourcesContent":["import { Avatar} from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useConversations } from '../contexts/conversationsprovider';\r\nimport { useSocket } from '../contexts/socketprovider';\r\nimport '../css/conversations.css'\r\n\r\nexport default function Conversations() {\r\n    const {setSelectedConversation,conversations} =useConversations()\r\n    const ConnectedUsers = useSocket()\r\n  \r\nconst handleSelectedConversation= (conversation) =>\r\n{\r\n  if(conversation.isGroup == false)\r\n  {\r\n    let userIsConnected = ConnectedUsers.find(userConnected => userConnected.userId == conversation.Participants[0].id)\r\n    consile.log(ConnectedUsers)\r\n    if(userIsConnected !== undefined)\r\n       conversation.connected = true\r\n    else conversation.connected=false\r\n\r\n  }\r\n  setSelectedConversation(conversation)\r\n\r\n}\r\n  return (\r\n          <div className='Chats' >\r\n            {console.log(conversations)}\r\n              {conversations.map((conversation,index)=>\r\n              {\r\n                 return  ( <div key={index}  onClick={()=>handleSelectedConversation(conversation)}  className='ChatsListItem'>\r\n                     <Avatar src={process.env.PUBLIC_URL + conversation.ConversationImage}/>\r\n                     <div className='chatInfo'>\r\n                     <span   className='chatName' ><h2>{conversation.Name}</h2> </span>\r\n                     <span> {conversation.LastMessage.message} </span>\r\n                     </div>\r\n                 <br/>\r\n                  </div>)\r\n                    \r\n                })}\r\n\r\n                </div>\r\n          \r\n\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}