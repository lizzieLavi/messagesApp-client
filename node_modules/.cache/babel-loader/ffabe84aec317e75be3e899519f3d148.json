{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\sendimagebody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport '../css/chat.css';\nimport '../css/sendimagebody.css';\nimport { useState, useCallback } from 'react';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { useSocket } from '../contexts/socketprovider';\nimport { useUser } from '../contexts/userprovider';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ImageIcon from '@material-ui/icons/Image';\nimport Picker from 'emoji-picker-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SendImageBody(props) {\n  _s();\n\n  const inputRef = useRef(null);\n  const [Text, setText] = useState('');\n  const {\n    socket\n  } = useSocket();\n  const {\n    info\n  } = useUser();\n  const {\n    sendMessage,\n    selectedConversation,\n    currentConversationIsConnected,\n    typingFlag,\n    setTypingFlag\n  } = useConversations();\n\n  function handleSubmit(flag) {\n    e.preventDefault(); // sendMessage(Text)\n\n    setText(' ');\n    props.backToChat(flag);\n  }\n\n  function typing(e) {\n    setText(e.target.value);\n    if (socket.current == null) return;\n    socket.current.emit(\"typing\", {\n      user: info,\n      Conversation: selectedConversation\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SendImage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sendImageHeader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        fontSize: \"large\",\n        onClick: () => handleSubmit(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.imageURL,\n      height: \"300px\",\n      width: \"300px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add_message\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: () => handleSubmit(true),\n        className: \"message_section\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"message_input\",\n          ref: inputRef,\n          value: Text,\n          onChange: typing,\n          type: \"text\",\n          placeholder: \"type a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SendImageBody, \"s5ka8enteNrIhVW8a5hcZpuQ8o8=\", false, function () {\n  return [useSocket, useUser, useConversations];\n});\n\n_c = SendImageBody;\nexport default SendImageBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendImageBody\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/sendimagebody.js"],"names":["React","useRef","useState","useCallback","useConversations","useSocket","useUser","SendIcon","IconButton","InsertEmoticonIcon","MicIcon","CloseIcon","ImageIcon","Picker","axios","SendImageBody","props","inputRef","Text","setText","socket","info","sendMessage","selectedConversation","currentConversationIsConnected","typingFlag","setTypingFlag","handleSubmit","flag","e","preventDefault","backToChat","typing","target","value","current","emit","user","Conversation","imageURL"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\r\nimport '../css/chat.css'\r\nimport '../css/sendimagebody.css'\r\nimport { useState ,useCallback} from 'react'\r\nimport { useConversations } from '../contexts/conversationsprovider';\r\nimport { useSocket} from '../contexts/socketprovider';\r\nimport { useUser} from '../contexts/userprovider';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {IconButton } from '@material-ui/core'\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport Picker from 'emoji-picker-react';\r\nimport axios from 'axios'\r\n\r\n\r\nfunction SendImageBody(props) {\r\n\r\n\r\n    const inputRef = useRef(null)\r\n    const [Text,setText] = useState('')\r\n    const {socket} = useSocket()\r\n    const {info} = useUser()\r\n    const {sendMessage,selectedConversation,currentConversationIsConnected,typingFlag,setTypingFlag} = useConversations()\r\n\r\n    function handleSubmit(flag)\r\n    {\r\n      e.preventDefault()\r\n     // sendMessage(Text)\r\n      setText(' ')\r\n      props.backToChat(flag)\r\n\r\n    }\r\n\r\n    function typing(e)\r\n    {\r\n        setText(e.target.value)\r\n        if (socket.current == null) return;\r\n        socket.current.emit(\"typing\", {user:info,Conversation:selectedConversation})\r\n    }\r\n\r\n    return (\r\n        <div className='SendImage'>\r\n\r\n\r\n        <div className='sendImageHeader'></div>\r\n           <IconButton type='submit'>\r\n             <CloseIcon fontSize='large' onClick={()=>handleSubmit(false)}/>\r\n           </IconButton>\r\n\r\n            \r\n            <img src= {props.imageURL} height='300px' width='300px'/>\r\n\r\n\r\n          <div className='add_message'>\r\n          <form onSubmit={()=>handleSubmit(true)} className='message_section'>\r\n          <IconButton type='submit'>\r\n            <SendIcon fontSize='large'/>\r\n         </IconButton>\r\n         <input className='message_input' ref={inputRef}  value={Text} onChange={typing} type='text' placeholder='type a message'/>\r\n      </form>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendImageBody\r\n"]},"metadata":{},"sourceType":"module"}