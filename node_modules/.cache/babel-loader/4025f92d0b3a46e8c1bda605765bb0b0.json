{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\createnewgroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useUser } from '../contexts/userprovider';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateNewGroup({\n  closeModal\n}) {\n  _s();\n\n  const [selectedContactsId, setSelectedContactsId] = useState([]);\n  const {\n    contacts\n  } = useUser();\n  const {\n    createConversation,\n    setCreateGroupFlag\n  } = useConversations();\n  const [groupName, setGroupName] = useState('');\n  const [groupImage, setGroupImage] = useState();\n\n  function createGroup() {\n    setCreateGroupFlag(false);\n    createConversation(selectedContactsId, groupName, groupImage);\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactId) {\n    if (selectedContactsId.includes(contactId)) {\n      setSelectedContactsId(prevSelectedContactsId => {\n        return prevSelectedContactsId.filter(id => id !== contactId);\n      });\n    } else {\n      setSelectedContactsId(prevSelectedContactsId => {\n        return [...prevSelectedContactsId, contactId];\n      });\n    }\n  }\n\n  function handleFileUpload(e) {\n    setGroupImage(e.target.files[0]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" GroupName:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setGroupName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), contacts.map(contact => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: selectedContactsId.includes(contact.id),\n          id: contact.name,\n          onChange: () => handleCheckboxChange(contact.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }, this), contact.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: () => createGroup(),\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setCreateGroupFlag(false),\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateNewGroup, \"2/HVC/BwQcbaS6gfjP3pjs6bMRw=\", false, function () {\n  return [useUser, useConversations];\n});\n\n_c = CreateNewGroup;\nexport default CreateNewGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewGroup\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/createnewgroup.js"],"names":["React","useState","useUser","useConversations","Button","CreateNewGroup","closeModal","selectedContactsId","setSelectedContactsId","contacts","createConversation","setCreateGroupFlag","groupName","setGroupName","groupImage","setGroupImage","createGroup","handleCheckboxChange","contactId","includes","prevSelectedContactsId","filter","id","handleFileUpload","e","target","files","value","map","contact","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useUser } from '../contexts/userprovider'\r\nimport { useConversations } from '../contexts/conversationsprovider'\r\nimport {Button} from '@material-ui/core';\r\n\r\nfunction CreateNewGroup( { closeModal }) {\r\n\r\n    const [selectedContactsId, setSelectedContactsId] = useState([])\r\n    const { contacts } = useUser()\r\n    const { createConversation,setCreateGroupFlag } = useConversations()\r\n    const [groupName,setGroupName] =useState('')\r\n    const [groupImage,setGroupImage] =useState()\r\n\r\n    function createGroup() {\r\n        setCreateGroupFlag(false)\r\n        createConversation(selectedContactsId,groupName,groupImage)\r\n        closeModal()\r\n      }\r\n\r\n    \r\n    \r\n\r\n    function handleCheckboxChange(contactId) {\r\n        if(selectedContactsId.includes(contactId))\r\n        {\r\n            setSelectedContactsId(prevSelectedContactsId =>\r\n             {\r\n                 return (prevSelectedContactsId.filter(id=> id!==contactId))\r\n             } )\r\n        }\r\n  \r\n        else {\r\n            setSelectedContactsId(prevSelectedContactsId=>\r\n              {\r\n                  return [...prevSelectedContactsId,contactId]\r\n              })\r\n          }\r\n           \r\n    }\r\n\r\n    function handleFileUpload(e) {\r\n        setGroupImage(e.target.files[0])\r\n      }\r\n\r\n\r\n    return (\r\n        <div>\r\n          <span> GroupName:</span>\r\n          <input onChange={(e)=>setGroupName(e.target.value)}/>\r\n          {contacts.map(contact =>\r\n            {return(\r\n\r\n                <div>\r\n                 <input\r\n                type=\"checkbox\"\r\n                value={selectedContactsId.includes(contact.id)}\r\n                id={contact.name}\r\n                onChange={() => handleCheckboxChange(contact.id)}/>\r\n                {contact.name} <br/>\r\n                </div>)}\r\n            )}\r\n\r\n            <input type=\"file\" onChange={handleFileUpload} />\r\n            <Button type=\"submit\" onClick={()=>createGroup()}>Create</Button>\r\n\r\n            \r\n            <Button  onClick={()=>setCreateGroupFlag(false)}>Add contact</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateNewGroup\r\n"]},"metadata":{},"sourceType":"module"}