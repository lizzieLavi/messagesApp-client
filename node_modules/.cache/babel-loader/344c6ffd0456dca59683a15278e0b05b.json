{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\addnewconversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useContacts } from '../contexts/contactsprovider';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { Button } from '@material-ui/core';\nimport '../css/addnew.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal({\n  closeModal\n}) {\n  _s();\n\n  const [selectedContactsId, setSelectedContactsId] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n  const {\n    createConversation\n  } = useConversations();\n  const [createGroupFlag, setCreateGroupFlag] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversation(selectedContactsId);\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactId) {\n    if (selectedContactsId.includes(contactId)) {\n      setSelectedContactsId(prevSelectedContactsId => {\n        return prevSelectedContactsId.filter(id => id !== contactId);\n      });\n    } else {\n      setSelectedContactsId(prevSelectedContactsId => {\n        return [...prevSelectedContactsId, contactId];\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add_new_border\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCreateGroupFlag(true),\n      children: \" create new group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), contacts.map(contact => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: selectedContactsId.includes(contact.id),\n          id: contact.name,\n          onChange: () => handleCheckboxChange(contact.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }, this), contact.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NewConversationModal, \"C9OplriEx8il1jmGcmlKgjPIt+0=\", false, function () {\n  return [useContacts, useConversations];\n});\n\n_c = NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/addnewconversation.js"],"names":["React","useState","useContacts","useConversations","Button","NewConversationModal","closeModal","selectedContactsId","setSelectedContactsId","contacts","createConversation","createGroupFlag","setCreateGroupFlag","handleSubmit","e","preventDefault","handleCheckboxChange","contactId","includes","prevSelectedContactsId","filter","id","map","contact","name"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAO,mBAAP;;AAEA,eAAe,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA8C;AAAA;;AAC3D,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,WAAW,EAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAyBP,gBAAgB,EAA/C;AACA,QAAM,CAACQ,eAAD,EAAiBC,kBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;;AAEA,WAASY,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEAL,IAAAA,kBAAkB,CAACH,kBAAD,CAAlB;AACAD,IAAAA,UAAU;AACX;;AAED,WAASU,oBAAT,CAA8BC,SAA9B,EAAyC;AACrC,QAAGV,kBAAkB,CAACW,QAAnB,CAA4BD,SAA5B,CAAH,EACA;AACIT,MAAAA,qBAAqB,CAACW,sBAAsB,IAC3C;AACI,eAAQA,sBAAsB,CAACC,MAAvB,CAA8BC,EAAE,IAAGA,EAAE,KAAGJ,SAAxC,CAAR;AACH,OAHmB,CAArB;AAIH,KAND,MAQK;AACDT,MAAAA,qBAAqB,CAACW,sBAAsB,IAC1C;AACI,eAAO,CAAC,GAAGA,sBAAJ,EAA2BF,SAA3B,CAAP;AACH,OAHkB,CAArB;AAID;AAEN;;AAGD,sBAGI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAI,MAAKL,kBAAkB,CAAC,IAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKH,QAAQ,CAACa,GAAT,CAAaC,OAAO,IACnB;AAAC,0BAEG;AAAA,gCACC;AACD,UAAA,IAAI,EAAC,UADJ;AAED,UAAA,KAAK,EAAEhB,kBAAkB,CAACW,QAAnB,CAA4BK,OAAO,CAACF,EAApC,CAFN;AAGD,UAAA,EAAE,EAAEE,OAAO,CAACC,IAHX;AAID,UAAA,QAAQ,EAAE,MAAMR,oBAAoB,CAACO,OAAO,CAACF,EAAT;AAJnC;AAAA;AAAA;AAAA;AAAA,gBADD,EAMCE,OAAO,CAACC,IANT,oBAMe;AAAA;AAAA;AAAA;AAAA,gBANf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AASW,KAVb,CAFL,eAcI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEX,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAsBD;;GAtDuBR,oB;UAEDH,W,EACUC,gB;;;KAHTE,oB","sourcesContent":["  \r\nimport React, { useState } from 'react'\r\nimport { useContacts } from '../contexts/contactsprovider'\r\nimport { useConversations } from '../contexts/conversationsprovider'\r\nimport {Button} from '@material-ui/core';\r\nimport '../css/addnew.css'\r\n\r\nexport default function NewConversationModal({ closeModal }) {\r\n  const [selectedContactsId, setSelectedContactsId] = useState([])\r\n  const { contacts } = useContacts()\r\n  const { createConversation } = useConversations()\r\n  const [createGroupFlag,setCreateGroupFlag] =useState(false)\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    createConversation(selectedContactsId)\r\n    closeModal()\r\n  }\r\n\r\n  function handleCheckboxChange(contactId) {\r\n      if(selectedContactsId.includes(contactId))\r\n      {\r\n          setSelectedContactsId(prevSelectedContactsId =>\r\n           {\r\n               return (prevSelectedContactsId.filter(id=> id!==contactId))\r\n           } )\r\n      }\r\n\r\n      else {\r\n          setSelectedContactsId(prevSelectedContactsId=>\r\n            {\r\n                return [...prevSelectedContactsId,contactId]\r\n            })\r\n        }\r\n         \r\n  }\r\n\r\n\r\n  return (\r\n    \r\n\r\n      <div className='add_new_border'>\r\n          <button onClick ={ ()=> setCreateGroupFlag(true)}> create new group</button>\r\n          {contacts.map(contact =>\r\n            {return(\r\n\r\n                <div>\r\n                 <input\r\n                type=\"checkbox\"\r\n                value={selectedContactsId.includes(contact.id)}\r\n                id={contact.name}\r\n                onChange={() => handleCheckboxChange(contact.id)}/>\r\n                {contact.name} <br/>\r\n                </div>)}\r\n            )}\r\n          <Button type=\"submit\" onClick={handleSubmit}>Create Group</Button>\r\n\r\n      </div>\r\n    \r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}