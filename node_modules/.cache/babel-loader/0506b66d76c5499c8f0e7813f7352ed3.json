{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\addnewconversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useContacts } from '../contexts/contactsprovider';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { Button } from '@material-ui/core';\nimport '../css/addnew.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal({\n  closeModal\n}) {\n  _s();\n\n  const [selectedContactsId, setSelectedContactsId] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n  const {\n    createConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversation(selectedContactsId);\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactId) {\n    if (selectedContactsId.includes(contactId)) {\n      setSelectedContactsId(prevSelectedContactsId => {\n        return prevSelectedContactsId.filter(id => id !== contactId);\n      });\n    } else {\n      setSelectedContactsId(prevSelectedContactsId => {\n        return [...prevSelectedContactsId, contactId];\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add_new_border\",\n    children: [console.log(contacts), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: selectedContactsId.includes(contact.id),\n      name: contact.name,\n      onChange: () => handleCheckboxChange(contact.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Create Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NewConversationModal, \"1UDfLRd3QJuKyj1WOQ/X/SamHrQ=\", false, function () {\n  return [useContacts, useConversations];\n});\n\n_c = NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/addnewconversation.js"],"names":["React","useState","useContacts","useConversations","Button","NewConversationModal","closeModal","selectedContactsId","setSelectedContactsId","contacts","createConversation","handleSubmit","e","preventDefault","handleCheckboxChange","contactId","includes","prevSelectedContactsId","filter","id","console","log","map","contact","name"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAO,mBAAP;;AAEA,eAAe,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA8C;AAAA;;AAC3D,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,WAAW,EAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAyBP,gBAAgB,EAA/C;;AAEA,WAASQ,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEAH,IAAAA,kBAAkB,CAACH,kBAAD,CAAlB;AACAD,IAAAA,UAAU;AACX;;AAED,WAASQ,oBAAT,CAA8BC,SAA9B,EAAyC;AACrC,QAAGR,kBAAkB,CAACS,QAAnB,CAA4BD,SAA5B,CAAH,EACA;AACIP,MAAAA,qBAAqB,CAACS,sBAAsB,IAC3C;AACI,eAAQA,sBAAsB,CAACC,MAAvB,CAA8BC,EAAE,IAAGA,EAAE,KAAGJ,SAAxC,CAAR;AACH,OAHmB,CAArB;AAIH,KAND,MAQK;AACDP,MAAAA,qBAAqB,CAACS,sBAAsB,IAC1C;AACI,eAAO,CAAC,GAAGA,sBAAJ,EAA2BF,SAA3B,CAAP;AACH,OAHkB,CAArB;AAID;AAIN;;AAED,sBAGI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACKK,OAAO,CAACC,GAAR,CAAYZ,QAAZ,CADL,EAEKA,QAAQ,CAACa,GAAT,CAAaC,OAAO,iBACjB;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEhB,kBAAkB,CAACS,QAAnB,CAA4BO,OAAO,CAACJ,EAApC,CAFT;AAGE,MAAA,IAAI,EAAEI,OAAO,CAACC,IAHhB;AAKE,MAAA,QAAQ,EAAE,MAAMV,oBAAoB,CAACS,OAAO,CAACJ,EAAT;AALtC;AAAA;AAAA;AAAA;AAAA,YADH,CAFL,eAWI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAER,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAmBD;;GAnDuBN,oB;UAEDH,W,EACUC,gB;;;KAHTE,oB","sourcesContent":["  \r\nimport React, { useState } from 'react'\r\nimport { useContacts } from '../contexts/contactsprovider'\r\nimport { useConversations } from '../contexts/conversationsprovider'\r\nimport {Button} from '@material-ui/core';\r\nimport '../css/addnew.css'\r\n\r\nexport default function NewConversationModal({ closeModal }) {\r\n  const [selectedContactsId, setSelectedContactsId] = useState([])\r\n  const { contacts } = useContacts()\r\n  const { createConversation } = useConversations()\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    createConversation(selectedContactsId)\r\n    closeModal()\r\n  }\r\n\r\n  function handleCheckboxChange(contactId) {\r\n      if(selectedContactsId.includes(contactId))\r\n      {\r\n          setSelectedContactsId(prevSelectedContactsId =>\r\n           {\r\n               return (prevSelectedContactsId.filter(id=> id!==contactId))\r\n           } )\r\n      }\r\n\r\n      else {\r\n          setSelectedContactsId(prevSelectedContactsId=>\r\n            {\r\n                return [...prevSelectedContactsId,contactId]\r\n            })\r\n        }\r\n            \r\n\r\n         \r\n  }\r\n\r\n  return (\r\n    \r\n\r\n      <div className='add_new_border'>\r\n          {console.log(contacts)}\r\n          {contacts.map(contact => (\r\n              <input\r\n                type=\"checkbox\"\r\n                value={selectedContactsId.includes(contact.id)}\r\n                name={contact.name}\r\n\r\n                onChange={() => handleCheckboxChange(contact.id)}\r\n              />\r\n          ))}\r\n          <Button type=\"submit\" onClick={handleSubmit}>Create Chat</Button>\r\n\r\n      </div>\r\n    \r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}