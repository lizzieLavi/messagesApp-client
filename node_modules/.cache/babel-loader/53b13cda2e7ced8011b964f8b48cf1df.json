{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport '../css/chat.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { useUser } from '../contexts/userprovider';\nimport { Avatar, IconButton, makeStyles, Modal } from '@material-ui/core';\nimport ChatBody from './chatbody';\nimport SendImageBody from './sendimagebody';\nimport CloseIcon from '@material-ui/icons/Close';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckIcon from '@material-ui/icons/Check';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport Picker from 'emoji-picker-react';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  }\n});\nexport default function Chat() {\n  _s();\n\n  const {\n    selectedConversation,\n    currentConversationIsConnected,\n    typingFlag,\n    setTypingFlag,\n    showDetails,\n    setShowDetails,\n    UpdateConversation\n  } = useConversations();\n  const [imageFlag, setImageFlag] = useState(false);\n  const [imageURL, setImageURL] = useState(false);\n  const [EditGroupNameGlag, setEditGroupNameGlag] = useState(false);\n  const [EditGroupDescriptionGlag, setEditGroupDescriptionGlag] = useState(false);\n  const [emojiFlag, setEmojiFlag] = useState(false);\n  const [Text, setText] = useState(selectedConversation.Name);\n  const [Description, setDescription] = useState(selectedConversation.description);\n  const {\n    info\n  } = useUser();\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    setEditGroupNameGlag(false);\n    setEditGroupDescriptionGlag(false);\n    setEmojiFlag(false);\n  }, [selectedConversation]);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setText(Text + emojiObject.emoji);\n  };\n\n  const onDescriptionEmojiClick = (event, emojiObject) => {\n    setDescription(Description + emojiObject.emoji);\n  };\n\n  const groupheader = () => {\n    let returnValue = '';\n\n    if (typingFlag !== '') {\n      returnValue = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lastSeen\",\n        children: [\" \", typingFlag, \" is typing...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }, this);\n      setTimeout(() => setTypingFlag(''), 1000);\n    } else {\n      let UsersInGroup = '';\n      selectedConversation.Participants.forEach((participant, index) => {\n        if (index === selectedConversation.Participants.length - 1) UsersInGroup = UsersInGroup + participant.name;else UsersInGroup = UsersInGroup + participant.name + ', ';\n      });\n      returnValue = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lastSeen\",\n        children: [UsersInGroup, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }, this);\n    }\n\n    return returnValue;\n  };\n\n  function chatBodyCallback(image) {\n    setImageURL(image);\n    setImageFlag(true);\n  }\n\n  function backToChatCallback() {\n    setImageURL(null);\n    setImageFlag(false);\n  }\n\n  const privateConversationHeader = () => {\n    let returnValue = '';\n\n    if (currentConversationIsConnected === '') {\n      if (typingFlag !== '') {\n        returnValue = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lastSeen\",\n          children: \" typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 27\n        }, this);\n        setTimeout(() => setTypingFlag(''), 1000);\n      } else returnValue = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connected\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 55\n        }, this), \" online \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 28\n      }, this);\n    } else returnValue = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lastSeen\",\n      children: currentConversationIsConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 27\n    }, this);\n\n    return returnValue;\n  };\n\n  function changeGroupName() {\n    let message = {\n      name: \"manager\",\n      message: sessionStorage['name'] + \" changed group name to \" + Text,\n      timeSent: '',\n      containsImage: false,\n      containsRecord: false,\n      recordURL: null\n    };\n    let messages = selectedConversation.Messages;\n    messages.push(message);\n    let updatedConversation = { ...selectedConversation,\n      Name: Text,\n      Messages: messages,\n      LastMasage: message\n    };\n    UpdateConversation(updatedConversation);\n    setEditGroupNameGlag(false);\n  }\n\n  function changeGroupDescription() {\n    let message = {\n      name: \"manager\",\n      message: sessionStorage['name'] + \" changed group Description\",\n      timeSent: '',\n      containsImage: false,\n      containsRecord: false,\n      recordURL: null\n    };\n    let messages = selectedConversation.Messages;\n    messages.push(message);\n    let updatedConversation = { ...selectedConversation,\n      description: Description,\n      Messages: messages,\n      LastMasage: message\n    };\n    UpdateConversation(updatedConversation);\n    setEditGroupDescriptionGlag(false);\n  }\n\n  function closeModal() {\n    setModalOpen(false);\n  }\n\n  const chatSide = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_header\",\n      onClick: () => setShowDetails(true),\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: selectedConversation.ConversationImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_header_info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", selectedConversation.Name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), selectedConversation.isGroup ? groupheader() : privateConversationHeader()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 8\n    }, this), imageFlag ? /*#__PURE__*/_jsxDEV(SendImageBody, {\n      imageURL: imageURL,\n      backToChat: backToChatCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(ChatBody, {\n      imageCallback: chatBodyCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 91\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n\n  return showDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_with_details\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat narrow_chat\",\n      children: chatSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_details_top\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setShowDetails(false),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            paddingLeft: '10px'\n          },\n          children: selectedConversation.isGroup ? 'Group Details:' : 'Contact Details:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chat_details_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_info\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: selectedConversation.ConversationImage,\n            style: {\n              margin: '20px',\n              height: '140px',\n              width: '140px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name_and_lastSeen\",\n            children: [selectedConversation.isGroup && EditGroupNameGlag ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column'\n              },\n              children: [emojiFlag ? /*#__PURE__*/_jsxDEV(Picker, {\n                onEmojiClick: (e, emojiObject) => onEmojiClick(e, emojiObject),\n                pickerStyle: {\n                  width: '100%',\n                  height: '200px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 36\n              }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"edit_group_name\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  className: classes.root,\n                  style: {\n                    padding: '3px'\n                  },\n                  onClick: () => changeGroupName(),\n                  children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 115\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  className: classes.root,\n                  style: {\n                    padding: '3px'\n                  },\n                  onClick: () => setEmojiFlag(!emojiFlag),\n                  children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 122\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultValue: Text,\n                  onChange: e => setText(e.target.value),\n                  style: {\n                    border: 'none',\n                    outline: 'none',\n                    width: '100%',\n                    backgroundColor: 'transparent',\n                    padding: '5px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 20\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"group_title\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: selectedConversation.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 20\n              }, this), !selectedConversation.isGroup ? '' : /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setEditGroupNameGlag(true),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  style: {\n                    fontSize: 'large',\n                    marginLeft: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 108\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"lastSeen\",\n              style: {\n                padding: '10px',\n                paddingLeft: '0px'\n              },\n              children: [\" \", !selectedConversation.isGroup ? privateConversationHeader() : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" created at:  \", selectedConversation.createdDate, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 150\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), selectedConversation.isGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group_description\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"group_title\",\n              style: {\n                padding: '5px'\n              },\n              children: \" Description \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 16\n            }, this), EditGroupDescriptionGlag ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column'\n              },\n              children: [emojiFlag ? /*#__PURE__*/_jsxDEV(Picker, {\n                onEmojiClick: (e, emojiObject) => onDescriptionEmojiClick(e, emojiObject),\n                pickerStyle: {\n                  width: '100%',\n                  height: '200px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 31\n              }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"edit_group_name\",\n                style: {\n                  padding: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  className: classes.root,\n                  style: {\n                    padding: '3px'\n                  },\n                  onClick: () => changeGroupDescription(),\n                  children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 117\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  className: classes.root,\n                  style: {\n                    padding: '3px'\n                  },\n                  onClick: () => setEmojiFlag(!emojiFlag),\n                  children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 117\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultValue: Description,\n                  onChange: e => setDescription(e.target.value),\n                  style: {\n                    border: 'none',\n                    outline: 'none',\n                    width: '100%',\n                    backgroundColor: 'transparent',\n                    padding: '5px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 18\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '20px',\n                  marginRight: '5px'\n                },\n                children: selectedConversation.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setEditGroupDescriptionGlag(true),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  style: {\n                    fontSize: 'large'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 168\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 108\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group_members\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"group_title\",\n              style: {\n                padding: '10px',\n                borderBottom: '1px solid #B0B0B0'\n              },\n              children: [selectedConversation.Participants.length + 1, \" participants\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participant\",\n              style: {\n                cursor: 'pointer',\n                fontSize: '15px'\n              },\n              onClick: () => setModalOpen(true),\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  className: classes.root,\n                  style: {\n                    padding: '3px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(PersonAdd, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 76\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Add Member\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 13\n            }, this), selectedConversation.Participants.map((participant, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"participant\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    src: participant.imageName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 20\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexGrow: '1',\n                      flexDirection: 'row',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"group_participant_name\",\n                      children: participant.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 20\n                    }, this), participant.id === selectedConversation.creatorId ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"group_admin\",\n                      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                        style: {\n                          fontSize: '14px'\n                        },\n                        children: \"Group Manager\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 21\n                    }, this) : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 20\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 20\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 18\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participant\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: info.imageName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexGrow: '1',\n                    flexDirection: 'row',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"group_participant_name\",\n                    children: info.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 20\n                  }, this), sessionStorage['id'] === selectedConversation.creatorId ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"group_admin\",\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: \"Group Manager\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 21\n                  }, this) : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 14\n        }, this) : '', /*#__PURE__*/_jsxDEV(Modal, {\n          className: \"Modal\",\n          open: modalOpen,\n          onClose: closeModal,\n          children: /*#__PURE__*/_jsxDEV(AddGroupMember, {\n            closeModal: closeModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 12\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: chatSide\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Chat, \"7uzgxt/weXNqrcNTP51pguJ2qGo=\", false, function () {\n  return [useConversations, useUser, useStyles];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/chat.js"],"names":["React","useState","useEffect","useConversations","useUser","Avatar","IconButton","makeStyles","Modal","ChatBody","SendImageBody","CloseIcon","EditIcon","CheckIcon","InsertEmoticonIcon","Picker","PersonAdd","useStyles","root","backgroundColor","Chat","selectedConversation","currentConversationIsConnected","typingFlag","setTypingFlag","showDetails","setShowDetails","UpdateConversation","imageFlag","setImageFlag","imageURL","setImageURL","EditGroupNameGlag","setEditGroupNameGlag","EditGroupDescriptionGlag","setEditGroupDescriptionGlag","emojiFlag","setEmojiFlag","Text","setText","Name","Description","setDescription","description","info","classes","modalOpen","setModalOpen","onEmojiClick","event","emojiObject","emoji","onDescriptionEmojiClick","groupheader","returnValue","setTimeout","UsersInGroup","Participants","forEach","participant","index","length","name","chatBodyCallback","image","backToChatCallback","privateConversationHeader","changeGroupName","message","sessionStorage","timeSent","containsImage","containsRecord","recordURL","messages","Messages","push","updatedConversation","LastMasage","changeGroupDescription","closeModal","chatSide","ConversationImage","isGroup","paddingLeft","margin","height","width","display","flexDirection","e","padding","target","value","border","outline","fontSize","marginLeft","createdDate","marginRight","borderBottom","cursor","map","alignItems","imageName","flexGrow","id","creatorId"],"mappings":"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","sourcesContent":["import '../css/chat.css'\r\nimport React from 'react'\r\nimport { useState,useEffect} from 'react'\r\nimport { useConversations } from '../contexts/conversationsprovider';\r\nimport { useUser } from '../contexts/userprovider';\r\nimport { Avatar ,IconButton,makeStyles,Modal} from '@material-ui/core'\r\nimport ChatBody from './chatbody';\r\nimport SendImageBody from './sendimagebody';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport Picker from 'emoji-picker-react';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport default function Chat() {\r\n\r\n    const {selectedConversation,currentConversationIsConnected,typingFlag,\r\n      setTypingFlag,showDetails,setShowDetails,UpdateConversation} = useConversations()\r\n    const [imageFlag,setImageFlag] =useState(false)\r\n    const [imageURL,setImageURL] =useState(false)\r\n    const [EditGroupNameGlag,setEditGroupNameGlag]=useState(false)\r\n    const [EditGroupDescriptionGlag,setEditGroupDescriptionGlag]=useState(false)\r\n    const [emojiFlag,setEmojiFlag]=useState(false)\r\n    const [Text,setText] = useState(selectedConversation.Name)\r\n    const [Description,setDescription] = useState(selectedConversation.description)\r\n    const {info} = useUser()\r\n    const classes = useStyles();\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n\r\n    useEffect(()=>{\r\n      setEditGroupNameGlag(false)\r\n      setEditGroupDescriptionGlag(false)\r\n      setEmojiFlag(false)\r\n\r\n    },[selectedConversation])\r\n\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n      setText(Text + emojiObject.emoji)\r\n    };\r\n\r\n    const onDescriptionEmojiClick = (event, emojiObject) => {\r\n      setDescription(Description + emojiObject.emoji)\r\n    };\r\n\r\n    \r\n\r\n    const groupheader = () =>\r\n    {\r\n      let returnValue = ''\r\n      if(typingFlag !== '')\r\n      {\r\n        returnValue = <div className='lastSeen'> {typingFlag} is typing...</div>\r\n        setTimeout(()=> setTypingFlag(''),1000)\r\n      }\r\n\r\n      else\r\n      {\r\n        let UsersInGroup = ''\r\n        selectedConversation.Participants.forEach((participant,index)=> \r\n        {\r\n            if(index ===  selectedConversation.Participants.length-1 )\r\n                UsersInGroup = UsersInGroup + participant.name\r\n            else\r\n                UsersInGroup= UsersInGroup + participant.name + ', '\r\n        })\r\n            \r\n        returnValue=  <div className='lastSeen'>{UsersInGroup} </div>\r\n\r\n      }\r\n\r\n      return returnValue\r\n    }\r\n\r\n    function chatBodyCallback(image)\r\n    {\r\n      setImageURL(image)\r\n      setImageFlag(true)\r\n    }\r\n\r\n    function backToChatCallback()\r\n    {\r\n      setImageURL(null)\r\n      setImageFlag(false)\r\n    }\r\n\r\n    const privateConversationHeader = () =>\r\n    {\r\n       let returnValue = ''\r\n       if(currentConversationIsConnected === '')\r\n       {\r\n        if(typingFlag !== '')\r\n        {\r\n            returnValue = <div className='lastSeen'> typing...</div>\r\n            setTimeout(()=> setTypingFlag(''),1000)\r\n\r\n        }\r\n\r\n        else returnValue = <div className='connected'><div className='circle'></div> online </div>\r\n            \r\n       }\r\n       else returnValue = <div className='lastSeen'>{currentConversationIsConnected}</div>\r\n\r\n\r\n      return returnValue\r\n\r\n    }\r\n\r\n    function changeGroupName()\r\n    {\r\n      let message={name:\"manager\",message: sessionStorage['name'] +\" changed group name to \" + Text,timeSent:'',containsImage:false,containsRecord:false,recordURL:null}\r\n      let messages=selectedConversation.Messages\r\n      messages.push(message)\r\n      let updatedConversation={...selectedConversation,Name:Text,Messages:messages,LastMasage:message}\r\n      UpdateConversation(updatedConversation)\r\n      setEditGroupNameGlag(false)\r\n\r\n    }\r\n\r\n    function changeGroupDescription()\r\n    {\r\n      let message={name:\"manager\",message: sessionStorage['name'] +\" changed group Description\",timeSent:'',containsImage:false,containsRecord:false,recordURL:null}\r\n      let messages=selectedConversation.Messages\r\n      messages.push(message)\r\n      let updatedConversation={...selectedConversation,description:Description,Messages:messages,LastMasage:message}\r\n      UpdateConversation(updatedConversation)\r\n      setEditGroupDescriptionGlag(false)\r\n\r\n    }\r\n\r\n \r\n\r\n    function closeModal() {\r\n      setModalOpen(false)\r\n    }\r\n\r\n    const chatSide=\r\n    <div>\r\n       <div className='chat_header' onClick={()=>setShowDetails(true)}>\r\n         <Avatar src={selectedConversation.ConversationImage}/>\r\n         <div className='chat_header_info'>\r\n            <h2> {selectedConversation.Name} </h2> \r\n            {selectedConversation.isGroup?  groupheader() : privateConversationHeader()}\r\n\r\n         </div>\r\n       </div>\r\n\r\n       {imageFlag?   <SendImageBody imageURL={imageURL} backToChat={backToChatCallback}/>:<ChatBody imageCallback={chatBodyCallback}/>} \r\n   </div>\r\n\r\n    return (\r\n       \r\n          showDetails?\r\n           <div className='chat_with_details'>\r\n            <div className='chat narrow_chat'>\r\n            {chatSide}\r\n            </div>\r\n\r\n            <div className='chat_details'>\r\n            <div className='chat_details_top'>\r\n              <IconButton onClick={()=>setShowDetails(false)}>\r\n                 <CloseIcon fontSize='large'  />\r\n              </IconButton>\r\n              <h2 style={{paddingLeft:'10px'}}>{selectedConversation.isGroup? 'Group Details:' : 'Contact Details:' }</h2>\r\n            </div>\r\n\r\n\r\n            <span className='chat_details_body'>\r\n\r\n            <div className='user_info'>\r\n              <Avatar src={selectedConversation.ConversationImage} style={{margin:'20px',height:'140px',width:'140px'}}/>\r\n           \r\n              <span className='name_and_lastSeen'>\r\n                {selectedConversation.isGroup && EditGroupNameGlag?\r\n                   <div style={{display:'flex',flexDirection:'column'}}>\r\n                      {emojiFlag?  <Picker onEmojiClick={(e,emojiObject)=>onEmojiClick(e,emojiObject)} pickerStyle={{ width: '100%' ,height:'200px'}}/> : ''}\r\n                     <div className='edit_group_name'>\r\n                \r\n                     <IconButton className={classes.root} style={{padding:'3px'}} onClick={()=>changeGroupName()}><CheckIcon fontSize='large'/></IconButton>\r\n                     <IconButton className={classes.root} style={{padding:'3px'}} onClick={()=>setEmojiFlag(!emojiFlag)}><InsertEmoticonIcon fontSize='large'/></IconButton>\r\n                    \r\n                     <input defaultValue={Text} onChange={(e)=>setText(e.target.value)} style={{border:'none',outline:'none',width:'100%',backgroundColor:'transparent',padding:'5px'}}></input>\r\n                  </div>\r\n                  </div>:\r\n                <span className='group_title'>\r\n                   <h3>{selectedConversation.Name}</h3>\r\n                   {!selectedConversation.isGroup? '':<IconButton onClick={()=>setEditGroupNameGlag(true)}><EditIcon style={{fontSize:'large',marginLeft:'10px'}}/></IconButton>}\r\n                </span>\r\n           }\r\n                \r\n                 <span className='lastSeen' style={{padding:'10px',paddingLeft:'0px'}}> {!selectedConversation.isGroup? privateConversationHeader() :<span> created at:  {selectedConversation.createdDate} </span>}</span>\r\n              </span>\r\n             \r\n            </div>\r\n\r\n            \r\n\r\n            {selectedConversation.isGroup ?\r\n             <div>\r\n            <div className='group_description'>\r\n               <h2 className='group_title' style={{padding:'5px'}}> Description </h2>\r\n              {EditGroupDescriptionGlag?\r\n                \r\n                 <div style={{display:'flex',flexDirection:'column'}}>\r\n                 {emojiFlag?  <Picker onEmojiClick={(e,emojiObject)=>onDescriptionEmojiClick(e,emojiObject)} pickerStyle={{ width: '100%' ,height:'200px'}}/> : ''}\r\n                <div className='edit_group_name' style={{padding:'5px'}}>\r\n            \r\n                <IconButton className={classes.root} style={{padding:'3px'}} onClick={()=>changeGroupDescription()}><CheckIcon fontSize='large'/></IconButton>\r\n                <IconButton className={classes.root} style={{padding:'3px'}} onClick={()=>setEmojiFlag(!emojiFlag)}><InsertEmoticonIcon fontSize='large'/></IconButton>\r\n               \r\n                <input defaultValue={Description} onChange={(e)=>setDescription(e.target.value)} style={{border:'none',outline:'none',width:'100%',backgroundColor:'transparent',padding:'5px'}}></input>\r\n                </div>\r\n                </div>:\r\n              <div style={{padding:'5px'}}>\r\n                \r\n                <span style={{fontSize:'20px',marginRight:'5px'}}>{selectedConversation.description}</span><IconButton onClick={()=>setEditGroupDescriptionGlag(true)}><EditIcon style={{fontSize:'large'}}/></IconButton>\r\n                </div>}\r\n             \r\n            </div>\r\n            \r\n            <div className='group_members'>\r\n            <h2 className='group_title' style={{ padding:'10px' ,borderBottom:'1px solid #B0B0B0'}}>{selectedConversation.Participants.length +1} participants</h2>\r\n            <div className='participant' style={{cursor:'pointer',fontSize:'15px'}} onClick={()=>setModalOpen(true)} >\r\n\r\n              <Avatar>\r\n              <IconButton className={classes.root} style={{padding:'3px'}}><PersonAdd fontSize='large'/></IconButton>\r\n              </Avatar>\r\n              <h3 style={{marginLeft:'10px'}}>Add Member</h3>\r\n            </div>\r\n            {selectedConversation.Participants.map((participant,index)=>\r\n            {\r\n              return(\r\n                 <div key={index} className='participant'>\r\n                   <div style={{display:'flex',flexDirection:'row',alignItems:'center'}}>\r\n                 \r\n                   <Avatar src={participant.imageName}/>\r\n                   <div style={{display:'flex',flexGrow:'1',flexDirection:'row',alignItems:'center'}}>\r\n                   <h3 className='group_participant_name'>{participant.name}</h3>\r\n                   \r\n                   {participant.id===selectedConversation.creatorId?\r\n                    <div className='group_admin'>\r\n                      <h3 style={{fontSize:'14px'}}>Group Manager</h3>\r\n                   </div>:''}\r\n                   </div >\r\n                   </div>\r\n                 </div>)\r\n            })}\r\n\r\n                 <div  className='participant'>\r\n                   <div style={{display:'flex',flexDirection:'row',alignItems:'center'}}>\r\n                 \r\n                   <Avatar src={info.imageName}/>\r\n                   <div style={{display:'flex',flexGrow:'1',flexDirection:'row',alignItems:'center'}}>\r\n                   <h3 className='group_participant_name'>{info.name}</h3>\r\n                   \r\n                   {sessionStorage['id']===selectedConversation.creatorId?\r\n                    <div className='group_admin'>\r\n                      <h3 style={{fontSize:'14px'}}>Group Manager</h3>\r\n                   </div>:''}\r\n                   </div >\r\n                   </div>\r\n                 </div>\r\n\r\n                \r\n            </div>\r\n            </div>:''}\r\n           \r\n            <Modal className='Modal' open={modalOpen} onClose={closeModal} >\r\n               <AddGroupMember closeModal={closeModal}  /> \r\n            </Modal>\r\n            </span>\r\n            </div>\r\n            </div>:\r\n          <div className='chat'>\r\n              {chatSide}\r\n          </div>\r\n\r\n          \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}