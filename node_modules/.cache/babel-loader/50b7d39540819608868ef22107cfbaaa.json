{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\addgroupmember.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useUser } from '../contexts/userprovider';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport '../css/addnew.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddGroupMember({\n  closeModal\n}) {\n  _s();\n\n  const [selectedContactsId, setSelectedContactsId] = useState([]);\n  const {\n    contacts,\n    info\n  } = useUser();\n  const {\n    UpdateConversation,\n    selectedConversation\n  } = useConversations();\n  const [conversationContacts, setConversationContacts] = useState([]); //save group members ids so they will now show in add to group list\n\n  useEffect(() => {\n    let ids = [];\n    selectedConversation.Participants.forEach(participant => {\n      ids.push(participant.id);\n    });\n    setConversationContacts(ids);\n  }, []);\n\n  function AddMember() {\n    let newParticipants = [];\n    newParticipants = selectedConversation.Participants;\n    let messages = selectedConversation.Messages;\n    let message = ''; //save new group participants list\n\n    contacts.forEach(contact => {\n      if (selectedContactsId.includes(contact.id)) {\n        newParticipants.push(contact);\n        message = {\n          name: \"manager\",\n          message: info.name + \" added \" + contact.name + \" to the group\",\n          timeSent: '',\n          containsImage: false,\n          containsRecord: false,\n          recordURL: null\n        };\n        messages.push(message);\n      }\n    });\n    let updatedConversation = { ...selectedConversation,\n      Participants: newParticipants,\n      Messages: messages,\n      LastMessage: message\n    };\n    UpdateConversation(updatedConversation);\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactId) {\n    if (selectedContactsId.includes(contactId)) {\n      setSelectedContactsId(prevSelectedContactsId => {\n        return prevSelectedContactsId.filter(id => id !== contactId);\n      });\n    } else {\n      setSelectedContactsId(prevSelectedContactsId => {\n        return [...prevSelectedContactsId, contactId];\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add_new\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add_new_group_border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new_conversation new_group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1'\n          },\n          className: \"title_and_close\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"add_contact_title\",\n            style: {\n              marginLeft: '80px',\n              paddingRight: '0px'\n            },\n            children: \"Select Members:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              marginLeft: '40px'\n            },\n            className: \"close_add_new\",\n            onClick: () => closeModal(),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflowY: 'overlay',\n            height: '200px'\n          },\n          children: contacts.forEach(contact => {\n            console.log(conversationContacts);\n\n            if (!conversationContacts.includes(contact.id)) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact_item\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  value: selectedContactsId.includes(contact.id),\n                  id: contact.id,\n                  onChange: () => handleCheckboxChange(contact.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    width: '100%'\n                  },\n                  for: contact.id,\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    style: {\n                      margin: '5px'\n                    },\n                    src: process.env.PUBLIC_URL + contact.imageName,\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"enter_phone\",\n                    style: {\n                      marginLeft: '10px',\n                      fontWeight: '400'\n                    },\n                    children: [contact.name, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 30\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add_new_button\",\n            type: \"submit\",\n            onClick: () => AddMember(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddGroupMember, \"AJUBmkP8YkM/GJf+zMzzkqJBUls=\", false, function () {\n  return [useUser, useConversations];\n});\n\n_c = AddGroupMember;\nexport default AddGroupMember;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddGroupMember\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/addgroupmember.js"],"names":["React","useState","useEffect","useUser","useConversations","Avatar","IconButton","CloseIcon","AddGroupMember","closeModal","selectedContactsId","setSelectedContactsId","contacts","info","UpdateConversation","selectedConversation","conversationContacts","setConversationContacts","ids","Participants","forEach","participant","push","id","AddMember","newParticipants","messages","Messages","message","contact","includes","name","timeSent","containsImage","containsRecord","recordURL","updatedConversation","LastMessage","handleCheckboxChange","contactId","prevSelectedContactsId","filter","flex","marginLeft","paddingRight","overflowY","height","console","log","display","flexDirection","alignItems","width","margin","process","env","PUBLIC_URL","imageName","fontWeight","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from 'react'\r\nimport { useUser } from '../contexts/userprovider'\r\nimport { useConversations } from '../contexts/conversationsprovider'\r\nimport {Avatar,IconButton} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport '../css/addnew.css'\r\n\r\nfunction AddGroupMember({closeModal}) {\r\n\r\n    const [selectedContactsId, setSelectedContactsId] = useState([])\r\n    const {contacts,info } = useUser()\r\n    const {UpdateConversation,selectedConversation} = useConversations()\r\n    const [conversationContacts,setConversationContacts]=useState([])\r\n\r\n//save group members ids so they will now show in add to group list\r\n    useEffect(() =>\r\n    { \r\n        let ids=[]\r\n        selectedConversation.Participants.forEach((participant)=>\r\n        {\r\n           ids.push(participant.id)\r\n        }) \r\n        setConversationContacts(ids)\r\n\r\n    },[])\r\n\r\n\r\n\r\n    function AddMember()\r\n    {\r\n\r\n        let newParticipants= []\r\n        newParticipants=selectedConversation.Participants\r\n        let messages=selectedConversation.Messages\r\n        let message=''\r\n     \r\n    //save new group participants list\r\n        contacts.forEach(contact=>\r\n        {\r\n            if(selectedContactsId.includes(contact.id))\r\n            {\r\n                newParticipants.push(contact)\r\n                message={name:\"manager\",message: info.name +\" added \" + contact.name + \" to the group\",timeSent:'',containsImage:false,containsRecord:false,recordURL:null}\r\n                messages.push(message)\r\n\r\n            }\r\n\r\n        })\r\n\r\n\r\n        let updatedConversation={...selectedConversation,Participants:newParticipants,Messages:messages,LastMessage:message}\r\n        UpdateConversation(updatedConversation)\r\n        closeModal()\r\n\r\n    }\r\n\r\n\r\n    function handleCheckboxChange(contactId) \r\n    {\r\n\r\n        if(selectedContactsId.includes(contactId))\r\n        {\r\n            setSelectedContactsId(prevSelectedContactsId =>\r\n            {\r\n                return (prevSelectedContactsId.filter(id=> id!==contactId))\r\n            } )\r\n        }\r\n  \r\n        else\r\n        {\r\n\r\n           setSelectedContactsId(prevSelectedContactsId=>\r\n            {\r\n              return [...prevSelectedContactsId,contactId]\r\n            })\r\n\r\n        }  \r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='add_new'>\r\n           <div className='add_new_group_border'>\r\n              <div className='new_conversation new_group'>\r\n                   <div style={{flex:'1'}} className='title_and_close'>\r\n                         <h2 className='add_contact_title' style={{marginLeft:'80px',paddingRight:'0px'}}>Select Members:</h2> \r\n                         <IconButton style={{marginLeft:'40px'}}className='close_add_new'  onClick={()=>closeModal()}>\r\n                            <CloseIcon fontSize='large' /> \r\n                         </IconButton>\r\n                   </div>\r\n                   <div style={{overflowY:'overlay',height:'200px'}}>\r\n\r\n                     {contacts.forEach(contact =>\r\n                     {\r\n                         console.log(conversationContacts)\r\n                        if(!(conversationContacts.includes(contact.id)))\r\n                        {\r\n                          return(\r\n                             <div className='contact_item' >\r\n                                 <input type=\"checkbox\" value={selectedContactsId.includes(contact.id)}\r\n                                  id={contact.id} onChange={() => handleCheckboxChange(contact.id)}/>\r\n                                 <label style={{display:'flex',flexDirection:'row',alignItems:'center',width:'100%'}}for={contact.id} >\r\n                                    <Avatar  style={{margin:'5px'}} src={process.env.PUBLIC_URL + contact.imageName}   fontSize='large'/>\r\n                                    <h3 className='enter_phone' style={{marginLeft:'10px' ,fontWeight:'400'}}>{contact.name} </h3>\r\n                                 </label>\r\n                 \r\n                             </div>\r\n                            )}}) }  \r\n\r\n                   </div>\r\n                   <div style={{display:'flex' , justifyContent:'center'}}>\r\n                      <button className='add_new_button'  type=\"submit\" onClick={()=>AddMember()}>Add</button>\r\n                   </div>\r\n\r\n             </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddGroupMember\r\n"]},"metadata":{},"sourceType":"module"}