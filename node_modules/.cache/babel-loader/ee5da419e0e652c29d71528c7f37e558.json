{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\contexts\\\\userprovider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext();\nexport function useUser() {\n  _s();\n\n  return useContext(UserContext);\n}\n\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function UserProvider({\n  children\n}) {\n  _s2();\n\n  const [contacts, setContacts] = useState([]);\n  const [info, setInfo] = useState({});\n  const [config, setConfig] = useState('');\n  useEffect(async () => {\n    const response = await axios.get(\"http://localhost:5000/api/logIn/\" + sessionStorage['id'], {\n      'headers': {\n        'x-access-token': sessionStorage['config']\n      }\n    });\n    setInfo({\n      id: response.data._id,\n      name: response.data.name,\n      phone: response.data.phone,\n      ProfilePic: response.data.imageName\n    });\n    setContacts(response.data.contacts);\n  }, [setInfo]);\n\n  async function createContact(phone) {\n    if (phone == info.phone) {\n      console.log('cant Add yourself');\n      return;\n    }\n\n    let checkIfExists = contacts.filter(contact => contact.phone == phone);\n\n    if (checkIfExists.length != 0) {\n      console.log('already exists');\n      return;\n    }\n\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/logIn/getByPhone/\" + phone, {\n        'headers': {\n          'x-access-token': sessionStorage['config']\n        }\n      });\n      const contact = {\n        id: response.data._id,\n        phone: response.data.phone,\n        name: response.data.name,\n        image: response.data.imageName\n      };\n      let newContacts = [...contacts, contact];\n      setContacts(contacts);\n      let UpdatedUser = info;\n      UpdatedUser = { ...info,\n        contacts: newContacts\n      };\n\n      try {\n        await axios.put(\"http://localhost:5000/api/logIn/\" + sessionStorage['id'], UpdatedUser, {\n          'headers': {\n            'x-access-token': sessionStorage['config']\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      setContacts,\n      setConfig,\n      setInfo,\n      info,\n      config,\n      contacts,\n      createContact\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserProvider, \"4vcc6V3P0uYYlsaAV3xys3vDGww=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/contexts/userprovider.js"],"names":["React","useState","useEffect","useContext","axios","UserContext","createContext","useUser","UserProvider","children","contacts","setContacts","info","setInfo","config","setConfig","response","get","sessionStorage","id","data","_id","name","phone","ProfilePic","imageName","createContact","console","log","checkIfExists","filter","contact","length","image","newContacts","UpdatedUser","put","err"],"mappings":"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","sourcesContent":["\r\nimport React, { useState ,useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport  function UserProvider({ children })\r\n{\r\n  const [contacts, setContacts] = useState([])\r\n  const [info,setInfo] =useState({})\r\n  const [config,setConfig] =useState('')\r\n\r\n  useEffect(async ()=>\r\n  {\r\n      const response = await axios.get(\"http://localhost:5000/api/logIn/\"+sessionStorage['id'],{'headers': {'x-access-token':sessionStorage['config']}});\r\n      setInfo({id:response.data._id,name:response.data.name,phone:response.data.phone,ProfilePic:response.data.imageName})\r\n      setContacts(response.data.contacts)\r\n       \r\n   }, [setInfo]);\r\n\r\n\r\n  async function createContact(phone)\r\n  {\r\n    if(phone==info.phone)\r\n    {\r\n      console.log('cant Add yourself')\r\n       return;\r\n    }\r\n\r\n    let checkIfExists = contacts.filter(contact=> contact.phone==phone)\r\n\r\n    if(checkIfExists.length != 0)\r\n    {\r\n      console.log('already exists')\r\n      return;\r\n    }\r\n\r\n    try{ \r\n      const response= await axios.get(\"http://localhost:5000/api/logIn/getByPhone/\" + phone,{'headers': {'x-access-token':sessionStorage['config']}})\r\n      const contact = {id:response.data._id,phone:response.data.phone,name:response.data.name,image:response.data.imageName}\r\n      let newContacts = [...contacts,contact]\r\n      setContacts(contacts)\r\n      let UpdatedUser = info\r\n      UpdatedUser={...info,contacts:newContacts}\r\n       try{\r\n        await axios.put(\"http://localhost:5000/api/logIn/\" + sessionStorage['id'],UpdatedUser,{'headers': {'x-access-token':sessionStorage['config']}})\r\n       } catch(err){console.log(err)}\r\n     \r\n    } catch(err){console.log(err)}\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={{setContacts,setConfig,setInfo,info,config,contacts,createContact }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}