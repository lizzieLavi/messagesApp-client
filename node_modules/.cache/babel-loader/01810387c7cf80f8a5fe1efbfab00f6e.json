{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\addnewconversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useContacts } from '../contexts/contactsprovider';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { Button } from '@material-ui/core';\nimport '../css/addnew.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal({\n  closeModal\n}) {\n  _s();\n\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n  const {\n    createConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversation(selectedContactIds);\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId;\n        });\n      } else {\n        return [...prevSelectedContactIds, contactId];\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add_new_border\",\n    children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: selectedContactIds.includes(contact.id),\n      label: contact.name,\n      onChange: () => handleCheckboxChange(contact.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Create Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NewConversationModal, \"vQmONcecoWX1cwhaThpVMl7yKI4=\", false, function () {\n  return [useContacts, useConversations];\n});\n\n_c = NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/addnewconversation.js"],"names":["React","useState","useContacts","useConversations","Button","NewConversationModal","closeModal","selectedContactIds","setSelectedContactIds","contacts","createConversation","handleSubmit","e","preventDefault","handleCheckboxChange","contactId","prevSelectedContactIds","includes","filter","prevId","map","contact","id","name"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,MAAT,QAAsB,mBAAtB;AACA,OAAO,mBAAP;;AAEA,eAAe,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA8C;AAAA;;AAC3D,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,WAAW,EAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAyBP,gBAAgB,EAA/C;;AAEA,WAASQ,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEAH,IAAAA,kBAAkB,CAACH,kBAAD,CAAlB;AACAD,IAAAA,UAAU;AACX;;AAED,WAASQ,oBAAT,CAA8BC,SAA9B,EAAyC;AACvCP,IAAAA,qBAAqB,CAACQ,sBAAsB,IAAI;AAC9C,UAAIA,sBAAsB,CAACC,QAAvB,CAAgCF,SAAhC,CAAJ,EAAgD;AAC9C,eAAOC,sBAAsB,CAACE,MAAvB,CAA8BC,MAAM,IAAI;AAC7C,iBAAOJ,SAAS,KAAKI,MAArB;AACD,SAFM,CAAP;AAGD,OAJD,MAIO;AACL,eAAO,CAAC,GAAGH,sBAAJ,EAA4BD,SAA5B,CAAP;AACD;AACF,KARoB,CAArB;AASD;;AAED,sBAGI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACKN,QAAQ,CAACW,GAAT,CAAaC,OAAO,iBACjB;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEd,kBAAkB,CAACU,QAAnB,CAA4BI,OAAO,CAACC,EAApC,CAFT;AAGE,MAAA,KAAK,EAAED,OAAO,CAACE,IAHjB;AAIE,MAAA,QAAQ,EAAE,MAAMT,oBAAoB,CAACO,OAAO,CAACC,EAAT;AAJtC;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eASI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEX,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAiBD;;GAzCuBN,oB;UAEDH,W,EACUC,gB;;;KAHTE,oB","sourcesContent":["  \r\nimport React, { useState } from 'react'\r\nimport { useContacts } from '../contexts/contactsprovider'\r\nimport { useConversations } from '../contexts/conversationsprovider'\r\nimport { Button} from '@material-ui/core';\r\nimport '../css/addnew.css'\r\n\r\nexport default function NewConversationModal({ closeModal }) {\r\n  const [selectedContactIds, setSelectedContactIds] = useState([])\r\n  const { contacts } = useContacts()\r\n  const { createConversation } = useConversations()\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    createConversation(selectedContactIds)\r\n    closeModal()\r\n  }\r\n\r\n  function handleCheckboxChange(contactId) {\r\n    setSelectedContactIds(prevSelectedContactIds => {\r\n      if (prevSelectedContactIds.includes(contactId)) {\r\n        return prevSelectedContactIds.filter(prevId => {\r\n          return contactId !== prevId\r\n        })\r\n      } else {\r\n        return [...prevSelectedContactIds, contactId]\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    \r\n\r\n      <div className='add_new_border'>\r\n          {contacts.map(contact => (\r\n              <input\r\n                type=\"checkbox\"\r\n                value={selectedContactIds.includes(contact.id)}\r\n                label={contact.name}\r\n                onChange={() => handleCheckboxChange(contact.id)}\r\n              />\r\n          ))}\r\n          <Button type=\"submit\" onClick={handleSubmit}>Create Chat</Button>\r\n\r\n      </div>\r\n    \r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}