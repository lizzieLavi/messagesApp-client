{"ast":null,"code":"import _slicedToArray from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'../css/chat.css';import'../css/sidebar.css';import React from'react';import ShowGroupDetails from'./showgroupdetails';import ShowUserDetails from'./showuserdetails';import{useState}from'react';import{useConversations}from'../contexts/conversationsprovider';import{Avatar,IconButton}from'@material-ui/core';import ChatBody from'./chatbody';import SendImageBody from'./sendimagebody';import CloseIcon from'@material-ui/icons/Close';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Chat(){var _useConversations=useConversations(),selectedConversation=_useConversations.selectedConversation,currentConversationIsConnected=_useConversations.currentConversationIsConnected,typingFlag=_useConversations.typingFlag,setTypingFlag=_useConversations.setTypingFlag,showDetails=_useConversations.showDetails,setShowDetails=_useConversations.setShowDetails;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),imageFlag=_useState2[0],setImageFlag=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),imageURL=_useState4[0],setImageURL=_useState4[1];//check if user is connected/disconnected/typing\nvar privateConversationHeader=function privateConversationHeader(){var returnValue='';if(currentConversationIsConnected===''){if(typingFlag!==''){returnValue=/*#__PURE__*/_jsx(\"div\",{className:\"lastSeen\",children:\" typing...\"});setTimeout(function(){return setTypingFlag('');},1000);}else returnValue=/*#__PURE__*/_jsxs(\"div\",{className:\"connected\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"circle\"}),\" online \"]});}else returnValue=/*#__PURE__*/_jsx(\"div\",{className:\"lastSeen\",children:currentConversationIsConnected});return returnValue;};var groupheader=function groupheader(){var returnValue='';if(typingFlag!==''){returnValue=/*#__PURE__*/_jsxs(\"div\",{className:\"lastSeen\",children:[\" \",typingFlag,\" is typing...\"]});setTimeout(function(){return setTypingFlag('');},1000);}else{var UsersInGroup='';selectedConversation.Participants.forEach(function(participant,index){if(index===selectedConversation.Participants.length-1)UsersInGroup=UsersInGroup+participant.name;else UsersInGroup=UsersInGroup+participant.name+', ';});returnValue=/*#__PURE__*/_jsxs(\"div\",{className:\"lastSeen\",children:[UsersInGroup,\" \"]});}return returnValue;};function chatBodyCallback(image){setImageURL(image);setImageFlag(true);}function backToChatCallback(){setImageURL(null);setImageFlag(false);}var chatSide=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat_header\",onClick:function onClick(){return setShowDetails(true);},children:[/*#__PURE__*/_jsx(Avatar,{src:selectedConversation.ConversationImage}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat_header_info\",children:[/*#__PURE__*/_jsxs(\"h2\",{style:{fontSize:'20px'},children:[\" \",selectedConversation.Name,\" \"]}),selectedConversation.isGroup?groupheader():privateConversationHeader()]})]}),imageFlag?/*#__PURE__*/_jsx(SendImageBody,{imageURL:imageURL,backToChat:backToChatCallback}):/*#__PURE__*/_jsx(ChatBody,{imageCallback:chatBodyCallback})]});return showDetails?/*#__PURE__*/_jsxs(\"div\",{className:\"chat_with_details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat narrow_chat\",children:chatSide}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat_details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat_details_top \",children:[/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(){return setShowDetails(false);},children:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"large\"})}),/*#__PURE__*/_jsx(\"h2\",{style:{paddingLeft:'10px',fontSize:'22px'},children:selectedConversation.isGroup?'Group Details:':'Contact Details:'})]}),/*#__PURE__*/_jsx(\"span\",{className:\"chat_details_body\",children:selectedConversation.isGroup?/*#__PURE__*/_jsx(ShowGroupDetails,{}):/*#__PURE__*/_jsx(ShowUserDetails,{privateConversationHeader:privateConversationHeader})})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"chat\",children:chatSide});}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/chat.js"],"names":["React","ShowGroupDetails","ShowUserDetails","useState","useConversations","Avatar","IconButton","ChatBody","SendImageBody","CloseIcon","Chat","selectedConversation","currentConversationIsConnected","typingFlag","setTypingFlag","showDetails","setShowDetails","imageFlag","setImageFlag","imageURL","setImageURL","privateConversationHeader","returnValue","setTimeout","groupheader","UsersInGroup","Participants","forEach","participant","index","length","name","chatBodyCallback","image","backToChatCallback","chatSide","ConversationImage","fontSize","Name","isGroup","paddingLeft"],"mappings":"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","sourcesContent":["import '../css/chat.css'\r\nimport '../css/sidebar.css'\r\nimport React from 'react'\r\nimport ShowGroupDetails from './showgroupdetails'\r\nimport ShowUserDetails from './showuserdetails'\r\nimport { useState} from 'react'\r\nimport { useConversations } from '../contexts/conversationsprovider';\r\nimport { Avatar ,IconButton} from '@material-ui/core'\r\nimport ChatBody from './chatbody';\r\nimport SendImageBody from './sendimagebody';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function Chat() \r\n{\r\n\r\n  const {selectedConversation,currentConversationIsConnected,typingFlag,setTypingFlag,showDetails,setShowDetails} = useConversations()\r\n  const [imageFlag,setImageFlag] =useState(false)\r\n  const [imageURL,setImageURL] =useState(false)\r\n\r\n  //check if user is connected/disconnected/typing\r\n  const privateConversationHeader = () =>\r\n  {\r\n  \r\n    let returnValue = ''\r\n    if(currentConversationIsConnected === '')\r\n    {\r\n      if(typingFlag !== '')\r\n      {\r\n        returnValue = <div className='lastSeen'> typing...</div>\r\n        setTimeout(()=> setTypingFlag(''),1000)\r\n      }\r\n  \r\n      else returnValue = <div className='connected'><div className='circle'></div> online </div>\r\n              \r\n    }\r\n  \r\n    else returnValue = <div className='lastSeen'>{currentConversationIsConnected}</div>\r\n  \r\n  \r\n    return returnValue\r\n  \r\n  }\r\n\r\n  const groupheader = () =>\r\n  {\r\n\r\n    let returnValue = ''\r\n    if(typingFlag !== '')\r\n    {\r\n      returnValue = <div className='lastSeen'> {typingFlag} is typing...</div>\r\n      setTimeout(()=> setTypingFlag(''),1000)\r\n    }\r\n\r\n    else\r\n    {\r\n\r\n      let UsersInGroup = ''\r\n\r\n      selectedConversation.Participants.forEach((participant,index)=> \r\n      {\r\n        if(index ===  selectedConversation.Participants.length-1 )\r\n          UsersInGroup = UsersInGroup + participant.name\r\n        else\r\n          UsersInGroup= UsersInGroup + participant.name + ', '\r\n      })\r\n            \r\n      returnValue=  <div className='lastSeen'>{UsersInGroup} </div>\r\n\r\n    }\r\n\r\n    return returnValue\r\n  }\r\n\r\n  function chatBodyCallback(image)\r\n  {\r\n    setImageURL(image)\r\n    setImageFlag(true)\r\n  }\r\n\r\n  function backToChatCallback()\r\n  {\r\n    setImageURL(null)\r\n    setImageFlag(false)\r\n  }\r\n\r\n\r\n  const chatSide=\r\n    <div>\r\n      <div className='chat_header' onClick={()=>setShowDetails(true)}>\r\n        <Avatar src={selectedConversation.ConversationImage}/>\r\n        <div className='chat_header_info'>\r\n          <h2 style={{fontSize:'20px'}}> {selectedConversation.Name} </h2> \r\n          {selectedConversation.isGroup?  groupheader() : privateConversationHeader()}\r\n        </div>\r\n      </div>\r\n      {imageFlag? <SendImageBody imageURL={imageURL} backToChat={backToChatCallback}/>:<ChatBody imageCallback={chatBodyCallback}/>} \r\n    </div>\r\n\r\n\r\n  return (\r\n       \r\n    showDetails?\r\n      <div className='chat_with_details'>\r\n        <div className='chat narrow_chat'>\r\n          {chatSide}\r\n        </div>\r\n\r\n        <div className='chat_details'>\r\n          <div className='chat_details_top '>\r\n            <IconButton onClick={()=>setShowDetails(false)}>\r\n              <CloseIcon fontSize='large'  />\r\n            </IconButton>\r\n            <h2 style={{paddingLeft:'10px',fontSize:'22px'}}>{selectedConversation.isGroup? 'Group Details:' : 'Contact Details:' }</h2>\r\n          </div>\r\n\r\n          <span className='chat_details_body'>\r\n              {selectedConversation.isGroup? <ShowGroupDetails/>: <ShowUserDetails privateConversationHeader={privateConversationHeader}/>}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      :\r\n      <div className='chat'>\r\n        {chatSide}\r\n      </div>\r\n\r\n          \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}