{"ast":null,"code":"import _slicedToArray from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'../css/chat.css';import'../css/sendimagebody.css';import React,{useRef}from'react';import{useState}from'react';import{useConversations}from'../contexts/conversationsprovider';import{useSocket}from'../contexts/socketprovider';import{useUser}from'../contexts/userprovider';import SendIcon from'@material-ui/icons/Send';import{IconButton}from'@material-ui/core';import CloseIcon from'@material-ui/icons/Close';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SendImageBody(props){var inputRef=useRef(null);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),Text=_useState2[0],setText=_useState2[1];var _useSocket=useSocket(),socket=_useSocket.socket;var _useUser=useUser(),info=_useUser.info;var _useConversations=useConversations(),sendMessage=_useConversations.sendMessage,selectedConversation=_useConversations.selectedConversation;function handleSubmit(imageFlag){if(imageFlag===true)sendMessage(Text,true,props.imageURL);setText(' ');props.backToChat();}function typing(e){setText(e.target.value);if(socket.current==null)return;socket.current.emit(\"typing\",{user:info,Conversation:selectedConversation});}return/*#__PURE__*/_jsxs(\"div\",{className:\"SendImage\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sendImageHeader\"}),/*#__PURE__*/_jsx(IconButton,{type:\"submit\",onClick:function onClick(){return handleSubmit(false);},children:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"large\"})}),/*#__PURE__*/_jsx(\"img\",{src:props.imageURL,alt:\"\",height:\"300px\",width:\"300px\"}),/*#__PURE__*/_jsx(\"div\",{className:\"add_message\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(){return handleSubmit(true);},className:\"message_section\",children:[/*#__PURE__*/_jsx(IconButton,{type:\"submit\",style:{flex:'0.1'},children:/*#__PURE__*/_jsx(SendIcon,{fontSize:\"large\"})}),/*#__PURE__*/_jsx(\"input\",{className:\"message_input\",ref:inputRef,value:Text,onChange:typing,type:\"text\",placeholder:\"type a message\"})]})})]});}export default SendImageBody;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/sendimagebody.js"],"names":["React","useRef","useState","useConversations","useSocket","useUser","SendIcon","IconButton","CloseIcon","SendImageBody","props","inputRef","Text","setText","socket","info","sendMessage","selectedConversation","handleSubmit","imageFlag","imageURL","backToChat","typing","e","target","value","current","emit","user","Conversation","flex"],"mappings":"uKAAA,MAAO,iBAAP,CACA,MAAO,0BAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAAQC,QAAR,KAAuB,OAAvB,CACA,OAAQC,gBAAR,KAAgC,mCAAhC,CACA,OAAQC,SAAR,KAAwB,4BAAxB,CACA,OAAQC,OAAR,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAAQC,UAAR,KAA0B,mBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,C,wFAGA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CACA,CAEE,GAAMC,CAAAA,QAAQ,CAAGV,MAAM,CAAC,IAAD,CAAvB,CACA,cAAuBC,QAAQ,CAAC,EAAD,CAA/B,wCAAOU,IAAP,eAAYC,OAAZ,eACA,eAAiBT,SAAS,EAA1B,CAAOU,MAAP,YAAOA,MAAP,CACA,aAAeT,OAAO,EAAtB,CAAOU,IAAP,UAAOA,IAAP,CACA,sBAA2CZ,gBAAgB,EAA3D,CAAOa,WAAP,mBAAOA,WAAP,CAAmBC,oBAAnB,mBAAmBA,oBAAnB,CAEA,QAASC,CAAAA,YAAT,CAAsBC,SAAtB,CACA,CAEE,GAAGA,SAAS,GAAG,IAAf,CACEH,WAAW,CAACJ,IAAD,CAAM,IAAN,CAAWF,KAAK,CAACU,QAAjB,CAAX,CAEFP,OAAO,CAAC,GAAD,CAAP,CACAH,KAAK,CAACW,UAAN,GAED,CAED,QAASC,CAAAA,MAAT,CAAgBC,CAAhB,CACA,CAEEV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CAEA,GAAIX,MAAM,CAACY,OAAP,EAAkB,IAAtB,CAA4B,OAC1BZ,MAAM,CAACY,OAAP,CAAeC,IAAf,CAAoB,QAApB,CAA8B,CAACC,IAAI,CAACb,IAAN,CAAWc,YAAY,CAACZ,oBAAxB,CAA9B,EAEH,CAEC,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,YAAK,SAAS,CAAC,iBAAf,EADF,cAEI,KAAC,UAAD,EAAY,IAAI,CAAC,QAAjB,CAA0B,OAAO,CAAE,yBAAIC,CAAAA,YAAY,CAAC,KAAD,CAAhB,EAAnC,uBACE,KAAC,SAAD,EAAW,QAAQ,CAAC,OAApB,EADF,EAFJ,cAKI,YAAK,GAAG,CAAGR,KAAK,CAACU,QAAjB,CAA2B,GAAG,CAAC,EAA/B,CAAkC,MAAM,CAAC,OAAzC,CAAiD,KAAK,CAAC,OAAvD,EALJ,cAMI,YAAK,SAAS,CAAC,aAAf,uBACE,cAAM,QAAQ,CAAE,0BAAIF,CAAAA,YAAY,CAAC,IAAD,CAAhB,EAAhB,CAAwC,SAAS,CAAC,iBAAlD,wBACE,KAAC,UAAD,EAAY,IAAI,CAAC,QAAjB,CAA0B,KAAK,CAAE,CAACY,IAAI,CAAC,KAAN,CAAjC,uBACE,KAAC,QAAD,EAAU,QAAQ,CAAC,OAAnB,EADF,EADF,cAIE,cAAO,SAAS,CAAC,eAAjB,CAAiC,GAAG,CAAEnB,QAAtC,CAAiD,KAAK,CAAEC,IAAxD,CAA8D,QAAQ,CAAEU,MAAxE,CAAgF,IAAI,CAAC,MAArF,CAA4F,WAAW,CAAC,gBAAxG,EAJF,GADF,EANJ,GADF,CAiBH,CAED,cAAeb,CAAAA,aAAf","sourcesContent":["import '../css/chat.css'\r\nimport '../css/sendimagebody.css'\r\nimport React, { useRef } from 'react'\r\nimport {useState} from 'react'\r\nimport {useConversations } from '../contexts/conversationsprovider';\r\nimport {useSocket} from '../contexts/socketprovider';\r\nimport {useUser} from '../contexts/userprovider';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {IconButton } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nfunction SendImageBody(props) \r\n{\r\n\r\n  const inputRef = useRef(null)\r\n  const [Text,setText] = useState('')\r\n  const {socket} = useSocket()\r\n  const {info} = useUser()\r\n  const {sendMessage,selectedConversation} = useConversations()\r\n\r\n  function handleSubmit(imageFlag)\r\n  {\r\n\r\n    if(imageFlag===true)\r\n      sendMessage(Text,true,props.imageURL)\r\n\r\n    setText(' ')\r\n    props.backToChat()\r\n\r\n  }\r\n\r\n  function typing(e)\r\n  {\r\n\r\n    setText(e.target.value)\r\n\r\n    if (socket.current == null) return;\r\n      socket.current.emit(\"typing\", {user:info,Conversation:selectedConversation})\r\n\r\n  }\r\n\r\n    return (\r\n      <div className='SendImage'>\r\n        <div className='sendImageHeader'></div>\r\n          <IconButton type='submit' onClick={()=>handleSubmit(false)}>\r\n            <CloseIcon fontSize='large' /> \r\n          </IconButton>\r\n          <img src= {props.imageURL} alt='' height='300px' width='300px'/>\r\n          <div className='add_message'>\r\n            <form onSubmit={()=>handleSubmit(true)} className='message_section'>\r\n              <IconButton type='submit' style={{flex:'0.1'}}>\r\n                <SendIcon fontSize='large'/>\r\n              </IconButton>\r\n              <input className='message_input' ref={inputRef}  value={Text} onChange={typing} type='text' placeholder='type a message'/>\r\n            </form>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SendImageBody\r\n"]},"metadata":{},"sourceType":"module"}