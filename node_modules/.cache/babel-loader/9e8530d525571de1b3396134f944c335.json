{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\message.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useState, useCallback, useEffect } from 'react';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { useSocket } from '../contexts/socketprovider';\nimport { useUser } from '../contexts/userprovider';\nimport { IconButton } from '@material-ui/core';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ImageIcon from '@material-ui/icons/Image';\nimport Picker from 'emoji-picker-react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Message({\n  sender,\n  message\n}) {\n  _s();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [SelectedImageURL, setSelectedImageURL] = useState(null);\n\n  function openImage(URL) {\n    setModalOpen(true);\n    setSelectedImageURL(URL);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: sender,\n      ref: lastMessage ? setRef : null,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sender_name\",\n        children: message.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), message.containsImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image_in_message\",\n        src: message.imageURL,\n        onClick: () => openImage(message.imageURL),\n        width: \"200px\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message_time_and_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message_content\",\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message_time\",\n          children: message.timeSent.substring(11, 17)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: () => setModalOpen(false),\n      open: modalOpen,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SelectedImageURL,\n        height: \"500px\",\n        width: \"500px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Message, \"YeZ3IAtyLy6ZII/VJXwZ8NSHRNc=\");\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/message.js"],"names":["React","useRef","useState","useCallback","useEffect","useConversations","useSocket","useUser","IconButton","InsertEmoticonIcon","MicIcon","CloseIcon","ImageIcon","Picker","Dialog","useReactMediaRecorder","axios","Message","sender","message","modalOpen","setModalOpen","SelectedImageURL","setSelectedImageURL","openImage","URL","lastMessage","setRef","name","containsImage","imageURL","timeSent","substring"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAA+BC,SAA/B,QAA+C,OAA/C;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,SAAT,QAAyB,4BAAzB;AACA,SAASC,OAAT,QAAuB,0BAAvB;AACA,SAAQC,UAAR,QAA0B,mBAA1B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,OAAT,CAAiB;AAACC,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAjB,EAAmC;AAAA;;AAE/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoB,gBAAD,EAAkBC,mBAAlB,IAAwCrB,QAAQ,CAAC,IAAD,CAAtD;;AAGA,WAASsB,SAAT,CAAmBC,GAAnB,EACA;AACEJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,mBAAmB,CAACE,GAAD,CAAnB;AAED;;AAGD,sBACI;AAAA,4BACG;AAAG,MAAA,SAAS,EAAEP,MAAd;AAAsB,MAAA,GAAG,EAAEQ,WAAW,GAAGC,MAAH,GAAY,IAAlD;AAAA,8BACG;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BR,OAAO,CAACS;AAAvC;AAAA;AAAA;AAAA;AAAA,cADH,EAEIT,OAAO,CAACU,aAAR,gBACD;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,GAAG,EAAEV,OAAO,CAACW,QAA/C;AAAyD,QAAA,OAAO,EAAE,MAAIN,SAAS,CAACL,OAAO,CAACW,QAAT,CAA/E;AAAmG,QAAA,KAAK,EAAC,OAAzG;AAAiH,QAAA,MAAM,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,cADC,GAEC,EAJL,eAOC;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA,gCAAwC;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCX,OAAO,CAACA;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAAxC,eACA;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA,oBAAiCA,OAAO,CAACY,QAAT,CAAmBC,SAAnB,CAA6B,EAA7B,EAAgC,EAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAaK,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAKX,YAAY,CAAC,KAAD,CAAlC;AAA4C,MAAA,IAAI,EAAED,SAAlD;AAAA,6BACG;AAAK,QAAA,GAAG,EAAEE,gBAAV;AAA6B,QAAA,MAAM,EAAC,OAApC;AAA4C,QAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAbL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAjCQL,O;;KAAAA,O;AAmCT,eAAeA,OAAf","sourcesContent":["\r\nimport React, { useRef } from 'react'\r\nimport { useState ,useCallback,useEffect} from 'react'\r\nimport { useConversations } from '../contexts/conversationsprovider';\r\nimport { useSocket} from '../contexts/socketprovider';\r\nimport { useUser} from '../contexts/userprovider';\r\nimport {IconButton } from '@material-ui/core'\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport Picker from 'emoji-picker-react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { useReactMediaRecorder } from \"react-media-recorder\";\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Message({sender,message}) {\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [SelectedImageURL,setSelectedImageURL] =useState(null)\r\n\r\n\r\n    function openImage(URL)\r\n    {\r\n      setModalOpen(true)\r\n      setSelectedImageURL(URL)\r\n     \r\n    }\r\n\r\n\r\n    return (\r\n        <div>      \r\n           <p className={sender} ref={lastMessage ? setRef : null}>\r\n              <span className='sender_name'>{message.name}</span>\r\n              {message.containsImage? \r\n              <img className='image_in_message' src={message.imageURL} onClick={()=>openImage(message.imageURL)} width='200px' height='200px' /> \r\n              : ''}\r\n  \r\n          \r\n            <p className='message_time_and_content'><span className='message_content'>{message.message}</span> \r\n            <span className='message_time'>{(message.timeSent).substring(11,17)}</span> </p>\r\n    \r\n             </p> \r\n\r\n             <Dialog onClose={()=> setModalOpen(false)}  open={modalOpen}>\r\n                <img src={SelectedImageURL}  height='500px' width='500px'/>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\n"]},"metadata":{},"sourceType":"module"}