{"ast":null,"code":"import _toConsumableArray from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/User/OneDrive/Desktop/whatsapp/myclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useCallback,useRef}from\"react\";import{useState,useEffect}from\"react\";import{useUser}from\"./userprovider\";import{useSocket}from\"./socketprovider\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";var ConversationsContext=/*#__PURE__*/React.createContext();export function useConversations(){return useContext(ConversationsContext);}export function ConversationsProvider(_ref){var id=_ref.id,children=_ref.children;var _useUser=useUser(),contacts=_useUser.contacts,info=_useUser.info;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),conversations=_useState2[0],setConversations=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),selectedConversation=_useState4[0],setSelectedConversation=_useState4[1];var RefConversations=useRef(conversations);var currentConversationRef=useRef(selectedConversation);var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),createGroupFlag=_useState6[0],setCreateGroupFlag=_useState6[1];var _useSocket=useSocket(),socket=_useSocket.socket,ConnectedUsers=_useSocket.ConnectedUsers;var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),typingFlag=_useState8[0],setTypingFlag=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),currentConversationIsConnected=_useState10[0],setCurrentConversationIsConnected=_useState10[1];var config={headers:{\"x-access-token\":sessionStorage[\"config\"]}};var audio=new Audio('https://res.cloudinary.com/dsrgpqnyv/video/upload/v1630680168/juntos-607_qsfc7i.mp3');useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(socket.current==null)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:socket.current.on('user-typing',function(_ref2){var user=_ref2.user,conversationId=_ref2.conversationId;if(selectedConversation){if(selectedConversation._id===conversationId){setTypingFlag(user.name);}}});case 3:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[selectedConversation]);useEffect(function(){function fetchData(){return _fetchData2.apply(this,arguments);}function _fetchData2(){_fetchData2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!selectedConversation){_context2.next=10;break;}if(selectedConversation.isGroup){_context2.next=10;break;}if(!ConnectedUsers.some(function(user){return user.userId===selectedConversation.Participants[0].id;})){_context2.next=6;break;}setCurrentConversationIsConnected('');_context2.next=10;break;case 6:_context2.next=8;return axios.get(\"https://messagesapp1.herokuapp.com/api/logIn/\"+selectedConversation.Participants[0].id,config);case 8:response=_context2.sent;setCurrentConversationIsConnected(response.data.LastSeen);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return _fetchData2.apply(this,arguments);}fetchData();},[ConnectedUsers,selectedConversation]);useEffect(function(){function fetchData(){return _fetchData3.apply(this,arguments);}function _fetchData3(){_fetchData3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:getConversations().then(function(res){return setConversations(res);});case 1:case\"end\":return _context3.stop();}}},_callee3);}));return _fetchData3.apply(this,arguments);}fetchData();},[]);function getConversations(){return _getConversations.apply(this,arguments);}function _getConversations(){_getConversations=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var response,ConversationsList;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return axios.get(\"https://messagesapp1.herokuapp.com/api/conversations/UserConversations/\"+sessionStorage[\"id\"],config);case 3:response=_context5.sent;ConversationsList=response.data.map(function(conversation){var UpdatedConversation=conversation;if(conversation.Participants.length===1&&conversation.Name===sessionStorage[\"name\"])UpdatedConversation=_objectSpread(_objectSpread({},UpdatedConversation),{},{Name:conversation.Participants[0].name,ConversationImage:conversation.Participants[0].image});if(selectedConversation){if(selectedConversation.id===UpdatedConversation.id)setSelectedConversation(UpdatedConversation);}return UpdatedConversation;});return _context5.abrupt(\"return\",ConversationsList);case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](0);console.log(_context5.t0);case 11:case\"end\":return _context5.stop();}}},_callee5,null,[[0,8]]);}));return _getConversations.apply(this,arguments);}function getSearchConverastions(_x){return _getSearchConverastions.apply(this,arguments);}function _getSearchConverastions(){_getSearchConverastions=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(str){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:getConversations().then(function(res){var SearchResult=res.filter(function(conversation){return conversation.Name.includes(str)===true;});setConversations(SearchResult);});case 1:case\"end\":return _context6.stop();}}},_callee6);}));return _getSearchConverastions.apply(this,arguments);}function createConversation(_x2,_x3,_x4){return _createConversation.apply(this,arguments);}function _createConversation(){_createConversation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(ids,name,image){var ConversationImage,isGroup,ConversationExists,participants,data,response,newConversation,Response;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:ConversationImage=image;isGroup=false;//no participants chosen\nif(!(ids.length===0)){_context7.next=5;break;}console.log(\"no participants choosen\");return _context7.abrupt(\"return\");case 5://check if conversation already exists\nConversationExists=null;if(ids.length===1){ConversationExists=conversations.find(function(conversation){return conversation.Name===name;});}if(!ConversationExists){_context7.next=11;break;}setSelectedConversation(ConversationExists);//create new conversation\n_context7.next=40;break;case 11://get conversation participants\nparticipants=ids.map(function(id){var addContactToConversation=contacts.filter(function(contact){return id===contact.id;});return addContactToConversation[0];});//add creator to participants\nparticipants.push({id:info.id,name:info.name,phone:info.phone,imageName:info.imageName,LastSeen:info.LastSeen});//if group\nif(!(ids.length>1)){_context7.next=29;break;}data=new FormData();data.append('file',ConversationImage);data.append(\"upload_preset\",\"whatsApp_clone\");data.append(\"cloud_name\",\"dsrgpqnyv\");_context7.prev=18;_context7.next=21;return axios.post(\"https://api.cloudinary.com/v1_1/dsrgpqnyv/image/upload\",{secure:true},data);case 21:response=_context7.sent;ConversationImage=response.data.url;_context7.next=28;break;case 25:_context7.prev=25;_context7.t0=_context7[\"catch\"](18);console.log(_context7.t0);case 28:isGroup=true;case 29:newConversation={Name:name,creatorId:sessionStorage[\"id\"],Participants:participants,Messages:[],LastMessage:{id:\"\",sender:\"\",message:\"\"},ConversationImage:ConversationImage,isGroup:isGroup};//updateDB\n_context7.prev=30;_context7.next=33;return axios.post(\"https://messagesapp1.herokuapp.com/api/conversations\",newConversation,config);case 33:Response=_context7.sent;if(Response.data.status===\"created\"){console.log(Response.data.conversation);setSelectedConversation(Response.data.conversation);//show conversation only if messages sent\nif(Response.data.conversation.Messages.length>0)setConversations(function(prevConversations){return[].concat(_toConsumableArray(prevConversations),[Response.data.conversation]);});// }\n}_context7.next=40;break;case 37:_context7.prev=37;_context7.t1=_context7[\"catch\"](30);console.log(_context7.t1);case 40:case\"end\":return _context7.stop();}}},_callee7,null,[[18,25],[30,37]]);}));return _createConversation.apply(this,arguments);}var addMessageToConversation=useCallback(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref3){var UpdatedConv,ConversationExists,newListOfConversations,newConversation;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:UpdatedConv=_ref3.UpdatedConv;audio.play();ConversationExists=false;newListOfConversations=RefConversations.current.map(function(conversation){if(conversation._id===UpdatedConv._id){ConversationExists=true;var newConv=_objectSpread(_objectSpread({},conversation),{},{Messages:UpdatedConv.Messages,LastMessage:UpdatedConv.LastMessage});if(currentConversationRef.current){if(currentConversationRef.current._id===UpdatedConv._id)setSelectedConversation(newConv);}return newConv;}else return conversation;});if(!ConversationExists){if(!UpdatedConv.isGroup){newConversation=_objectSpread(_objectSpread({},UpdatedConv),{},{Name:UpdatedConv.Participants[0].name,ConversationImage:UpdatedConv.Participants[0].imageName});setConversations(function(prevConversations){return[].concat(_toConsumableArray(prevConversations),[newConversation]);});}else setConversations(function(prevConversations){return[].concat(_toConsumableArray(prevConversations),[UpdatedConv]);});}else setConversations(newListOfConversations);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x5){return _ref4.apply(this,arguments);};}(),[setConversations]);useEffect(function(){if(socket.current==null)return;RefConversations.current=conversations;currentConversationRef.current=selectedConversation;socket.current.on(\"receive-message\",addMessageToConversation);return function(){return socket.current.off(\"receive-message\",addMessageToConversation);};},[conversations,selectedConversation]);var updateSenderConversation=function updateSenderConversation(AddMessage){var ConversationExists=false;setSelectedConversation(AddMessage);var newListOfConcversations=conversations.map(function(conversation){if(conversation._id===AddMessage._id){ConversationExists=true;return AddMessage;}else return conversation;});if(ConversationExists){setConversations(newListOfConcversations);}else setConversations(function(prevConversations){return[].concat(_toConsumableArray(prevConversations),[AddMessage]);});};function sendMessage(text,imageFlag,imageURL,recordURL){var parts=new Intl.DateTimeFormat('en',{hc:'h12',year:'numeric',month:'2-digit',day:'2-digit',hour:'numeric',minute:'numeric',timeZone:'Asia/Jerusalem'}).formatToParts(new Date()).reduce(function(acc,part){acc[part.type]=part.value;return acc;},Object.create(null));var time=\"\".concat(parts.day,\"/\").concat(parts.month,\"/\").concat(parts.year,\"  \").concat(parts.hour,\":\").concat(parts.minute);var recordFlag=false;if(recordURL!=null)recordFlag=true;var CurrentMessage={id:info.id,name:info.name,message:text,timeSent:time,containsImage:imageFlag,containsRecord:recordFlag,recordURL:recordURL};if(imageFlag===true)CurrentMessage=_objectSpread(_objectSpread({},CurrentMessage),{},{imageURL:imageURL});var sender={id:info.id,phone:info.phone,name:info.name,image:info.imageName};var AddMessage=_objectSpread(_objectSpread({},selectedConversation),{},{Messages:[].concat(_toConsumableArray(selectedConversation.Messages),[CurrentMessage]),LastMessage:CurrentMessage});socket.current.emit(\"send-message\",{sender:sender,UpdatedConversation:AddMessage,conversationId:selectedConversation._id});updateSenderConversation(AddMessage);}return/*#__PURE__*/_jsx(ConversationsContext.Provider,{value:{createGroupFlag:createGroupFlag,setCreateGroupFlag:setCreateGroupFlag,sendMessage:sendMessage,conversations:conversations,createConversation:createConversation,setConversations:setConversations,setSelectedConversation:setSelectedConversation,selectedConversation:selectedConversation,currentConversationIsConnected:currentConversationIsConnected,typingFlag:typingFlag,setTypingFlag:setTypingFlag,getSearchConverastions:getSearchConverastions},children:children});}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/contexts/conversationsprovider.js"],"names":["React","useContext","useCallback","useRef","useState","useEffect","useUser","useSocket","axios","ConversationsContext","createContext","useConversations","ConversationsProvider","id","children","contacts","info","conversations","setConversations","selectedConversation","setSelectedConversation","RefConversations","currentConversationRef","createGroupFlag","setCreateGroupFlag","socket","ConnectedUsers","typingFlag","setTypingFlag","currentConversationIsConnected","setCurrentConversationIsConnected","config","headers","sessionStorage","audio","Audio","fetchData","current","on","user","conversationId","_id","name","isGroup","some","userId","Participants","get","response","data","LastSeen","getConversations","then","res","ConversationsList","map","conversation","UpdatedConversation","length","Name","ConversationImage","image","console","log","getSearchConverastions","str","SearchResult","filter","includes","createConversation","ids","ConversationExists","find","participants","addContactToConversation","contact","push","phone","imageName","FormData","append","post","secure","url","newConversation","creatorId","Messages","LastMessage","sender","message","Response","status","prevConversations","addMessageToConversation","UpdatedConv","play","newListOfConversations","newConv","off","updateSenderConversation","AddMessage","newListOfConcversations","sendMessage","text","imageFlag","imageURL","recordURL","parts","Intl","DateTimeFormat","hc","year","month","day","hour","minute","timeZone","formatToParts","Date","reduce","acc","part","type","value","Object","create","time","recordFlag","CurrentMessage","timeSent","containsImage","containsRecord","emit"],"mappings":"u0BAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,WAA5B,CAAyCC,MAAzC,KAAuD,OAAvD,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,OAAT,KAAwB,gBAAxB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAGA,GAAMC,CAAAA,oBAAoB,cAAGT,KAAK,CAACU,aAAN,EAA7B,CAEA,MAAO,SAASC,CAAAA,gBAAT,EAA4B,CACjC,MAAOV,CAAAA,UAAU,CAACQ,oBAAD,CAAjB,CACD,CAED,MAAO,SAASG,CAAAA,qBAAT,MAAiD,IAAhBC,CAAAA,EAAgB,MAAhBA,EAAgB,CAAZC,QAAY,MAAZA,QAAY,CACtD,aAAyBR,OAAO,EAAhC,CAAOS,QAAP,UAAOA,QAAP,CAAiBC,IAAjB,UAAiBA,IAAjB,CACA,cAA0CZ,QAAQ,CAAC,EAAD,CAAlD,wCAAOa,aAAP,eAAsBC,gBAAtB,eACA,eAAwDd,QAAQ,EAAhE,yCAAOe,oBAAP,eAA6BC,uBAA7B,eACA,GAAMC,CAAAA,gBAAgB,CAAGlB,MAAM,CAACc,aAAD,CAA/B,CACA,GAAMK,CAAAA,sBAAsB,CAAGnB,MAAM,CAACgB,oBAAD,CAArC,CACA,eAA8Cf,QAAQ,CAAC,KAAD,CAAtD,yCAAOmB,eAAP,eAAwBC,kBAAxB,eACA,eAAmCjB,SAAS,EAA5C,CAAQkB,MAAR,YAAQA,MAAR,CAAgBC,cAAhB,YAAgBA,cAAhB,CACA,eAAkCtB,QAAQ,CAAC,EAAD,CAA1C,yCAAOuB,UAAP,eAAkBC,aAAlB,eACA,eAA2ExB,QAAQ,CAAC,EAAD,CAAnF,0CAAOyB,8BAAP,gBAAsCC,iCAAtC,gBACA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,OAAO,CAAE,CAAE,iBAAkBC,cAAc,CAAC,QAAD,CAAlC,CAAX,CAAf,CAEA,GAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAU,qFAAV,CAAd,CAGA9B,SAAS,CAAC,UAAI,SAEG+B,CAAAA,SAFH,qIAEZ,wIAEGX,MAAM,CAACY,OAAP,EAAiB,IAFpB,kEAGAZ,MAAM,CAACY,OAAP,CAAeC,EAAf,CAAkB,aAAlB,CAAgC,eAChC,IADkCC,CAAAA,IAClC,OADkCA,IAClC,CADuCC,cACvC,OADuCA,cACvC,CAEI,GAAGrB,oBAAH,CACA,CACE,GAAGA,oBAAoB,CAACsB,GAArB,GAA6BD,cAAhC,CACA,CACGZ,aAAa,CAACW,IAAI,CAACG,IAAN,CAAb,CACF,CACF,CACJ,CAVD,EAHA,sDAFY,4CAiBdN,SAAS,GACR,CAlBQ,CAkBP,CAACjB,oBAAD,CAlBO,CAAT,CAoBAd,SAAS,CAAE,UACX,SACiB+B,CAAAA,SADjB,wIACE,yJACGjB,oBADH,8BAGIA,oBAAoB,CAACwB,OAHzB,+BAKKjB,cAAc,CAACkB,IAAf,CAAoB,SAAAL,IAAI,QAAGA,CAAAA,IAAI,CAACM,MAAL,GAAe1B,oBAAoB,CAAC2B,YAArB,CAAkC,CAAlC,EAAqCjC,EAAvD,EAAxB,CALL,0BAOIiB,iCAAiC,CAAC,EAAD,CAAjC,CAPJ,sDAWyBtB,CAAAA,KAAK,CAACuC,GAAN,CAAU,gDAAiD5B,oBAAoB,CAAC2B,YAArB,CAAkC,CAAlC,EAAqCjC,EAAhG,CAAmGkB,MAAnG,CAXzB,QAWQiB,QAXR,gBAYIlB,iCAAiC,CAACkB,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAjC,CAZJ,yDADF,6CAkBAd,SAAS,GAER,CArBQ,CAqBP,CAACV,cAAD,CAAgBP,oBAAhB,CArBO,CAAT,CAuBAd,SAAS,CAAC,UACV,SACiB+B,CAAAA,SADjB,wIACE,wIACCe,gBAAgB,GAAGC,IAAnB,CAAwB,SAAAC,GAAG,QAAGnC,CAAAA,gBAAgB,CAACmC,GAAD,CAAnB,EAA3B,EADD,wDADF,6CAIEjB,SAAS,GAEV,CAPQ,CAON,EAPM,CAAT,CA1DsD,QAmEvCe,CAAAA,gBAnEuC,0JAmEtD,+MAG0B3C,CAAAA,KAAK,CAACuC,GAAN,CAAU,0EAA2Ed,cAAc,CAAC,IAAD,CAAnG,CAA0GF,MAA1G,CAH1B,QAGSiB,QAHT,gBAKSM,iBALT,CAK6BN,QAAQ,CAACC,IAAT,CAAcM,GAAd,CAAkB,SAACC,YAAD,CAC1C,CACE,GAAIC,CAAAA,mBAAmB,CAAED,YAAzB,CAEA,GAAIA,YAAY,CAACV,YAAb,CAA0BY,MAA1B,GAAqC,CAArC,EAA0CF,YAAY,CAACG,IAAb,GAAsB1B,cAAc,CAAC,MAAD,CAAlF,CACGwB,mBAAmB,gCAAQA,mBAAR,MAA4BE,IAAI,CAAEH,YAAY,CAACV,YAAb,CAA0B,CAA1B,EAA6BJ,IAA/D,CAAoEkB,iBAAiB,CAACJ,YAAY,CAACV,YAAb,CAA0B,CAA1B,EAA6Be,KAAnH,EAAnB,CAEH,GAAG1C,oBAAH,CACA,CACE,GAAGA,oBAAoB,CAACN,EAArB,GAA4B4C,mBAAmB,CAAC5C,EAAnD,CACGO,uBAAuB,CAACqC,mBAAD,CAAvB,CACJ,CAED,MAAOA,CAAAA,mBAAP,CACD,CAduB,CAL7B,kCAqBWH,iBArBX,6DAsBiBQ,OAAO,CAACC,GAAR,eAtBjB,sEAnEsD,2DA+FvCC,CAAAA,sBA/FuC,8KA+FtD,kBAAsCC,GAAtC,sHAGMd,gBAAgB,GAAGC,IAAnB,CAAwB,SAAAC,GAAG,CAC3B,CAEC,GAAIa,CAAAA,YAAY,CAAGb,GAAG,CAACc,MAAJ,CAAW,SAAAX,YAAY,QACvCA,CAAAA,YAAY,CAACG,IAAb,CAAkBS,QAAlB,CAA2BH,GAA3B,IAAmC,IADI,EAAvB,CAAnB,CAIC/C,gBAAgB,CAACgD,YAAD,CAAhB,CACD,CARD,EAHN,wDA/FsD,iEA+GvCG,CAAAA,kBA/GuC,2KA+GtD,kBAAkCC,GAAlC,CAAuC5B,IAAvC,CAA6CmB,KAA7C,2NACMD,iBADN,CAC0BC,KAD1B,CAEMlB,OAFN,CAEgB,KAFhB,CAIE;AAJF,KAKM2B,GAAG,CAACZ,MAAJ,GAAe,CALrB,2BAMII,OAAO,CAACC,GAAR,CAAY,yBAAZ,EANJ,yCAUE;AACIQ,kBAXN,CAW2B,IAX3B,CAYE,GAAID,GAAG,CAACZ,MAAJ,GAAe,CAAnB,CAAsB,CACpBa,kBAAkB,CAAGtD,aAAa,CAACuD,IAAd,CACnB,SAAChB,YAAD,QAAkBA,CAAAA,YAAY,CAACG,IAAb,GAAsBjB,IAAxC,EADmB,CAArB,CAGD,CAhBH,IAkBM6B,kBAlBN,2BAkB0BnD,uBAAuB,CAACmD,kBAAD,CAAvB,CAExB;AApBF,gCAuBI;AACME,YAxBV,CAwByBH,GAAG,CAACf,GAAJ,CAAQ,SAAC1C,EAAD,CAAQ,CACnC,GAAI6D,CAAAA,wBAAwB,CAAG3D,QAAQ,CAACoD,MAAT,CAC7B,SAACQ,OAAD,QAAa9D,CAAAA,EAAE,GAAK8D,OAAO,CAAC9D,EAA5B,EAD6B,CAA/B,CAGA,MAAO6D,CAAAA,wBAAwB,CAAC,CAAD,CAA/B,CACD,CALoB,CAxBzB,CAgCI;AACAD,YAAY,CAACG,IAAb,CAAkB,CAChB/D,EAAE,CAAEG,IAAI,CAACH,EADO,CAEhB6B,IAAI,CAAE1B,IAAI,CAAC0B,IAFK,CAGhBmC,KAAK,CAAE7D,IAAI,CAAC6D,KAHI,CAIhBC,SAAS,CAAE9D,IAAI,CAAC8D,SAJA,CAKhB5B,QAAQ,CAAElC,IAAI,CAACkC,QALC,CAAlB,EAQA;AAzCJ,KA0CQoB,GAAG,CAACZ,MAAJ,CAAa,CA1CrB,4BA2CYT,IA3CZ,CA2CmB,GAAI8B,CAAAA,QAAJ,EA3CnB,CA4CM9B,IAAI,CAAC+B,MAAL,CAAY,MAAZ,CAAmBpB,iBAAnB,EACAX,IAAI,CAAC+B,MAAL,CAAY,eAAZ,CAA4B,gBAA5B,EACA/B,IAAI,CAAC+B,MAAL,CAAY,YAAZ,CAAyB,WAAzB,EA9CN,0CAgD2BxE,CAAAA,KAAK,CAACyE,IAAN,CAAW,wDAAX,CAAoE,CAACC,MAAM,CAAC,IAAR,CAApE,CAAkFjC,IAAlF,CAhD3B,SAgDUD,QAhDV,gBAiDMY,iBAAiB,CAAGZ,QAAQ,CAACC,IAAT,CAAckC,GAAlC,CAjDN,sFAmDkBrB,OAAO,CAACC,GAAR,eAnDlB,QAuDMpB,OAAO,CAAG,IAAV,CAvDN,QA0DQyC,eA1DR,CA0D0B,CACpBzB,IAAI,CAAEjB,IADc,CAEpB2C,SAAS,CAAEpD,cAAc,CAAC,IAAD,CAFL,CAGpBa,YAAY,CAAE2B,YAHM,CAIpBa,QAAQ,CAAE,EAJU,CAKpBC,WAAW,CAAE,CAAE1E,EAAE,CAAE,EAAN,CAAU2E,MAAM,CAAE,EAAlB,CAAsBC,OAAO,CAAE,EAA/B,CALO,CAMpB7B,iBAAiB,CAAEA,iBANC,CAOpBjB,OAAO,CAAPA,OAPoB,CA1D1B,CAoEI;AApEJ,0CAsE2BnC,CAAAA,KAAK,CAACyE,IAAN,CACnB,sDADmB,CAEnBG,eAFmB,CAGnBrD,MAHmB,CAtE3B,SAsEU2D,QAtEV,gBA2EM,GAAIA,QAAQ,CAACzC,IAAT,CAAc0C,MAAd,GAAyB,SAA7B,CAAwC,CACtC7B,OAAO,CAACC,GAAR,CAAY2B,QAAQ,CAACzC,IAAT,CAAcO,YAA1B,EACApC,uBAAuB,CAACsE,QAAQ,CAACzC,IAAT,CAAcO,YAAf,CAAvB,CAEA;AACA,GAAIkC,QAAQ,CAACzC,IAAT,CAAcO,YAAd,CAA2B8B,QAA3B,CAAoC5B,MAApC,CAA6C,CAAjD,CACExC,gBAAgB,CAAC,SAAC0E,iBAAD,CAAuB,CACtC,mCAAWA,iBAAX,GAA8BF,QAAQ,CAACzC,IAAT,CAAcO,YAA5C,GACD,CAFe,CAAhB,CAGF;AACD,CArFP,sFAuFMM,OAAO,CAACC,GAAR,eAvFN,gFA/GsD,qDA6MtD,GAAM8B,CAAAA,wBAAwB,CAAG3F,WAAW,2FAAC,uNAAS4F,WAAT,OAASA,WAAT,CAGzC5D,KAAK,CAAC6D,IAAN,GAEIxB,kBALqC,CAKhB,KALgB,CAMrCyB,sBANqC,CAMZ3E,gBAAgB,CAACgB,OAAjB,CAAyBkB,GAAzB,CAA6B,SAACC,YAAD,CAAiB,CACvE,GAAIA,YAAY,CAACf,GAAb,GAAqBqD,WAAW,CAACrD,GAArC,CAA0C,CACxC8B,kBAAkB,CAAG,IAArB,CACA,GAAI0B,CAAAA,OAAO,gCAAQzC,YAAR,MACT8B,QAAQ,CAAEQ,WAAW,CAACR,QADb,CAETC,WAAW,CAAEO,WAAW,CAACP,WAFhB,EAAX,CAGA,GAAIjE,sBAAsB,CAACe,OAA3B,CAAoC,CAClC,GAAIf,sBAAsB,CAACe,OAAvB,CAA+BI,GAA/B,GAAuCqD,WAAW,CAACrD,GAAvD,CACErB,uBAAuB,CAAC6E,OAAD,CAAvB,CACH,CAED,MAAOA,CAAAA,OAAP,CACD,CAXD,IAWO,OAAOzC,CAAAA,YAAP,CACR,CAb0B,CANY,CAuBzC,GAAI,CAACe,kBAAL,CAAyB,CACvB,GAAI,CAACuB,WAAW,CAACnD,OAAjB,CACC,CACMyC,eADN,gCAC6BU,WAD7B,MAEGnC,IAAI,CAAEmC,WAAW,CAAChD,YAAZ,CAAyB,CAAzB,EAA4BJ,IAFrC,CAGGkB,iBAAiB,CAAEkC,WAAW,CAAChD,YAAZ,CAAyB,CAAzB,EAA4BgC,SAHlD,GAKC5D,gBAAgB,CAAC,SAAC0E,iBAAD,qCAA2BA,iBAA3B,GAA8CR,eAA9C,IAAD,CAAhB,CACD,CAPD,IAQElE,CAAAA,gBAAgB,CAAC,SAAC0E,iBAAD,qCAA2BA,iBAA3B,GAA6CE,WAA7C,IAAD,CAAhB,CACH,CAVD,IAUO5E,CAAAA,gBAAgB,CAAC8E,sBAAD,CAAhB,CAjCkC,wDAAD,iEAkCxC,CAAC9E,gBAAD,CAlCwC,CAA5C,CAoCAb,SAAS,CAAC,UAAM,CACd,GAAIoB,MAAM,CAACY,OAAP,EAAkB,IAAtB,CAA4B,OAE5BhB,gBAAgB,CAACgB,OAAjB,CAA2BpB,aAA3B,CACAK,sBAAsB,CAACe,OAAvB,CAAiClB,oBAAjC,CACAM,MAAM,CAACY,OAAP,CAAeC,EAAf,CAAkB,iBAAlB,CAAqCuD,wBAArC,EAEA,MAAO,kBACLpE,CAAAA,MAAM,CAACY,OAAP,CAAe6D,GAAf,CAAmB,iBAAnB,CAAsCL,wBAAtC,CADK,EAAP,CAED,CATQ,CASN,CAAC5E,aAAD,CAAgBE,oBAAhB,CATM,CAAT,CAYA,GAAMgF,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,UAAD,CAAgB,CAC/C,GAAI7B,CAAAA,kBAAkB,CAAG,KAAzB,CACAnD,uBAAuB,CAACgF,UAAD,CAAvB,CAEA,GAAIC,CAAAA,uBAAuB,CAAGpF,aAAa,CAACsC,GAAd,CAAkB,SAACC,YAAD,CAAkB,CAChE,GAAIA,YAAY,CAACf,GAAb,GAAqB2D,UAAU,CAAC3D,GAApC,CAAyC,CACvC8B,kBAAkB,CAAG,IAArB,CACA,MAAO6B,CAAAA,UAAP,CACD,CAHD,IAGO,OAAO5C,CAAAA,YAAP,CACR,CAL6B,CAA9B,CAOA,GAAIe,kBAAJ,CAAwB,CACtBrD,gBAAgB,CAACmF,uBAAD,CAAhB,CACD,CAFD,IAGEnF,CAAAA,gBAAgB,CAAC,SAAC0E,iBAAD,qCACZA,iBADY,GAEfQ,UAFe,IAAD,CAAhB,CAIH,CAlBD,CAqBA,QAASE,CAAAA,WAAT,CAAqBC,IAArB,CAA0BC,SAA1B,CAAoCC,QAApC,CAA6CC,SAA7C,CAAwD,CAGpD,GAAIC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,IAAI,CAACC,cAAT,CAAwB,IAAxB,CAA8B,CAC1CC,EAAE,CAAE,KADsC,CAE1CC,IAAI,CAAE,SAFoC,CAG1CC,KAAK,CAAE,SAHmC,CAI1CC,GAAG,CAAE,SAJqC,CAK1CC,IAAI,CAAE,SALoC,CAM1CC,MAAM,CAAE,SANkC,CAO1CC,QAAQ,CAAC,gBAPiC,CAA9B,EAQbC,aARa,CAQC,GAAIC,CAAAA,IAAJ,EARD,EASbC,MATa,CASN,SAACC,GAAD,CAAMC,IAAN,CAAe,CACrBD,GAAG,CAACC,IAAI,CAACC,IAAN,CAAH,CAAiBD,IAAI,CAACE,KAAtB,CACA,MAAOH,CAAAA,GAAP,CACD,CAZa,CAYXI,MAAM,CAACC,MAAP,CAAc,IAAd,CAZW,CAAZ,CAcF,GAAIC,CAAAA,IAAI,WAAMnB,KAAK,CAACM,GAAZ,aAAmBN,KAAK,CAACK,KAAzB,aAAkCL,KAAK,CAACI,IAAxC,cAAiDJ,KAAK,CAACO,IAAvD,aAA+DP,KAAK,CAACQ,MAArE,CAAR,CAEA,GAAIY,CAAAA,UAAU,CAAE,KAAhB,CAEA,GAAGrB,SAAS,EAAE,IAAd,CACGqB,UAAU,CAAC,IAAX,CAEH,GAAIC,CAAAA,cAAc,CAAG,CAAEnH,EAAE,CAAEG,IAAI,CAACH,EAAX,CAAe6B,IAAI,CAAE1B,IAAI,CAAC0B,IAA1B,CAAgC+C,OAAO,CAAEc,IAAzC,CAAgD0B,QAAQ,CAAEH,IAA1D,CAAgEI,aAAa,CAAE1B,SAA/E,CAAyF2B,cAAc,CAACJ,UAAxG,CAAmHrB,SAAS,CAACA,SAA7H,CAArB,CACA,GAAGF,SAAS,GAAI,IAAhB,CACGwB,cAAc,gCAAMA,cAAN,MAAqBvB,QAAQ,CAACA,QAA9B,EAAd,CAEH,GAAIjB,CAAAA,MAAM,CAAG,CACX3E,EAAE,CAAEG,IAAI,CAACH,EADE,CAEXgE,KAAK,CAAE7D,IAAI,CAAC6D,KAFD,CAGXnC,IAAI,CAAE1B,IAAI,CAAC0B,IAHA,CAIXmB,KAAK,CAAE7C,IAAI,CAAC8D,SAJD,CAAb,CAMA,GAAIsB,CAAAA,UAAU,gCACTjF,oBADS,MAEZmE,QAAQ,8BAAMnE,oBAAoB,CAACmE,QAA3B,GAAqC0C,cAArC,EAFI,CAGZzC,WAAW,CAAEyC,cAHD,EAAd,CAKAvG,MAAM,CAACY,OAAP,CAAe+F,IAAf,CAAoB,cAApB,CAAoC,CAClC5C,MAAM,CAAEA,MAD0B,CAElC/B,mBAAmB,CAAE2C,UAFa,CAGlC5D,cAAc,CAAErB,oBAAoB,CAACsB,GAHH,CAApC,EAMA0D,wBAAwB,CAACC,UAAD,CAAxB,CACD,CAED,mBACE,KAAC,oBAAD,CAAsB,QAAtB,EACE,KAAK,CAAE,CACL7E,eAAe,CAAfA,eADK,CAELC,kBAAkB,CAAlBA,kBAFK,CAGL8E,WAAW,CAAXA,WAHK,CAILrF,aAAa,CAAbA,aAJK,CAKLoD,kBAAkB,CAAlBA,kBALK,CAMLnD,gBAAgB,CAAhBA,gBANK,CAOLE,uBAAuB,CAAvBA,uBAPK,CAQLD,oBAAoB,CAApBA,oBARK,CASLU,8BAA8B,CAA9BA,8BATK,CAULF,UAAU,CAAVA,UAVK,CAWLC,aAAa,CAAbA,aAXK,CAYLoC,sBAAsB,CAAtBA,sBAZK,CADT,UAiBGlD,QAjBH,EADF,CAqBD","sourcesContent":["import React, { useContext, useCallback, useRef } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useUser } from \"./userprovider\";\r\nimport { useSocket } from \"./socketprovider\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst ConversationsContext = React.createContext();\r\n\r\nexport function useConversations() {\r\n  return useContext(ConversationsContext);\r\n}\r\n\r\nexport function ConversationsProvider({ id, children }) {\r\n  const {contacts, info} = useUser();\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState();\r\n  const RefConversations = useRef(conversations);\r\n  const currentConversationRef = useRef(selectedConversation);\r\n  const [createGroupFlag, setCreateGroupFlag] = useState(false);\r\n  const { socket, ConnectedUsers } = useSocket();\r\n  const [typingFlag,setTypingFlag] =useState('')\r\n  const [currentConversationIsConnected,setCurrentConversationIsConnected] = useState('')\r\n  const config = { headers: { \"x-access-token\": sessionStorage[\"config\"] } };\r\n\r\n  const audio = new Audio('https://res.cloudinary.com/dsrgpqnyv/video/upload/v1630680168/juntos-607_qsfc7i.mp3');\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    async function fetchData() {\r\n\r\n    if(socket.current ==null ) return;\r\n    socket.current.on('user-typing',({user,conversationId})=>\r\n    {\r\n\r\n        if(selectedConversation)\r\n        {\r\n          if(selectedConversation._id === conversationId)\r\n          {\r\n             setTypingFlag(user.name)\r\n          }\r\n        }\r\n    } )\r\n  }\r\n  fetchData();\r\n  },[selectedConversation])\r\n\r\n  useEffect( ()=>\r\n  {\r\n    async function fetchData() {\r\n    if(selectedConversation)\r\n    {\r\n    if(!selectedConversation.isGroup)\r\n     {\r\n      if(ConnectedUsers.some(user=> user.userId ===selectedConversation.Participants[0].id))\r\n      {\r\n        setCurrentConversationIsConnected('')\r\n      }\r\n      else\r\n      {\r\n        let response = await axios.get(\"https://messagesapp1.herokuapp.com/api/logIn/\"+ selectedConversation.Participants[0].id,config)\r\n        setCurrentConversationIsConnected(response.data.LastSeen)\r\n      }\r\n     }\r\n    }\r\n  }\r\n  fetchData();\r\n\r\n  },[ConnectedUsers,selectedConversation])\r\n\r\n  useEffect(() =>\r\n  {\r\n    async function fetchData() {\r\n     getConversations().then(res=> setConversations(res))\r\n    }\r\n    fetchData();\r\n    \r\n  }, []);\r\n\r\n  async function getConversations()\r\n  {\r\n    try{\r\n       let response = await axios.get(\"https://messagesapp1.herokuapp.com/api/conversations/UserConversations/\" +sessionStorage[\"id\"],config);\r\n\r\n       let ConversationsList = response.data.map((conversation) =>\r\n       {\r\n         let UpdatedConversation= conversation\r\n\r\n         if (conversation.Participants.length === 1 && conversation.Name === sessionStorage[\"name\"])\r\n            UpdatedConversation = { ...UpdatedConversation,Name: conversation.Participants[0].name,ConversationImage:conversation.Participants[0].image}\r\n\r\n         if(selectedConversation)\r\n         {\r\n           if(selectedConversation.id === UpdatedConversation.id)\r\n              setSelectedConversation(UpdatedConversation)\r\n         }\r\n          \r\n         return UpdatedConversation;\r\n       })\r\n\r\n      return ConversationsList \r\n    } catch (err) {console.log(err);}\r\n  }\r\n\r\n\r\n\r\n\r\n  async function getSearchConverastions(str)\r\n  {\r\n\r\n        getConversations().then(res=>\r\n        {\r\n\r\n         let SearchResult = res.filter(conversation=> \r\n            conversation.Name.includes(str) ===true\r\n          )\r\n    \r\n          setConversations(SearchResult)\r\n        })\r\n  }\r\n        \r\n\r\n\r\n  async function createConversation(ids, name, image) {\r\n    let ConversationImage = image;\r\n    let isGroup = false;\r\n\r\n    //no participants chosen\r\n    if (ids.length === 0) {\r\n      console.log(\"no participants choosen\");\r\n      return;\r\n    }\r\n\r\n    //check if conversation already exists\r\n    let ConversationExists = null;\r\n    if (ids.length === 1) {\r\n      ConversationExists = conversations.find(\r\n        (conversation) => conversation.Name === name\r\n      );\r\n    }\r\n\r\n    if (ConversationExists) setSelectedConversation(ConversationExists);\r\n\r\n    //create new conversation\r\n    else {\r\n\r\n      //get conversation participants\r\n      const participants = ids.map((id) => {\r\n        let addContactToConversation = contacts.filter(\r\n          (contact) => id === contact.id\r\n        );\r\n        return addContactToConversation[0];\r\n      });\r\n\r\n\r\n      //add creator to participants\r\n      participants.push({\r\n        id: info.id,\r\n        name: info.name,\r\n        phone: info.phone,\r\n        imageName: info.imageName,\r\n        LastSeen: info.LastSeen\r\n      });\r\n\r\n      //if group\r\n      if (ids.length > 1) {\r\n        const data = new FormData()\r\n        data.append('file',ConversationImage)\r\n        data.append(\"upload_preset\",\"whatsApp_clone\")\r\n        data.append(\"cloud_name\",\"dsrgpqnyv\")\r\n        try{\r\n        let response = await axios.post(\"https://api.cloudinary.com/v1_1/dsrgpqnyv/image/upload\",{secure:true},data)\r\n        ConversationImage = response.data.url;\r\n\r\n        }catch(err){console.log(err)}\r\n   \r\n      \r\n    \r\n        isGroup = true;\r\n      }\r\n\r\n      let newConversation = {\r\n        Name: name,\r\n        creatorId: sessionStorage[\"id\"],\r\n        Participants: participants,\r\n        Messages: [],\r\n        LastMessage: { id: \"\", sender: \"\", message: \"\" },\r\n        ConversationImage: ConversationImage,\r\n        isGroup,\r\n      };\r\n\r\n      //updateDB\r\n      try {\r\n        let Response = await axios.post(\r\n          \"https://messagesapp1.herokuapp.com/api/conversations\",\r\n          newConversation,\r\n          config\r\n        );\r\n        if (Response.data.status === \"created\") {\r\n          console.log(Response.data.conversation);\r\n          setSelectedConversation(Response.data.conversation);\r\n\r\n          //show conversation only if messages sent\r\n          if (Response.data.conversation.Messages.length > 0)\r\n            setConversations((prevConversations) => {\r\n              return [...prevConversations, Response.data.conversation];\r\n            });\r\n          // }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n \r\n\r\n  const addMessageToConversation = useCallback(async ({ UpdatedConv }) =>\r\n   {\r\n\r\n      audio.play()\r\n\r\n      let ConversationExists = false;\r\n      let newListOfConversations = RefConversations.current.map((conversation) =>{\r\n          if (conversation._id === UpdatedConv._id) {\r\n            ConversationExists = true;\r\n            let newConv = { ...conversation,\r\n              Messages: UpdatedConv.Messages,\r\n              LastMessage: UpdatedConv.LastMessage,};\r\n            if (currentConversationRef.current) {\r\n              if (currentConversationRef.current._id === UpdatedConv._id)\r\n                setSelectedConversation(newConv);\r\n            }\r\n\r\n            return newConv;\r\n          } else return conversation;\r\n        }\r\n      );\r\n\r\n\r\n      if (!ConversationExists) {\r\n        if (!UpdatedConv.isGroup)\r\n         {\r\n           let newConversation = { ...UpdatedConv,\r\n            Name: UpdatedConv.Participants[0].name,\r\n            ConversationImage: UpdatedConv.Participants[0].imageName,\r\n          };\r\n          setConversations((prevConversations) => [...prevConversations, newConversation ]);\r\n        } else\r\n          setConversations((prevConversations) => [...prevConversations,UpdatedConv]);\r\n      } else setConversations(newListOfConversations);\r\n    },[setConversations]);\r\n\r\n  useEffect(() => {\r\n    if (socket.current == null) return;\r\n    \r\n    RefConversations.current = conversations;\r\n    currentConversationRef.current = selectedConversation;\r\n    socket.current.on(\"receive-message\", addMessageToConversation);\r\n\r\n    return () =>\r\n      socket.current.off(\"receive-message\", addMessageToConversation);\r\n  }, [conversations, selectedConversation]);\r\n\r\n\r\n  const updateSenderConversation = (AddMessage) => {\r\n    let ConversationExists = false;\r\n    setSelectedConversation(AddMessage);\r\n\r\n    let newListOfConcversations = conversations.map((conversation) => {\r\n      if (conversation._id === AddMessage._id) {\r\n        ConversationExists = true;\r\n        return AddMessage;\r\n      } else return conversation;\r\n    });\r\n\r\n    if (ConversationExists) {\r\n      setConversations(newListOfConcversations);\r\n    } else\r\n      setConversations((prevConversations) => [\r\n        ...prevConversations,\r\n        AddMessage,\r\n      ]);\r\n  };\r\n\r\n\r\n  function sendMessage(text,imageFlag,imageURL,recordURL) {\r\n\r\n\r\n      let parts = new Intl.DateTimeFormat('en', {\r\n      hc: 'h12',\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      timeZone:'Asia/Jerusalem'})\r\n    .formatToParts(new Date())\r\n    .reduce((acc, part) => {\r\n      acc[part.type] = part.value;\r\n      return acc;\r\n    }, Object.create(null));\r\n\r\n    let time = `${parts.day}/${parts.month}/${parts.year}  ${parts.hour}:${parts.minute}`;\r\n\r\n    let recordFlag= false\r\n\r\n    if(recordURL!=null)\r\n       recordFlag=true\r\n    \r\n    let CurrentMessage = { id: info.id, name: info.name, message: text  ,timeSent: time ,containsImage: imageFlag,containsRecord:recordFlag,recordURL:recordURL};\r\n    if(imageFlag ===true)\r\n       CurrentMessage= {...CurrentMessage,imageURL:imageURL}\r\n    \r\n    let sender = {\r\n      id: info.id,\r\n      phone: info.phone,\r\n      name: info.name,\r\n      image: info.imageName,\r\n    };\r\n    let AddMessage = {\r\n      ...selectedConversation,\r\n      Messages: [...selectedConversation.Messages, CurrentMessage],\r\n      LastMessage: CurrentMessage,\r\n    };\r\n    socket.current.emit(\"send-message\", {\r\n      sender: sender,\r\n      UpdatedConversation: AddMessage,\r\n      conversationId: selectedConversation._id,\r\n    });\r\n\r\n    updateSenderConversation(AddMessage);\r\n  }\r\n\r\n  return (\r\n    <ConversationsContext.Provider\r\n      value={{\r\n        createGroupFlag,\r\n        setCreateGroupFlag,\r\n        sendMessage,\r\n        conversations,\r\n        createConversation,\r\n        setConversations,\r\n        setSelectedConversation,\r\n        selectedConversation,\r\n        currentConversationIsConnected,\r\n        typingFlag,\r\n        setTypingFlag,\r\n        getSearchConverastions,\r\n      \r\n      }}\r\n    >\r\n      {children}\r\n    </ConversationsContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}