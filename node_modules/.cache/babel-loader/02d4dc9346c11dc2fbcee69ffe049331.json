{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\contexts\\\\userprovider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext();\nexport function useUser() {\n  _s();\n\n  return useContext(UserContext);\n}\n\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function UserProvider({\n  children\n}) {\n  _s2();\n\n  const [contacts, setContacts] = useState([]);\n  const [info, setInfo] = useState({});\n  const [config, setConfig] = useState('');\n  useEffect(async () => {\n    let UpdatedUser = info;\n    UpdatedUser = { ...info,\n      contacts\n    };\n\n    try {\n      await axios.put(\"http://localhost:5000/api/logIn/\" + info.id, UpdatedUser, config);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [contacts]);\n\n  async function createContact(phone) {\n    if (phone == info.phone) {\n      console.log('cant Add yourself');\n      return;\n    }\n\n    let checkIfExists = contacts.filter(contact => contact.phone == phone);\n\n    if (checkIfExists.length != 0) {\n      console.log('already exists');\n      return;\n    }\n\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/logIn/\" + phone, config);\n      const contact = {\n        id: response.data._id,\n        phone: response.data.phone,\n        name: response.data.name,\n        image: response.data.imageName\n      };\n      setContacts(prevContacts => {\n        return new Promise([...prevContacts, contact]);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      setContacts,\n      setConfig,\n      setInfo,\n      info,\n      config,\n      contacts,\n      createContact\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserProvider, \"4vcc6V3P0uYYlsaAV3xys3vDGww=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/contexts/userprovider.js"],"names":["React","useContext","useState","useEffect","axios","UserContext","createContext","useUser","UserProvider","children","contacts","setContacts","info","setInfo","config","setConfig","UpdatedUser","put","id","err","console","log","createContact","phone","checkIfExists","filter","contact","length","response","get","data","_id","name","image","imageName","prevContacts","Promise"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAQ,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AAE1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAMC,OAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACY,MAAD,EAAQC,SAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,YAAU;AAElB,QAAIa,WAAW,GAAGJ,IAAlB;AACAI,IAAAA,WAAW,GAAC,EAAC,GAAGJ,IAAJ;AAASF,MAAAA;AAAT,KAAZ;;AACA,QAAG;AACD,YAAMN,KAAK,CAACa,GAAN,CAAU,qCAAqCL,IAAI,CAACM,EAApD,EAAuDF,WAAvD,EAAmEF,MAAnE,CAAN;AACC,KAFH,CAEI,OAAMK,GAAN,EAAU;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB;AACjC,GAPQ,EAON,CAACT,QAAD,CAPM,CAAT;;AASA,iBAAeY,aAAf,CAA6BC,KAA7B,EAAoC;AAElC,QAAGA,KAAK,IAAEX,IAAI,CAACW,KAAf,EACA;AACEH,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACC;AACF;;AAED,QAAIG,aAAa,GAAGd,QAAQ,CAACe,MAAT,CAAgBC,OAAO,IAAGA,OAAO,CAACH,KAAR,IAAeA,KAAzC,CAApB;;AAEA,QAAGC,aAAa,CAACG,MAAd,IAAwB,CAA3B,EACA;AACEP,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA;AACD;;AAEF,QAAG;AACA,YAAMO,QAAQ,GAAE,MAAMxB,KAAK,CAACyB,GAAN,CAAU,qCAAqCN,KAA/C,EAAqDT,MAArD,CAAtB;AACA,YAAMY,OAAO,GAAG;AAACR,QAAAA,EAAE,EAACU,QAAQ,CAACE,IAAT,CAAcC,GAAlB;AAAsBR,QAAAA,KAAK,EAACK,QAAQ,CAACE,IAAT,CAAcP,KAA1C;AAAgDS,QAAAA,IAAI,EAACJ,QAAQ,CAACE,IAAT,CAAcE,IAAnE;AAAwEC,QAAAA,KAAK,EAACL,QAAQ,CAACE,IAAT,CAAcI;AAA5F,OAAhB;AAEAvB,MAAAA,WAAW,CAACwB,YAAY,IAAI;AAAE,eAAQ,IAAIC,OAAJ,CAAa,CAAC,GAAGD,YAAJ,EAAmBT,OAAnB,CAAb,CAAR;AAAkD,OAArE,CAAX;AAID,KARF,CAQG,OAAMP,GAAN,EAAU;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB;AAM/B;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACR,MAAAA,WAAD;AAAaI,MAAAA,SAAb;AAAuBF,MAAAA,OAAvB;AAA+BD,MAAAA,IAA/B;AAAoCE,MAAAA,MAApC;AAA2CJ,MAAAA,QAA3C;AAAoDY,MAAAA;AAApD,KAA7B;AAAA,cACGb;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IApDgBD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext } from 'react'\r\nimport { useState ,useEffect} from 'react'\r\nimport axios from 'axios'\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport  function UserProvider({ children }) {\r\n  \r\n  const [contacts, setContacts] = useState([])\r\n  const [info,setInfo] =useState({})\r\n  const [config,setConfig] =useState('')\r\n\r\n  useEffect(async() =>{\r\n\r\n    let UpdatedUser = info\r\n    UpdatedUser={...info,contacts}\r\n    try{ \r\n      await axios.put(\"http://localhost:5000/api/logIn/\" + info.id,UpdatedUser,config)\r\n      } catch(err){console.log(err)}\r\n  }, [contacts])\r\n\r\n  async function createContact(phone) {\r\n\r\n    if(phone==info.phone)\r\n    {\r\n      console.log('cant Add yourself')\r\n       return;\r\n    }\r\n\r\n    let checkIfExists = contacts.filter(contact=> contact.phone==phone)\r\n\r\n    if(checkIfExists.length != 0)\r\n    {\r\n      console.log('already exists')\r\n      return;\r\n    }\r\n\r\n   try{ \r\n      const response= await axios.get(\"http://localhost:5000/api/logIn/\" + phone,config)\r\n      const contact = {id:response.data._id,phone:response.data.phone,name:response.data.name,image:response.data.imageName}\r\n\r\n      setContacts(prevContacts => { return  new Promise( [...prevContacts,  contact])})\r\n\r\n\r\n\r\n    } catch(err){console.log(err)}\r\n   \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={{setContacts,setConfig,setInfo,info,config,contacts,createContact }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}