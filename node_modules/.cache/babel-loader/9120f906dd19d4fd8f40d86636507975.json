{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\contexts\\\\contactsprovider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactsContext = /*#__PURE__*/React.createContext();\nexport function useContacts() {\n  _s();\n\n  return useContext(ContactsContext);\n}\n\n_s(useContacts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ContactsProvider({\n  children\n}) {\n  _s2();\n\n  const [contacts, setContacts] = useState([]);\n  const config = {\n    'headers': {\n      'x-access-token': sessionStorage[\"token\"]\n    }\n  };\n\n  async function createContact(phone) {\n    if (phone == sessionStorage['phone']) return;\n    const response = await axios.get(\"http://localhost:5000/api/logIn/\" + phone, config);\n    const contact = {\n      id: response.data._id,\n      phone: response.data.phone,\n      name: response.data.name,\n      image: response.data.imageName\n    };\n    setContacts(prevContacts => {\n      return [...prevContacts, contact];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContactsContext.Provider, {\n    value: {\n      contacts,\n      createContact\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ContactsProvider, \"Wk/5gz66h597tqB1iDdgoAzWnmc=\");\n\n_c = ContactsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsProvider\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/contexts/contactsprovider.js"],"names":["React","useContext","useState","axios","ContactsContext","createContext","useContacts","ContactsProvider","children","contacts","setContacts","config","sessionStorage","createContact","phone","response","get","contact","id","data","_id","name","image","imageName","prevContacts"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,eAAe,gBAAGJ,KAAK,CAACK,aAAN,EAAxB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC5B,SAAOL,UAAU,CAACG,eAAD,CAAjB;AACD;;GAFeE,W;;AAIhB,OAAQ,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAAA;;AAC9C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,MAAM,GAAE;AAAC,eAAW;AAAC,wBAAkBC,cAAc,CAAC,OAAD;AAAjC;AAAZ,GAAd;;AAEA,iBAAeC,aAAf,CAA6BC,KAA7B,EAAoC;AAElC,QAAGA,KAAK,IAAEF,cAAc,CAAC,OAAD,CAAxB,EACG;AAEH,UAAMG,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,qCAAqCF,KAA/C,EAAqDH,MAArD,CAAvB;AACA,UAAMM,OAAO,GAAG;AAACC,MAAAA,EAAE,EAACH,QAAQ,CAACI,IAAT,CAAcC,GAAlB;AAAsBN,MAAAA,KAAK,EAACC,QAAQ,CAACI,IAAT,CAAcL,KAA1C;AAAgDO,MAAAA,IAAI,EAACN,QAAQ,CAACI,IAAT,CAAcE,IAAnE;AAAwEC,MAAAA,KAAK,EAACP,QAAQ,CAACI,IAAT,CAAcI;AAA5F,KAAhB;AAEAb,IAAAA,WAAW,CAACc,YAAY,IAAI;AAAE,aAAO,CAAC,GAAGA,YAAJ,EAAmBP,OAAnB,CAAP;AAAmC,KAAtD,CAAX;AAED;;AAED,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAER,MAAAA,QAAF;AAAYI,MAAAA;AAAZ,KAAjC;AAAA,cACGL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IArBgBD,gB;;KAAAA,gB","sourcesContent":["import React, { useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nconst ContactsContext = React.createContext()\r\n\r\nexport function useContacts() {\r\n  return useContext(ContactsContext)\r\n}\r\n\r\nexport  function ContactsProvider({ children }) {\r\n  const [contacts, setContacts] = useState([])\r\n  const config ={'headers': {'x-access-token': sessionStorage[\"token\"]}}\r\n\r\n  async function createContact(phone) {\r\n\r\n    if(phone==sessionStorage['phone'])\r\n       return;\r\n\r\n    const response = await axios.get(\"http://localhost:5000/api/logIn/\" + phone,config)\r\n    const contact = {id:response.data._id,phone:response.data.phone,name:response.data.name,image:response.data.imageName}\r\n\r\n    setContacts(prevContacts => { return [...prevContacts,  contact]})\r\n\r\n  }\r\n\r\n  return (\r\n    <ContactsContext.Provider value={{ contacts, createContact }}>\r\n      {children}\r\n    </ContactsContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}