{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\chatbody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useState, useCallback, useEffect } from 'react';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { useSocket } from '../contexts/socketprovider';\nimport { useUser } from '../contexts/userprovider';\nimport { IconButton } from '@material-ui/core';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ImageIcon from '@material-ui/icons/Image';\nimport Picker from 'emoji-picker-react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { useVoiceRecorder } from \"use-voice-recorder\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatBody(props) {\n  _s();\n\n  const [Text, setText] = useState('');\n  const {\n    socket\n  } = useSocket();\n  const {\n    info\n  } = useUser();\n  const {\n    sendMessage,\n    selectedConversation,\n    currentConversationIsConnected,\n    typingFlag,\n    setTypingFlag\n  } = useConversations();\n  const inputRef = useRef(null);\n  const [emojiFlag, setEmojiFlag] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [imageFlag, setImageFlag] = useState(false);\n  const [imageURL, setImageURL] = useState(null);\n  const [SelectedImageURL, setSelectedImageURL] = useState(null);\n  let audio = '';\n  const [recordFlag, setRecordFlag] = useState(false);\n  const [record, updateRecord] = useState([]);\n  const {\n    isRecording,\n    stop,\n    start\n  } = useVoiceRecorder(data => {\n    updateRecord(window.URL.createObjectURL(data));\n  });\n  useEffect(() => {\n    if (recordFlag) {\n      console.log('here');\n      start();\n    } else {\n      stop();\n      console.log(record);\n    }\n  }, recordFlag);\n  const setRef = useCallback(node => {\n    if (node) node.scrollIntoView({\n      smooth: true\n    });\n  }, []);\n\n  function typing(e) {\n    setText(e.target.value);\n    if (socket.current == null) return;\n    socket.current.emit(\"typing\", {\n      user: info,\n      Conversation: selectedConversation\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(Text, false);\n    setText(' ');\n  }\n\n  async function handleImage(e) {\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    data.append(\"upload_preset\", \"whatsApp_clone\");\n    data.append(\"cloud_name\", \"dsrgpqnyv\");\n\n    try {\n      let response = await axios.post(\"https://api.cloudinary.com/v1_1/dsrgpqnyv/image/upload\", data);\n      setImageURL(response.data.url);\n      setImageFlag(true);\n      props.imageCallback(response.data.url);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function openImage(URL) {\n    setModalOpen(true);\n    setSelectedImageURL(URL);\n  }\n\n  const onEmojiClick = (event, emojiObject) => {\n    setText(Text + emojiObject.emoji);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body_and_footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_body\",\n      children: selectedConversation.Messages.map((message, index) => {\n        const lastMessage = selectedConversation.Messages.length - 1 === index;\n        let sender = message.id == sessionStorage['id'] ? 'chat_message' : ' chat_message chat_reciever';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: sender,\n            ref: lastMessage ? setRef : null,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sender_name\",\n              children: message.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), message.containsImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"image_in_message\",\n              src: message.imageURL,\n              onClick: () => openImage(message.imageURL),\n              width: \"200px\",\n              height: \"200px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message_time_and_content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message_content\",\n                children: message.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message_time\",\n                children: message.timeSent.substring(11, 17)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 13\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            onClose: () => setModalOpen(false),\n            open: modalOpen,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: SelectedImageURL,\n              height: \"500px\",\n              width: \"500px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_footer_with_stickers\",\n      children: [emojiFlag ? /*#__PURE__*/_jsxDEV(Picker, {\n        onEmojiClick: (e, emojiObject) => onEmojiClick(e, emojiObject),\n        pickerStyle: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 20\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_footer\",\n        children: [emojiFlag ? /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setEmojiFlag(false),\n          children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 66\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }, this) : '', /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setEmojiFlag(true),\n          children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          className: \"invisibleInput\",\n          id: \"icon-button-file\",\n          type: \"file\",\n          style: {\n            visibility: 'hidden'\n          },\n          onChange: handleImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon-button-file\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(ImageIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"message_section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"message_input\",\n            ref: inputRef,\n            value: Text,\n            onChange: typing,\n            type: \"text\",\n            placeholder: \"type a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \" send \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MicIcon, {\n            fontSize: \"large\",\n            onClick: () => {\n              setRecordFlag(!recordFlag);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }, this), audio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatBody, \"ERxiwKJKzBRjLHJXpNMpTJx24H8=\", false, function () {\n  return [useSocket, useUser, useConversations, useVoiceRecorder];\n});\n\n_c = ChatBody;\nexport default ChatBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/chatbody.js"],"names":["React","useRef","useState","useCallback","useEffect","useConversations","useSocket","useUser","IconButton","InsertEmoticonIcon","MicIcon","CloseIcon","ImageIcon","Picker","Dialog","useVoiceRecorder","axios","ChatBody","props","Text","setText","socket","info","sendMessage","selectedConversation","currentConversationIsConnected","typingFlag","setTypingFlag","inputRef","emojiFlag","setEmojiFlag","modalOpen","setModalOpen","imageFlag","setImageFlag","imageURL","setImageURL","SelectedImageURL","setSelectedImageURL","audio","recordFlag","setRecordFlag","record","updateRecord","isRecording","stop","start","data","window","URL","createObjectURL","console","log","setRef","node","scrollIntoView","smooth","typing","e","target","value","current","emit","user","Conversation","handleSubmit","preventDefault","handleImage","FormData","append","files","response","post","url","imageCallback","err","openImage","onEmojiClick","event","emojiObject","emoji","Messages","map","message","index","lastMessage","length","sender","id","sessionStorage","name","containsImage","timeSent","substring","width","visibility"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\r\nimport { useState ,useCallback,useEffect} from 'react'\r\nimport { useConversations } from '../contexts/conversationsprovider';\r\nimport { useSocket} from '../contexts/socketprovider';\r\nimport { useUser} from '../contexts/userprovider';\r\nimport {IconButton } from '@material-ui/core'\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport Picker from 'emoji-picker-react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { useVoiceRecorder } from \"use-voice-recorder\";\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction ChatBody(props) {\r\n\r\n    const [Text,setText] = useState('')\r\n    const {socket} = useSocket()\r\n    const {info} = useUser()\r\n    const {sendMessage,selectedConversation,currentConversationIsConnected,typingFlag,setTypingFlag} = useConversations()\r\n    const inputRef = useRef(null)\r\n  \r\n    const [emojiFlag,setEmojiFlag] = useState(false)\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [imageFlag,setImageFlag] =useState(false)\r\n    const [imageURL,setImageURL] =useState(null)\r\n    const [SelectedImageURL,setSelectedImageURL] =useState(null)\r\n    let audio ='' \r\n\r\n    const [recordFlag,setRecordFlag] = useState(false)\r\n    const [record, updateRecord] = useState([]);\r\n    const {isRecording, stop, start} = useVoiceRecorder((data) => {\r\n      updateRecord( window.URL.createObjectURL(data));\r\n    });\r\n\r\n    useEffect(()=>\r\n    { \r\n\r\n      if(recordFlag)\r\n      {\r\n        console.log('here')\r\n        start()\r\n      }\r\n        \r\n      else\r\n      {\r\n        stop()\r\n        console.log(record)\r\n      }\r\n\r\n    },recordFlag)\r\n\r\n\r\n\r\n    const setRef = useCallback((node) => \r\n    {\r\n      if(node)\r\n         node.scrollIntoView({smooth:true})\r\n    },[])\r\n\r\n    function typing(e)\r\n    {\r\n        setText(e.target.value)\r\n        if (socket.current == null) return;\r\n        socket.current.emit(\"typing\", {user:info,Conversation:selectedConversation})\r\n    }\r\n\r\n    function handleSubmit(e)\r\n    {\r\n      e.preventDefault()\r\n      sendMessage(Text,false)\r\n      setText(' ')\r\n    }\r\n\r\n    async function handleImage(e)\r\n    {\r\n      const data = new FormData()\r\n      data.append('file',e.target.files[0])\r\n      data.append(\"upload_preset\",\"whatsApp_clone\")\r\n      data.append(\"cloud_name\",\"dsrgpqnyv\")\r\n      try{\r\n      let response = await axios.post(\"https://api.cloudinary.com/v1_1/dsrgpqnyv/image/upload\",data)\r\n      setImageURL(response.data.url)\r\n      setImageFlag(true)\r\n\r\n      props.imageCallback(response.data.url)\r\n      }catch(err){console.log(err)}\r\n    }\r\n\r\n    function openImage(URL)\r\n    {\r\n      setModalOpen(true)\r\n      setSelectedImageURL(URL)\r\n\r\n    }\r\n\r\n    \r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setText(Text + emojiObject.emoji)\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <div className= 'body_and_footer'>\r\n        <div className='chat_body'>\r\n        {selectedConversation.Messages.map((message,index)=>\r\n        {\r\n            const lastMessage = selectedConversation.Messages.length -1 === index\r\n            let sender = message.id==sessionStorage['id']? 'chat_message' : ' chat_message chat_reciever'\r\n\r\n            return (\r\n            <div>\r\n             <p className={sender} ref={lastMessage ? setRef : null}>\r\n            <span className='sender_name'>{message.name}</span>\r\n            {message.containsImage? \r\n            <img className='image_in_message' src={message.imageURL} onClick={()=>openImage(message.imageURL)} width='200px' height='200px' /> \r\n            : ''}\r\n          \r\n            <p className='message_time_and_content'><span className='message_content'>{message.message}</span> \r\n            <span className='message_time'>{(message.timeSent).substring(11,17)}</span> </p>\r\n    \r\n             </p> \r\n\r\n             <Dialog onClose={()=> setModalOpen(false)}  open={modalOpen}>\r\n                <img src={SelectedImageURL}  height='500px' width='500px'/>\r\n            </Dialog>\r\n            \r\n          \r\n             </div>\r\n       \r\n            )}\r\n\r\n     \r\n         )}\r\n\r\n    </div>\r\n\r\n   <div className='chat_footer_with_stickers'>\r\n      {emojiFlag?  <Picker onEmojiClick={(e,emojiObject)=>onEmojiClick(e,emojiObject)} pickerStyle={{ width: '100%' }}/>: ''}\r\n      <div className='chat_footer'>\r\n      {emojiFlag? <IconButton  onClick={()=>setEmojiFlag(false)}><CloseIcon fontSize='large'/> </IconButton>:''}\r\n      <IconButton  onClick={()=>setEmojiFlag(true)}>\r\n         <InsertEmoticonIcon fontSize='large'/>\r\n      </IconButton>\r\n      <input accept=\"image/*\" className='invisibleInput' id=\"icon-button-file\" type=\"file\"  style={{ visibility: 'hidden'}} onChange={handleImage}/>\r\n      <label htmlFor=\"icon-button-file\">\r\n       <IconButton component=\"span\">\r\n         < ImageIcon  fontSize='large'></ImageIcon>\r\n       </IconButton>\r\n      </label> \r\n\r\n      <form onSubmit={handleSubmit} className='message_section'>\r\n         <input className='message_input' ref={inputRef}  value={Text} onChange={typing} type='text' placeholder='type a message'/>\r\n         <button type='submit' > send </button>\r\n      </form>\r\n      <IconButton>\r\n         <MicIcon fontSize='large' onClick={() => {setRecordFlag(!recordFlag)}}/>\r\n      </IconButton>\r\n      {audio}\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default ChatBody\r\n"]},"metadata":{},"sourceType":"module"}