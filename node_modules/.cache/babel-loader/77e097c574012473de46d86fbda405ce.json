{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\conversations.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { useUser } from '../contexts/userprovider';\nimport '../css/conversations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversations() {\n  _s();\n\n  const {\n    setSelectedConversation,\n    selectedConversation,\n    conversations\n  } = useConversations();\n  const {\n    info\n  } = useUser();\n\n  const handleSelectedConversation = async conversation => {\n    if (selectedConversation) {\n      let user = {\n        id: info.id,\n        phone: info.phone,\n        name: info.name,\n        image: info.imageName,\n        LastMessageRead: conversation.LastMessage\n      };\n      let newParticipants = [...conversation.participants, user];\n      let UpdatedConversation = { ...conversation,\n        participants: newParticipants\n      };\n      delete UpdatedConversation._id;\n\n      try {\n        let response = await axios.put(conversation._id, UpdatedConversation);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    setSelectedConversation(conversation);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chats\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts_list\",\n      children: conversations.map((conversation, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleSelectedConversation(conversation),\n          className: \"ChatsListItem\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: process.env.PUBLIC_URL + conversation.ConversationImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chatName\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: conversation.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 52\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", conversation.LastMessage.message.slice(0, 25), \"... \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 22\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Conversations, \"JsIBh/IHtQR6F+2HJs+JJbfJptE=\", false, function () {\n  return [useConversations, useUser];\n});\n\n_c = Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/conversations.js"],"names":["Avatar","axios","React","useConversations","useUser","Conversations","setSelectedConversation","selectedConversation","conversations","info","handleSelectedConversation","conversation","user","id","phone","name","image","imageName","LastMessageRead","LastMessage","newParticipants","participants","UpdatedConversation","_id","response","put","err","console","log","map","index","process","env","PUBLIC_URL","ConversationImage","Name","message","slice"],"mappings":";;;AAAA,SAASA,MAAT,QAAsB,mBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAO,0BAAP;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM;AAACC,IAAAA,uBAAD;AAAyBC,IAAAA,oBAAzB;AAA8CC,IAAAA;AAA9C,MAA8DL,gBAAgB,EAApF;AACA,QAAM;AAACM,IAAAA;AAAD,MAAQL,OAAO,EAArB;;AAEJ,QAAMM,0BAA0B,GAAE,MAAOC,YAAP,IAClC;AACI,QAAGJ,oBAAH,EACA;AACE,UAAIK,IAAI,GAAG;AAACC,QAAAA,EAAE,EAAEJ,IAAI,CAACI,EAAV;AAAaC,QAAAA,KAAK,EAAEL,IAAI,CAACK,KAAzB;AAA+BC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAA1C;AAA+CC,QAAAA,KAAK,EAAEP,IAAI,CAACQ,SAA3D;AAAqEC,QAAAA,eAAe,EAACP,YAAY,CAACQ;AAAlG,OAAX;AACA,UAAIC,eAAe,GAAG,CAAC,GAAGT,YAAY,CAACU,YAAjB,EAA8BT,IAA9B,CAAtB;AAEA,UAAIU,mBAAmB,GAAG,EAAC,GAAGX,YAAJ;AAAiBU,QAAAA,YAAY,EAACD;AAA9B,OAA1B;AACA,aAAQE,mBAAmB,CAACC,GAA5B;;AACA,UACA;AACA,YAAIC,QAAQ,GAAC,MAAMvB,KAAK,CAACwB,GAAN,CAAUd,YAAY,CAACY,GAAvB,EAA2BD,mBAA3B,CAAnB;AACC,OAHD,CAIA,OAAMI,GAAN,EAAU;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB;AAC7B;;AACDpB,IAAAA,uBAAuB,CAACK,YAAD,CAAvB;AACH,GAhBD;;AAiBE,sBACQ;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACCH,aAAa,CAACqB,GAAd,CAAkB,CAAClB,YAAD,EAAcmB,KAAd,KACnB;AACG,4BAAU;AAAkB,UAAA,OAAO,EAAE,MAAIpB,0BAA0B,CAACC,YAAD,CAAzD;AAA0E,UAAA,SAAS,EAAC,eAApF;AAAA,kCACN,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEoB,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBtB,YAAY,CAACuB;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADM,eAEN;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACA;AAAQ,cAAA,SAAS,EAAC,UAAlB;AAAA,sCAA8B;AAAA,0BAAKvB,YAAY,CAACwB;AAAlB;AAAA;AAAA;AAAA;AAAA,sBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,8BAASxB,YAAY,CAACQ,WAAb,CAAyBiB,OAA1B,CAAmCC,KAAnC,CAAyC,CAAzC,EAA2C,EAA3C,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFM;AAAA,WAAUP,KAAV;AAAA;AAAA;AAAA;AAAA,gBAAV;AASA,OAXF;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADR;AAqBD;;GA1CuBzB,a;UACgDF,gB,EACtDC,O;;;KAFMC,a","sourcesContent":["import { Avatar} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { useConversations } from '../contexts/conversationsprovider';\r\nimport { useUser } from '../contexts/userprovider';\r\nimport '../css/conversations.css'\r\n\r\nexport default function Conversations() {\r\n    const {setSelectedConversation,selectedConversation,conversations} =useConversations()\r\n    const {info} =useUser()\r\n  \r\nconst handleSelectedConversation= async (conversation) =>\r\n{\r\n    if(selectedConversation)\r\n    {\r\n      let user = {id: info.id,phone: info.phone,name: info.name,image: info.imageName,LastMessageRead:conversation.LastMessage}\r\n      let newParticipants = [...conversation.participants,user]\r\n\r\n      let UpdatedConversation = {...conversation,participants:newParticipants}\r\n      delete (UpdatedConversation._id)\r\n      try\r\n      {\r\n      let response=await axios.put(conversation._id,UpdatedConversation)\r\n      }\r\n      catch(err){console.log(err)}\r\n    }\r\n    setSelectedConversation(conversation)\r\n}\r\n  return (\r\n          <div className='Chats' >\r\n              <div className='contacts_list'>\r\n              {conversations.map((conversation,index)=>\r\n              {\r\n                 return  ( <div key={index}  onClick={()=>handleSelectedConversation(conversation)}  className='ChatsListItem'>\r\n                     <Avatar src={process.env.PUBLIC_URL + conversation.ConversationImage}/>\r\n                     <div className='chatInfo'>\r\n                     <span   className='chatName' ><h2>{conversation.Name}</h2> </span>\r\n                     <span> {(conversation.LastMessage.message).slice(0,25)}... </span>\r\n                     </div>\r\n            \r\n                  </div>)\r\n                    \r\n                })}\r\n                </div>\r\n\r\n                </div>\r\n          \r\n\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}