{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\whatsapp\\\\myclient\\\\src\\\\components\\\\chatbody.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useConversations } from '../contexts/conversationsprovider';\nimport { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatBody() {\n  _s();\n\n  const setRef = useCallback(node => {\n    if (node) node.scrollIntoView({\n      smooth: true\n    });\n  }, []);\n  const {\n    selectedConversation\n  } = useConversations();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_body\",\n    children: selectedConversation.Messages.map((message, index) => {\n      const lastMessage = selectedConversation.Messages.length - 1 === index;\n      let sender = message.id == sessionStorage['id'] ? 'chat_message' : ' chat_message chat_reciever';\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: sender,\n        ref: lastMessage ? setRef : null,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sender_name\",\n          children: message.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message_time_and_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message_content\",\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message_time\",\n            children: message.timeSent.substring(11, 16)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatBody, \"O0SiGEamnDzqdsEapg/3MCnj8Qk=\", false, function () {\n  return [useConversations];\n});\n\n_c = ChatBody;\nexport default ChatBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/whatsapp/myclient/src/components/chatbody.js"],"names":["React","useConversations","useState","useCallback","ChatBody","setRef","node","scrollIntoView","smooth","selectedConversation","Messages","map","message","index","lastMessage","length","sender","id","sessionStorage","name","timeSent","substring"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAqC,OAArC;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAMC,MAAM,GAAGF,WAAW,CAAEG,IAAD,IAC3B;AACE,QAAGA,IAAH,EACGA,IAAI,CAACC,cAAL,CAAoB;AAACC,MAAAA,MAAM,EAAC;AAAR,KAApB;AACJ,GAJyB,EAIxB,EAJwB,CAA1B;AAMA,QAAM;AAACC,IAAAA;AAAD,MAAyBR,gBAAgB,EAA/C;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACCQ,oBAAoB,CAACC,QAArB,CAA8BC,GAA9B,CAAkC,CAACC,OAAD,EAASC,KAAT,KACnC;AACI,YAAMC,WAAW,GAAGL,oBAAoB,CAACC,QAArB,CAA8BK,MAA9B,GAAsC,CAAtC,KAA4CF,KAAhE;AACA,UAAIG,MAAM,GAAGJ,OAAO,CAACK,EAAR,IAAYC,cAAc,CAAC,IAAD,CAA1B,GAAkC,cAAlC,GAAmD,6BAAhE;AAEA,0BAEC;AAAG,QAAA,SAAS,EAAEF,MAAd;AAAsB,QAAA,GAAG,EAAEF,WAAW,GAAGT,MAAH,GAAY,IAAlD;AAAA,gCAED;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,oBAA+BO,OAAO,CAACO;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFC,eAGD;AAAG,UAAA,SAAS,EAAC,0BAAb;AAAA,kCAAwC;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA,sBAAmCP,OAAO,CAACA;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAAxC,eACA;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA,sBAAiCA,OAAO,CAACQ,QAAT,CAAmBC,SAAnB,CAA6B,EAA7B,EAAgC,EAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBADA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AASE,KAdL;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA9BQjB,Q;UAQ0BH,gB;;;KAR1BG,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport { useConversations } from '../contexts/conversationsprovider';\r\nimport { useState ,useCallback} from 'react'\r\n\r\nfunction ChatBody() {\r\n\r\n    const setRef = useCallback((node) => \r\n    {\r\n      if(node)\r\n         node.scrollIntoView({smooth:true})\r\n    },[])\r\n\r\n    const {selectedConversation} = useConversations()\r\n    return (\r\n        <div className='chat_body'>\r\n        {selectedConversation.Messages.map((message,index)=>\r\n        {\r\n            const lastMessage = selectedConversation.Messages.length -1 === index\r\n            let sender = message.id==sessionStorage['id']? 'chat_message' : ' chat_message chat_reciever'\r\n\r\n            return (\r\n           \r\n             <p className={sender} ref={lastMessage ? setRef : null}>\r\n\r\n            <span className='sender_name'>{message.name}</span>\r\n            <p className='message_time_and_content'><span className='message_content'>{message.message}</span> \r\n            <span className='message_time'>{(message.timeSent).substring(11,16)}</span> </p>\r\n             </p>\r\n       \r\n            )}\r\n         )}\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ChatBody\r\n"]},"metadata":{},"sourceType":"module"}